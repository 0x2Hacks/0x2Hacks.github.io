export declare type RequestDelayFunction = (attempt: number, error: Error | null, response: Response | null) => number;
export declare type RetryRequestFunction = (attempt: number, retries: number, error: Error | null, response: Response | null) => boolean;
export interface FetchRetryParams {
    retries?: number;
    retryDelay?: number | RequestDelayFunction;
    retryOn?: number[] | RetryRequestFunction;
}
export default function <F extends (...args: any) => Promise<any> = typeof fetch>(fetchFunc: F, params?: FetchRetryParams): (input: Parameters<F>[0], init?: Parameters<F>[1] & FetchRetryParams) => ReturnType<F>;
