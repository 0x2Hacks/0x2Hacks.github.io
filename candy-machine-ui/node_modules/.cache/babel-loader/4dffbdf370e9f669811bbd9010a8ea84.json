{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AssignablePublicKey = void 0;\n\nvar solanaBorsh_1 = require(\"./solanaBorsh\");\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n/**\n * A Borsh-compatible public key object\n *\n * The pattern for these objects is to have their properties dynamically\n * assigned by borsh.decode, as opposed to via a constructor.\n *\n * The imperative assignment operator (!) is used to avoid Typescript\n * complaining about the above.\n */\n\n\nvar AssignablePublicKey = /*#__PURE__*/function (_solanaBorsh_1$Assign) {\n  _inherits(AssignablePublicKey, _solanaBorsh_1$Assign);\n\n  var _super = _createSuper(AssignablePublicKey);\n\n  function AssignablePublicKey() {\n    _classCallCheck(this, AssignablePublicKey);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AssignablePublicKey, [{\n    key: \"toPublicKey\",\n    value: function toPublicKey() {\n      return new web3_js_1.PublicKey(this.bytes);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.toPublicKey().toBase58();\n    }\n  }], [{\n    key: \"parse\",\n    value: function parse(pubkey) {\n      return AssignablePublicKey.fromPublicKey(new web3_js_1.PublicKey(pubkey));\n    }\n  }, {\n    key: \"fromPublicKey\",\n    value: function fromPublicKey(publicKey) {\n      return new AssignablePublicKey({\n        bytes: Uint8Array.from(publicKey.toBuffer())\n      });\n    }\n  }, {\n    key: \"empty\",\n    value: function empty() {\n      var bytes = new Array(32);\n      bytes.fill(0);\n      return new AssignablePublicKey({\n        bytes: bytes\n      });\n    }\n  }]);\n\n  return AssignablePublicKey;\n}(solanaBorsh_1.Assignable);\n\nexports.AssignablePublicKey = AssignablePublicKey;\nsolanaBorsh_1.SCHEMA.set(AssignablePublicKey, {\n  kind: \"struct\",\n  fields: [[\"bytes\", [32]]]\n});","map":{"version":3,"sources":["../../src/lib/AssignablePublicKey.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;AAEA;;;;;;;;AAQG;;;IACU,mB;;;;;;;;;;;;;WAIX,uBAAW;AACT,aAAO,IAAI,SAAA,CAAA,SAAJ,CAAc,KAAK,KAAnB,CAAP;AACD;;;WAED,oBAAQ;AACN,aAAO,KAAK,WAAL,GAAmB,QAAnB,EAAP;AACD;;;WAED,eAAa,MAAb,EAA2B;AACzB,aAAO,mBAAmB,CAAC,aAApB,CAAkC,IAAI,SAAA,CAAA,SAAJ,CAAc,MAAd,CAAlC,CAAP;AACD;;;WAED,uBAAqB,SAArB,EAAyC;AACvC,aAAO,IAAI,mBAAJ,CAAwB;AAC7B,QAAA,KAAK,EAAE,UAAU,CAAC,IAAX,CAAgB,SAAS,CAAC,QAAV,EAAhB;AADsB,OAAxB,CAAP;AAGD;;;WAED,iBAAY;AACV,UAAM,KAAK,GAAG,IAAI,KAAJ,CAAU,EAAV,CAAd;AACA,MAAA,KAAK,CAAC,IAAN,CAAW,CAAX;AACA,aAAO,IAAI,mBAAJ,CAAwB;AAAE,QAAA,KAAK,EAAL;AAAF,OAAxB,CAAP;AACD;;;;EA1BsC,aAAA,CAAA,U;;AAAzC,OAAA,CAAA,mBAAA,GAAA,mBAAA;AA6BA,aAAA,CAAA,MAAA,CAAO,GAAP,CAAW,mBAAX,EAAgC;AAC9B,EAAA,IAAI,EAAE,QADwB;AAE9B,EAAA,MAAM,EAAE,CAAC,CAAC,OAAD,EAAU,CAAC,EAAD,CAAV,CAAD;AAFsB,CAAhC","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssignablePublicKey = void 0;\nconst solanaBorsh_1 = require(\"./solanaBorsh\");\nconst web3_js_1 = require(\"@solana/web3.js\");\n/**\n * A Borsh-compatible public key object\n *\n * The pattern for these objects is to have their properties dynamically\n * assigned by borsh.decode, as opposed to via a constructor.\n *\n * The imperative assignment operator (!) is used to avoid Typescript\n * complaining about the above.\n */\nclass AssignablePublicKey extends solanaBorsh_1.Assignable {\n    toPublicKey() {\n        return new web3_js_1.PublicKey(this.bytes);\n    }\n    toString() {\n        return this.toPublicKey().toBase58();\n    }\n    static parse(pubkey) {\n        return AssignablePublicKey.fromPublicKey(new web3_js_1.PublicKey(pubkey));\n    }\n    static fromPublicKey(publicKey) {\n        return new AssignablePublicKey({\n            bytes: Uint8Array.from(publicKey.toBuffer()),\n        });\n    }\n    static empty() {\n        const bytes = new Array(32);\n        bytes.fill(0);\n        return new AssignablePublicKey({ bytes });\n    }\n}\nexports.AssignablePublicKey = AssignablePublicKey;\nsolanaBorsh_1.SCHEMA.set(AssignablePublicKey, {\n    kind: \"struct\",\n    fields: [[\"bytes\", [32]]],\n});\n//# sourceMappingURL=AssignablePublicKey.js.map"]},"metadata":{},"sourceType":"script"}