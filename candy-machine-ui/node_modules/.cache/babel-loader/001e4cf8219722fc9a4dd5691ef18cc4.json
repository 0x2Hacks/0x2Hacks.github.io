{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\n\nvar _regeneratorRuntime = require(\"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _asyncToGenerator = require(\"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nvar remoteSign_1 = require(\"../utils/remoteSign\");\n\nvar logger_1 = __importDefault(require(\"../logger\"));\n\nvar logDebug = function logDebug(message) {\n  var obj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return logger_1.default.debug(\"[useCivicPassEventListener] \".concat(message), obj);\n};\n\nvar logError = function logError(message) {\n  var obj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return logger_1.default.error(\"[useCivicPassEventListener] \".concat(message), obj);\n};\n\nvar useCivicPassEventListener = function useCivicPassEventListener(_ref) {\n  var wallet = _ref.wallet,\n      chainImplementation = _ref.chainImplementation,\n      remoteSign = _ref.remoteSign;\n\n  var dispatchEvent = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(response) {\n      var _events;\n\n      var remoteSigner, events, event;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (wallet) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 2:\n              remoteSigner = remoteSign !== null && remoteSign !== void 0 ? remoteSign : (0, remoteSign_1.remoteSignWindowEventEmitterImplementation)();\n              events = (_events = {}, _defineProperty(_events, remoteSign_1.CivicSignEventTypeRequest.REQUEST_PUBLIC_KEY, function () {\n                return new Promise(function (resolve) {\n                  remoteSigner === null || remoteSigner === void 0 ? void 0 : remoteSigner.sendPublicKey(wallet.publicKey);\n                  resolve();\n                });\n              }), _defineProperty(_events, remoteSign_1.CivicSignEventTypeRequest.REQUEST_DID, function () {\n                return new Promise(function (resolve) {\n                  remoteSigner === null || remoteSigner === void 0 ? void 0 : remoteSigner.sendDid(\"did:sol:\".concat(wallet.publicKey));\n                  resolve();\n                });\n              }), _defineProperty(_events, remoteSign_1.CivicSignEventTypeRequest.REQUEST_SIGNED_PROOF, _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                var proof;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.prev = 0;\n                        _context.next = 3;\n                        return chainImplementation.proveWalletOwnership();\n\n                      case 3:\n                        proof = _context.sent;\n                        remoteSigner === null || remoteSigner === void 0 ? void 0 : remoteSigner.sendSignedProof(proof);\n                        _context.next = 10;\n                        break;\n\n                      case 7:\n                        _context.prev = 7;\n                        _context.t0 = _context[\"catch\"](0);\n                        logError('Error signing proof', _context.t0);\n\n                      case 10:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[0, 7]]);\n              }))), _events);\n              event = events[response];\n\n              if (!event) {\n                _context2.next = 9;\n                break;\n              }\n\n              _context2.next = 8;\n              return event();\n\n            case 8:\n              logDebug('Successfully emitted compliance event', response);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function dispatchEvent(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  /**\n   * Listen for post messages from the compliance iframe and dispatch events\n   * based on the event type\n   */\n\n\n  (0, react_1.useEffect)(function () {\n    var handler = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(response) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return dispatchEvent(response.data);\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function handler(_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    window.addEventListener('message', handler);\n    return function () {\n      logDebug('Removing event listener for compliance');\n      return window.removeEventListener('message', handler);\n    };\n  }, []);\n  return {\n    dispatchEvent: dispatchEvent\n  };\n};\n\nexports.default = useCivicPassEventListener;","map":{"version":3,"sources":["/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@civic/common-gateway-react/dist/esm/useHooks/useCivicPassEventListener.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","react_1","require","remoteSign_1","logger_1","logDebug","message","obj","default","debug","logError","error","useCivicPassEventListener","wallet","chainImplementation","remoteSign","dispatchEvent","response","remoteSigner","remoteSignWindowEventEmitterImplementation","events","CivicSignEventTypeRequest","REQUEST_PUBLIC_KEY","Promise","resolve","sendPublicKey","publicKey","REQUEST_DID","sendDid","REQUEST_SIGNED_PROOF","proveWalletOwnership","proof","sendSignedProof","event","useEffect","handler","data","window","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = require(\"react\");\nconst remoteSign_1 = require(\"../utils/remoteSign\");\nconst logger_1 = __importDefault(require(\"../logger\"));\nconst logDebug = (message, obj = null) => logger_1.default.debug(`[useCivicPassEventListener] ${message}`, obj);\nconst logError = (message, obj = null) => logger_1.default.error(`[useCivicPassEventListener] ${message}`, obj);\nconst useCivicPassEventListener = ({ wallet, chainImplementation, remoteSign, }) => {\n    const dispatchEvent = async (response) => {\n        if (!wallet)\n            return;\n        const remoteSigner = remoteSign !== null && remoteSign !== void 0 ? remoteSign : (0, remoteSign_1.remoteSignWindowEventEmitterImplementation)();\n        const events = {\n            [remoteSign_1.CivicSignEventTypeRequest.REQUEST_PUBLIC_KEY]: () => new Promise((resolve) => {\n                remoteSigner === null || remoteSigner === void 0 ? void 0 : remoteSigner.sendPublicKey(wallet.publicKey);\n                resolve();\n            }),\n            [remoteSign_1.CivicSignEventTypeRequest.REQUEST_DID]: () => new Promise((resolve) => {\n                remoteSigner === null || remoteSigner === void 0 ? void 0 : remoteSigner.sendDid(`did:sol:${wallet.publicKey}`);\n                resolve();\n            }),\n            [remoteSign_1.CivicSignEventTypeRequest.REQUEST_SIGNED_PROOF]: async () => {\n                try {\n                    const proof = await chainImplementation.proveWalletOwnership();\n                    remoteSigner === null || remoteSigner === void 0 ? void 0 : remoteSigner.sendSignedProof(proof);\n                }\n                catch (err) {\n                    logError('Error signing proof', err);\n                }\n            },\n        };\n        const event = events[response];\n        if (event) {\n            await event();\n            logDebug('Successfully emitted compliance event', response);\n        }\n    };\n    /**\n     * Listen for post messages from the compliance iframe and dispatch events\n     * based on the event type\n     */\n    (0, react_1.useEffect)(() => {\n        const handler = async (response) => {\n            await dispatchEvent(response.data);\n        };\n        window.addEventListener('message', handler);\n        return () => {\n            logDebug('Removing event listener for compliance');\n            return window.removeEventListener('message', handler);\n        };\n    }, []);\n    return { dispatchEvent };\n};\nexports.default = useCivicPassEventListener;\n"]},"metadata":{},"sourceType":"script"}