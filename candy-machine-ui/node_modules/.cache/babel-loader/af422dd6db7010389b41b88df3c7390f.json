{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeConfig = exports.getGatekeeperEndpoint = exports.GATEKEEPER_ENDPOINTS = void 0;\nconst solanaVersionedEndpoint = 'v1/token/solana';\nexports.GATEKEEPER_ENDPOINTS = {\n  local: `http://localhost:3001/local/${solanaVersionedEndpoint}`,\n  test: `https://dev-gatekeeper-api.civic.com/${solanaVersionedEndpoint}`,\n  dev: `https://dev-gatekeeper-api.civic.com/${solanaVersionedEndpoint}`,\n  preprod: `https://preprod-gatekeeper-api.civic.com/${solanaVersionedEndpoint}`,\n  prod: `https://gatekeeper-api.civic.com/${solanaVersionedEndpoint}`\n};\n\nconst getGatekeeperEndpoint = stage => {\n  const endpoint = exports.GATEKEEPER_ENDPOINTS[stage];\n\n  if (!endpoint) {\n    throw new Error(`Invalid stage ${stage}`);\n  }\n\n  return endpoint;\n};\n\nexports.getGatekeeperEndpoint = getGatekeeperEndpoint;\n\nconst makeConfig = (clusterUrl, cluster) => {\n  return {\n    cluster,\n    commitment: 'confirmed',\n    // this map instructs the POWO library to use clusterUrl\n    // to connect to the solana network. This avoids rate limiting issues with using the default\n    // public urls\n    supportedClusterUrls: {\n      [cluster]: clusterUrl\n    },\n    recentBlockCheck: false,\n    broadcastCheck: false\n  };\n};\n\nexports.makeConfig = makeConfig;","map":{"version":3,"sources":["/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@civic/solana-gateway-react/dist/esm/config.js"],"names":["Object","defineProperty","exports","value","makeConfig","getGatekeeperEndpoint","GATEKEEPER_ENDPOINTS","solanaVersionedEndpoint","local","test","dev","preprod","prod","stage","endpoint","Error","clusterUrl","cluster","commitment","supportedClusterUrls","recentBlockCheck","broadcastCheck"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,UAAR,GAAqBF,OAAO,CAACG,qBAAR,GAAgCH,OAAO,CAACI,oBAAR,GAA+B,KAAK,CAAzF;AACA,MAAMC,uBAAuB,GAAG,iBAAhC;AACAL,OAAO,CAACI,oBAAR,GAA+B;AAC3BE,EAAAA,KAAK,EAAG,+BAA8BD,uBAAwB,EADnC;AAE3BE,EAAAA,IAAI,EAAG,wCAAuCF,uBAAwB,EAF3C;AAG3BG,EAAAA,GAAG,EAAG,wCAAuCH,uBAAwB,EAH1C;AAI3BI,EAAAA,OAAO,EAAG,4CAA2CJ,uBAAwB,EAJlD;AAK3BK,EAAAA,IAAI,EAAG,oCAAmCL,uBAAwB;AALvC,CAA/B;;AAOA,MAAMF,qBAAqB,GAAIQ,KAAD,IAAW;AACrC,QAAMC,QAAQ,GAAGZ,OAAO,CAACI,oBAAR,CAA6BO,KAA7B,CAAjB;;AACA,MAAI,CAACC,QAAL,EAAe;AACX,UAAM,IAAIC,KAAJ,CAAW,iBAAgBF,KAAM,EAAjC,CAAN;AACH;;AACD,SAAOC,QAAP;AACH,CAND;;AAOAZ,OAAO,CAACG,qBAAR,GAAgCA,qBAAhC;;AACA,MAAMD,UAAU,GAAG,CAACY,UAAD,EAAaC,OAAb,KAAyB;AACxC,SAAO;AACHA,IAAAA,OADG;AAEHC,IAAAA,UAAU,EAAE,WAFT;AAGH;AACA;AACA;AACAC,IAAAA,oBAAoB,EAAE;AAClB,OAACF,OAAD,GAAWD;AADO,KANnB;AASHI,IAAAA,gBAAgB,EAAE,KATf;AAUHC,IAAAA,cAAc,EAAE;AAVb,GAAP;AAYH,CAbD;;AAcAnB,OAAO,CAACE,UAAR,GAAqBA,UAArB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeConfig = exports.getGatekeeperEndpoint = exports.GATEKEEPER_ENDPOINTS = void 0;\nconst solanaVersionedEndpoint = 'v1/token/solana';\nexports.GATEKEEPER_ENDPOINTS = {\n    local: `http://localhost:3001/local/${solanaVersionedEndpoint}`,\n    test: `https://dev-gatekeeper-api.civic.com/${solanaVersionedEndpoint}`,\n    dev: `https://dev-gatekeeper-api.civic.com/${solanaVersionedEndpoint}`,\n    preprod: `https://preprod-gatekeeper-api.civic.com/${solanaVersionedEndpoint}`,\n    prod: `https://gatekeeper-api.civic.com/${solanaVersionedEndpoint}`,\n};\nconst getGatekeeperEndpoint = (stage) => {\n    const endpoint = exports.GATEKEEPER_ENDPOINTS[stage];\n    if (!endpoint) {\n        throw new Error(`Invalid stage ${stage}`);\n    }\n    return endpoint;\n};\nexports.getGatekeeperEndpoint = getGatekeeperEndpoint;\nconst makeConfig = (clusterUrl, cluster) => {\n    return {\n        cluster,\n        commitment: 'confirmed',\n        // this map instructs the POWO library to use clusterUrl\n        // to connect to the solana network. This avoids rate limiting issues with using the default\n        // public urls\n        supportedClusterUrls: {\n            [cluster]: clusterUrl,\n        },\n        recentBlockCheck: false,\n        broadcastCheck: false,\n    };\n};\nexports.makeConfig = makeConfig;\n"]},"metadata":{},"sourceType":"script"}