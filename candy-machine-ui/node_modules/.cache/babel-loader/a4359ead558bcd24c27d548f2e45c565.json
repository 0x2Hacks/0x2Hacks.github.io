{"ast":null,"code":"var Range = require('../classes/range');\n\nvar validRange = function validRange(range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*';\n  } catch (er) {\n    return null;\n  }\n};\n\nmodule.exports = validRange;","map":{"version":3,"sources":["/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@ledgerhq/devices/node_modules/semver/ranges/valid.js"],"names":["Range","require","validRange","range","options","er","module","exports"],"mappings":"AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,kBAAD,CAArB;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAQC,OAAR,EAAoB;AACrC,MAAI;AACF;AACA;AACA,WAAO,IAAIJ,KAAJ,CAAUG,KAAV,EAAiBC,OAAjB,EAA0BD,KAA1B,IAAmC,GAA1C;AACD,GAJD,CAIE,OAAOE,EAAP,EAAW;AACX,WAAO,IAAP;AACD;AACF,CARD;;AASAC,MAAM,CAACC,OAAP,GAAiBL,UAAjB","sourcesContent":["const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n"]},"metadata":{},"sourceType":"script"}