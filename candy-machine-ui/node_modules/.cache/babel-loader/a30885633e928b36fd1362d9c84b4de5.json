{"ast":null,"code":"import _createForOfIteratorHelper from \"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _regeneratorRuntime from \"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/regenerator/index.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport TransportWebHid from '@ledgerhq/hw-transport-webhid';\nimport { BaseSignerWalletAdapter, WalletConnectionError, WalletDisconnectedError, WalletDisconnectionError, WalletNotConnectedError, WalletPublicKeyError, WalletSignTransactionError } from '@solana/wallet-adapter-base';\nimport { getDerivationPath, getPublicKey, signTransaction as _signTransaction } from './util';\nexport var LedgerWalletAdapter = /*#__PURE__*/function (_BaseSignerWalletAdap) {\n  _inherits(LedgerWalletAdapter, _BaseSignerWalletAdap);\n\n  var _super = _createSuper(LedgerWalletAdapter);\n\n  function LedgerWalletAdapter() {\n    var _this;\n\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, LedgerWalletAdapter);\n\n    _this = _super.call(this);\n\n    _this._disconnected = function () {\n      var transport = _this._transport;\n\n      if (transport) {\n        transport.off('disconnect', _this._disconnected);\n        _this._transport = null;\n        _this._publicKey = null;\n\n        _this.emit('error', new WalletDisconnectedError());\n\n        _this.emit('disconnect');\n      }\n    };\n\n    _this._derivationPath = config.derivationPath || getDerivationPath(0, 0);\n    _this._connecting = false;\n    _this._transport = null;\n    _this._publicKey = null;\n    return _this;\n  }\n\n  _createClass(LedgerWalletAdapter, [{\n    key: \"publicKey\",\n    get: function get() {\n      return this._publicKey;\n    }\n  }, {\n    key: \"ready\",\n    get: function get() {\n      return typeof window !== 'undefined' && !!navigator.hid;\n    }\n  }, {\n    key: \"connecting\",\n    get: function get() {\n      return this._connecting;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return !!this._transport;\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var transport, publicKey;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!(this.connected || this.connecting)) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                this._connecting = true;\n                _context.prev = 4;\n                _context.next = 7;\n                return TransportWebHid.create();\n\n              case 7:\n                transport = _context.sent;\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](4);\n                throw new WalletConnectionError(_context.t0 === null || _context.t0 === void 0 ? void 0 : _context.t0.message, _context.t0);\n\n              case 13:\n                _context.prev = 13;\n                _context.next = 16;\n                return getPublicKey(transport, this._derivationPath);\n\n              case 16:\n                publicKey = _context.sent;\n                _context.next = 22;\n                break;\n\n              case 19:\n                _context.prev = 19;\n                _context.t1 = _context[\"catch\"](13);\n                throw new WalletPublicKeyError(_context.t1 === null || _context.t1 === void 0 ? void 0 : _context.t1.message, _context.t1);\n\n              case 22:\n                transport.on('disconnect', this._disconnected);\n                this._transport = transport;\n                this._publicKey = publicKey;\n                this.emit('connect');\n                _context.next = 32;\n                break;\n\n              case 28:\n                _context.prev = 28;\n                _context.t2 = _context[\"catch\"](0);\n                this.emit('error', _context.t2);\n                throw _context.t2;\n\n              case 32:\n                _context.prev = 32;\n                this._connecting = false;\n                return _context.finish(32);\n\n              case 35:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 28, 32, 35], [4, 10], [13, 19]]);\n      }));\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var transport;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                transport = this._transport;\n\n                if (!transport) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                transport.off('disconnect', this._disconnected);\n                this._transport = null;\n                this._publicKey = null;\n                _context2.prev = 5;\n                _context2.next = 8;\n                return transport.close();\n\n              case 8:\n                _context2.next = 13;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](5);\n                this.emit('error', new WalletDisconnectionError(_context2.t0 === null || _context2.t0 === void 0 ? void 0 : _context2.t0.message, _context2.t0));\n\n              case 13:\n                this.emit('disconnect');\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 10]]);\n      }));\n    }\n  }, {\n    key: \"signTransaction\",\n    value: function signTransaction(transaction) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var transport, publicKey, signature;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                transport = this._transport;\n                publicKey = this._publicKey;\n\n                if (!(!transport || !publicKey)) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                throw new WalletNotConnectedError();\n\n              case 5:\n                _context3.prev = 5;\n                _context3.next = 8;\n                return _signTransaction(transport, transaction, this._derivationPath);\n\n              case 8:\n                signature = _context3.sent;\n                transaction.addSignature(publicKey, signature);\n                _context3.next = 15;\n                break;\n\n              case 12:\n                _context3.prev = 12;\n                _context3.t0 = _context3[\"catch\"](5);\n                throw new WalletSignTransactionError(_context3.t0 === null || _context3.t0 === void 0 ? void 0 : _context3.t0.message, _context3.t0);\n\n              case 15:\n                return _context3.abrupt(\"return\", transaction);\n\n              case 18:\n                _context3.prev = 18;\n                _context3.t1 = _context3[\"catch\"](0);\n                this.emit('error', _context3.t1);\n                throw _context3.t1;\n\n              case 22:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 18], [5, 12]]);\n      }));\n    }\n  }, {\n    key: \"signAllTransactions\",\n    value: function signAllTransactions(transactions) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var transport, publicKey, derivationPath, _iterator, _step, transaction, signature;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                transport = this._transport;\n                publicKey = this._publicKey;\n\n                if (!(!transport || !publicKey)) {\n                  _context4.next = 5;\n                  break;\n                }\n\n                throw new WalletNotConnectedError();\n\n              case 5:\n                _context4.prev = 5;\n                derivationPath = this._derivationPath;\n                _iterator = _createForOfIteratorHelper(transactions);\n                _context4.prev = 8;\n\n                _iterator.s();\n\n              case 10:\n                if ((_step = _iterator.n()).done) {\n                  _context4.next = 18;\n                  break;\n                }\n\n                transaction = _step.value;\n                _context4.next = 14;\n                return _signTransaction(transport, transaction, derivationPath);\n\n              case 14:\n                signature = _context4.sent;\n                transaction.addSignature(publicKey, signature);\n\n              case 16:\n                _context4.next = 10;\n                break;\n\n              case 18:\n                _context4.next = 23;\n                break;\n\n              case 20:\n                _context4.prev = 20;\n                _context4.t0 = _context4[\"catch\"](8);\n\n                _iterator.e(_context4.t0);\n\n              case 23:\n                _context4.prev = 23;\n\n                _iterator.f();\n\n                return _context4.finish(23);\n\n              case 26:\n                _context4.next = 31;\n                break;\n\n              case 28:\n                _context4.prev = 28;\n                _context4.t1 = _context4[\"catch\"](5);\n                throw new WalletSignTransactionError(_context4.t1 === null || _context4.t1 === void 0 ? void 0 : _context4.t1.message, _context4.t1);\n\n              case 31:\n                return _context4.abrupt(\"return\", transactions);\n\n              case 34:\n                _context4.prev = 34;\n                _context4.t2 = _context4[\"catch\"](0);\n                this.emit('error', _context4.t2);\n                throw _context4.t2;\n\n              case 38:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 34], [5, 28], [8, 20, 23, 26]]);\n      }));\n    }\n  }]);\n\n  return LedgerWalletAdapter;\n}(BaseSignerWalletAdapter);","map":{"version":3,"sources":["../src/adapter.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAO,eAAP,MAA4B,+BAA5B;AACA,SACI,uBADJ,EAEI,qBAFJ,EAGI,uBAHJ,EAII,wBAJJ,EAKI,uBALJ,EAMI,oBANJ,EAOI,0BAPJ,QAQO,6BARP;AAUA,SAAS,iBAAT,EAA4B,YAA5B,EAA0C,eAAe,IAAf,gBAA1C,QAAiE,QAAjE;AAMA,WAAa,mBAAb;AAAA;;AAAA;;AAMI,iCAAkD;AAAA;;AAAA,QAAtC,MAAsC,uEAAF,EAAE;;AAAA;;AAC9C;;AAqHI,UAAA,aAAA,GAAgB,YAAK;AACzB,UAAM,SAAS,GAAG,MAAK,UAAvB;;AACA,UAAI,SAAJ,EAAe;AACX,QAAA,SAAS,CAAC,GAAV,CAAc,YAAd,EAA4B,MAAK,aAAjC;AAEA,cAAK,UAAL,GAAkB,IAAlB;AACA,cAAK,UAAL,GAAkB,IAAlB;;AAEA,cAAK,IAAL,CAAU,OAAV,EAAmB,IAAI,uBAAJ,EAAnB;;AACA,cAAK,IAAL,CAAU,YAAV;AACH;AACJ,KAXO;;AApHJ,UAAK,eAAL,GAAuB,MAAM,CAAC,cAAP,IAAyB,iBAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjE;AACA,UAAK,WAAL,GAAmB,KAAnB;AACA,UAAK,UAAL,GAAkB,IAAlB;AACA,UAAK,UAAL,GAAkB,IAAlB;AAL8C;AAMjD;;AAZL;AAAA;AAAA,SAcI,eAAa;AACT,aAAO,KAAK,UAAZ;AACH;AAhBL;AAAA;AAAA,SAkBI,eAAS;AACL,aAAO,OAAO,MAAP,KAAkB,WAAlB,IAAiC,CAAC,CAAC,SAAS,CAAC,GAApD;AACH;AApBL;AAAA;AAAA,SAsBI,eAAc;AACV,aAAO,KAAK,WAAZ;AACH;AAxBL;AAAA;AAAA,SA0BI,eAAa;AACT,aAAO,CAAC,CAAC,KAAK,UAAd;AACH;AA5BL;AAAA;AAAA,WA8BU,mBAAO;;;;;;;;;sBAED,KAAK,SAAL,IAAkB,KAAK,U;;;;;;;;AAC3B,qBAAK,WAAL,GAAmB,IAAnB;;;AAIgB,uBAAM,eAAe,CAAC,MAAhB,EAAN;;;AAAZ,gBAAA,S;;;;;;;sBAEM,IAAI,qBAAJ,CAA0B,gBAAK,IAAL,IAAA,gBAAK,KAAA,CAAL,GAAK,KAAA,CAAL,GAAA,YAAO,OAAjC,c;;;;;AAKM,uBAAM,YAAY,CAAC,SAAD,EAAY,KAAK,eAAjB,CAAlB;;;AAAZ,gBAAA,S;;;;;;;sBAEM,IAAI,oBAAJ,CAAyB,gBAAK,IAAL,IAAA,gBAAK,KAAA,CAAL,GAAK,KAAA,CAAL,GAAA,YAAO,OAAhC,c;;;AAGV,gBAAA,SAAS,CAAC,EAAV,CAAa,YAAb,EAA2B,KAAK,aAAhC;AAEA,qBAAK,UAAL,GAAkB,SAAlB;AACA,qBAAK,UAAL,GAAkB,SAAlB;AAEA,qBAAK,IAAL,CAAU,SAAV;;;;;;;AAEA,qBAAK,IAAL,CAAU,OAAV;;;;;AAGA,qBAAK,WAAL,GAAmB,KAAnB;;;;;;;;;;AAEP;AA7DL;AAAA;AAAA,WA+DU,sBAAU;;;;;;;AACN,gBAAA,S,GAAY,KAAK,U;;qBACnB,S;;;;;AACA,gBAAA,SAAS,CAAC,GAAV,CAAc,YAAd,EAA4B,KAAK,aAAjC;AAEA,qBAAK,UAAL,GAAkB,IAAlB;AACA,qBAAK,UAAL,GAAkB,IAAlB;;;AAGI,uBAAM,SAAS,CAAC,KAAV,EAAN;;;;;;;;;AAEA,qBAAK,IAAL,CAAU,OAAV,EAAmB,IAAI,wBAAJ,CAA6B,iBAAK,IAAL,IAAA,iBAAK,KAAA,CAAL,GAAK,KAAA,CAAL,GAAA,aAAO,OAApC,eAAnB;;;AAIR,qBAAK,IAAL,CAAU,YAAV;;;;;;;;;AACH;AA/EL;AAAA;AAAA,WAiFU,yBAAgB,WAAhB,EAAwC;;;;;;;;AAEhC,gBAAA,S,GAAY,KAAK,U;AACjB,gBAAA,S,GAAY,KAAK,U;;sBACnB,CAAC,SAAD,IAAc,CAAC,S;;;;;sBAAiB,IAAI,uBAAJ,E;;;;;AAGd,uBAAM,gBAAe,CAAC,SAAD,EAAY,WAAZ,EAAyB,KAAK,eAA9B,CAArB;;;AAAZ,gBAAA,S;AACN,gBAAA,WAAW,CAAC,YAAZ,CAAyB,SAAzB,EAAoC,SAApC;;;;;;;sBAEM,IAAI,0BAAJ,CAA+B,iBAAK,IAAL,IAAA,iBAAK,KAAA,CAAL,GAAK,KAAA,CAAL,GAAA,aAAO,OAAtC,e;;;kDAGH,W;;;;;AAEP,qBAAK,IAAL,CAAU,OAAV;;;;;;;;;;AAGP;AAnGL;AAAA;AAAA,WAqGU,6BAAoB,YAApB,EAA+C;;;;;;;;;AAEvC,gBAAA,S,GAAY,KAAK,U;AACjB,gBAAA,S,GAAY,KAAK,U;;sBACnB,CAAC,SAAD,IAAc,CAAC,S;;;;;sBAAiB,IAAI,uBAAJ,E;;;;AAG1B,gBAAA,c,GAAiB,KAAK,e;uDACF,Y;;;;;;;;;;;AAAf,gBAAA,W;;AACW,uBAAM,gBAAe,CAAC,SAAD,EAAY,WAAZ,EAAyB,cAAzB,CAArB;;;AAAZ,gBAAA,S;AACN,gBAAA,WAAW,CAAC,YAAZ,CAAyB,SAAzB,EAAoC,SAApC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBAGE,IAAI,0BAAJ,CAA+B,iBAAK,IAAL,IAAA,iBAAK,KAAA,CAAL,GAAK,KAAA,CAAL,GAAA,aAAO,OAAtC,e;;;kDAGH,Y;;;;;AAEP,qBAAK,IAAL,CAAU,OAAV;;;;;;;;;;AAGP;AA1HL;;AAAA;AAAA,EAAyC,uBAAzC","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport TransportWebHid from '@ledgerhq/hw-transport-webhid';\nimport { BaseSignerWalletAdapter, WalletConnectionError, WalletDisconnectedError, WalletDisconnectionError, WalletNotConnectedError, WalletPublicKeyError, WalletSignTransactionError, } from '@solana/wallet-adapter-base';\nimport { getDerivationPath, getPublicKey, signTransaction } from './util';\nexport class LedgerWalletAdapter extends BaseSignerWalletAdapter {\n    constructor(config = {}) {\n        super();\n        this._disconnected = () => {\n            const transport = this._transport;\n            if (transport) {\n                transport.off('disconnect', this._disconnected);\n                this._transport = null;\n                this._publicKey = null;\n                this.emit('error', new WalletDisconnectedError());\n                this.emit('disconnect');\n            }\n        };\n        this._derivationPath = config.derivationPath || getDerivationPath(0, 0);\n        this._connecting = false;\n        this._transport = null;\n        this._publicKey = null;\n    }\n    get publicKey() {\n        return this._publicKey;\n    }\n    get ready() {\n        return typeof window !== 'undefined' && !!navigator.hid;\n    }\n    get connecting() {\n        return this._connecting;\n    }\n    get connected() {\n        return !!this._transport;\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (this.connected || this.connecting)\n                    return;\n                this._connecting = true;\n                let transport;\n                try {\n                    transport = yield TransportWebHid.create();\n                }\n                catch (error) {\n                    throw new WalletConnectionError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n                let publicKey;\n                try {\n                    publicKey = yield getPublicKey(transport, this._derivationPath);\n                }\n                catch (error) {\n                    throw new WalletPublicKeyError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n                transport.on('disconnect', this._disconnected);\n                this._transport = transport;\n                this._publicKey = publicKey;\n                this.emit('connect');\n            }\n            catch (error) {\n                this.emit('error', error);\n                throw error;\n            }\n            finally {\n                this._connecting = false;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const transport = this._transport;\n            if (transport) {\n                transport.off('disconnect', this._disconnected);\n                this._transport = null;\n                this._publicKey = null;\n                try {\n                    yield transport.close();\n                }\n                catch (error) {\n                    this.emit('error', new WalletDisconnectionError(error === null || error === void 0 ? void 0 : error.message, error));\n                }\n            }\n            this.emit('disconnect');\n        });\n    }\n    signTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const transport = this._transport;\n                const publicKey = this._publicKey;\n                if (!transport || !publicKey)\n                    throw new WalletNotConnectedError();\n                try {\n                    const signature = yield signTransaction(transport, transaction, this._derivationPath);\n                    transaction.addSignature(publicKey, signature);\n                }\n                catch (error) {\n                    throw new WalletSignTransactionError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n                return transaction;\n            }\n            catch (error) {\n                this.emit('error', error);\n                throw error;\n            }\n        });\n    }\n    signAllTransactions(transactions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const transport = this._transport;\n                const publicKey = this._publicKey;\n                if (!transport || !publicKey)\n                    throw new WalletNotConnectedError();\n                try {\n                    const derivationPath = this._derivationPath;\n                    for (const transaction of transactions) {\n                        const signature = yield signTransaction(transport, transaction, derivationPath);\n                        transaction.addSignature(publicKey, signature);\n                    }\n                }\n                catch (error) {\n                    throw new WalletSignTransactionError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n                return transactions;\n            }\n            catch (error) {\n                this.emit('error', error);\n                throw error;\n            }\n        });\n    }\n}\n//# sourceMappingURL=adapter.js.map"]},"metadata":{},"sourceType":"module"}