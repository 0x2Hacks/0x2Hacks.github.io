{"ast":null,"code":"var eq = require('./eq');\n\nvar neq = require('./neq');\n\nvar gt = require('./gt');\n\nvar gte = require('./gte');\n\nvar lt = require('./lt');\n\nvar lte = require('./lte');\n\nvar cmp = function cmp(a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      return a === b;\n\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      return a !== b;\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose);\n\n    case '!=':\n      return neq(a, b, loose);\n\n    case '>':\n      return gt(a, b, loose);\n\n    case '>=':\n      return gte(a, b, loose);\n\n    case '<':\n      return lt(a, b, loose);\n\n    case '<=':\n      return lte(a, b, loose);\n\n    default:\n      throw new TypeError(\"Invalid operator: \".concat(op));\n  }\n};\n\nmodule.exports = cmp;","map":{"version":3,"sources":["/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@ledgerhq/devices/node_modules/semver/functions/cmp.js"],"names":["eq","require","neq","gt","gte","lt","lte","cmp","a","op","b","loose","version","TypeError","module","exports"],"mappings":"AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAME,EAAE,GAAGF,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAMG,GAAG,GAAGH,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAMI,EAAE,GAAGJ,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAMK,GAAG,GAAGL,OAAO,CAAC,OAAD,CAAnB;;AAEA,IAAMM,GAAG,GAAG,SAANA,GAAM,CAACC,CAAD,EAAIC,EAAJ,EAAQC,CAAR,EAAWC,KAAX,EAAqB;AAC/B,UAAQF,EAAR;AACE,SAAK,KAAL;AACE,UAAI,OAAOD,CAAP,KAAa,QAAjB,EACEA,CAAC,GAAGA,CAAC,CAACI,OAAN;AACF,UAAI,OAAOF,CAAP,KAAa,QAAjB,EACEA,CAAC,GAAGA,CAAC,CAACE,OAAN;AACF,aAAOJ,CAAC,KAAKE,CAAb;;AAEF,SAAK,KAAL;AACE,UAAI,OAAOF,CAAP,KAAa,QAAjB,EACEA,CAAC,GAAGA,CAAC,CAACI,OAAN;AACF,UAAI,OAAOF,CAAP,KAAa,QAAjB,EACEA,CAAC,GAAGA,CAAC,CAACE,OAAN;AACF,aAAOJ,CAAC,KAAKE,CAAb;;AAEF,SAAK,EAAL;AACA,SAAK,GAAL;AACA,SAAK,IAAL;AACE,aAAOV,EAAE,CAACQ,CAAD,EAAIE,CAAJ,EAAOC,KAAP,CAAT;;AAEF,SAAK,IAAL;AACE,aAAOT,GAAG,CAACM,CAAD,EAAIE,CAAJ,EAAOC,KAAP,CAAV;;AAEF,SAAK,GAAL;AACE,aAAOR,EAAE,CAACK,CAAD,EAAIE,CAAJ,EAAOC,KAAP,CAAT;;AAEF,SAAK,IAAL;AACE,aAAOP,GAAG,CAACI,CAAD,EAAIE,CAAJ,EAAOC,KAAP,CAAV;;AAEF,SAAK,GAAL;AACE,aAAON,EAAE,CAACG,CAAD,EAAIE,CAAJ,EAAOC,KAAP,CAAT;;AAEF,SAAK,IAAL;AACE,aAAOL,GAAG,CAACE,CAAD,EAAIE,CAAJ,EAAOC,KAAP,CAAV;;AAEF;AACE,YAAM,IAAIE,SAAJ,6BAAmCJ,EAAnC,EAAN;AApCJ;AAsCD,CAvCD;;AAwCAK,MAAM,CAACC,OAAP,GAAiBR,GAAjB","sourcesContent":["const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n"]},"metadata":{},"sourceType":"script"}