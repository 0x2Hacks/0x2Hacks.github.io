{"ast":null,"code":"import _asyncToGenerator from\"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import _regeneratorRuntime from\"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/regenerator/index.js\";import styled from'styled-components';import Button from'@material-ui/core/Button';import{CircularProgress}from'@material-ui/core';import{GatewayStatus,useGateway}from'@civic/solana-gateway-react';import{useEffect,useState,useRef}from'react';import{useConnection,useWallet}from'@solana/wallet-adapter-react';import{findGatewayToken,getGatewayTokenAddressForOwnerAndGatekeeperNetwork,onGatewayTokenChange,removeAccountChangeListener}from'@identity.com/solana-gateway-ts';import{jsx as _jsx}from\"react/jsx-runtime\";export var CTAButton=styled(Button)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 60px;\\n  margin-top: 10px;\\n  margin-bottom: 5px;\\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\\n  color: white;\\n  font-size: 16px;\\n  font-weight: bold;\\n\"])));// add your own styles here\nexport var MintButton=function MintButton(_ref){var onMint=_ref.onMint,candyMachine=_ref.candyMachine,isMinting=_ref.isMinting,setIsMinting=_ref.setIsMinting,isActive=_ref.isActive;var wallet=useWallet();var connection=useConnection();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),verified=_useState2[0],setVerified=_useState2[1];var _useGateway=useGateway(),requestGatewayToken=_useGateway.requestGatewayToken,gatewayStatus=_useGateway.gatewayStatus;var _useState3=useState(-1),_useState4=_slicedToArray(_useState3,2),webSocketSubscriptionId=_useState4[0],setWebSocketSubscriptionId=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),clicked=_useState6[0],setClicked=_useState6[1];var getMintButtonContent=function getMintButtonContent(){if(candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.isSoldOut){return'SOLD OUT';}else if(isMinting){return/*#__PURE__*/_jsx(CircularProgress,{});}else if(candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.isPresale||candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.isWhitelistOnly){return'WHITELIST MINT';}return'MINT';};useEffect(function(){var mint=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return removeAccountChangeListener(connection.connection,webSocketSubscriptionId);case 2:_context.next=4;return onMint();case 4:setClicked(false);setVerified(false);case 6:case\"end\":return _context.stop();}}},_callee);}));return function mint(){return _ref2.apply(this,arguments);};}();if(verified&&clicked){mint();}},[verified,clicked,connection.connection,onMint,webSocketSubscriptionId]);var previousGatewayStatus=usePrevious(gatewayStatus);useEffect(function(){var fromStates=[GatewayStatus.NOT_REQUESTED,GatewayStatus.REFRESH_TOKEN_REQUIRED];var invalidToStates=[].concat(fromStates,[GatewayStatus.UNKNOWN]);if(fromStates.find(function(state){return previousGatewayStatus===state;})&&!invalidToStates.find(function(state){return gatewayStatus===state;})){setIsMinting(true);}console.log('change: ',gatewayStatus);},[setIsMinting,previousGatewayStatus,gatewayStatus]);return/*#__PURE__*/_jsx(CTAButton,{disabled:isMinting||!isActive,onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var network,gatewayToken,gatewayTokenAddress;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.isActive&&candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.gatekeeper)){_context2.next=34;break;}network=candyMachine.state.gatekeeper.gatekeeperNetwork.toBase58();if(!(network==='ignREusXmGrscGNUesoU9mxfds9AiYTezUKex2PsZV6')){_context2.next=13;break;}if(!(gatewayStatus===GatewayStatus.ACTIVE)){_context2.next=8;break;}_context2.next=6;return onMint();case 6:_context2.next=11;break;case 8:_context2.next=10;return requestGatewayToken();case 10:console.log('after: ',gatewayStatus);case 11:_context2.next=32;break;case 13:if(!(network==='ttib7tuX8PTWPqFsmUFQTj78MbRhUmqxidJRDv4hRRE'||network==='tibePmPaoTgrs929rWpu755EXaxC7M3SthVCf6GzjZt')){_context2.next=30;break;}setClicked(true);_context2.next=17;return findGatewayToken(connection.connection,wallet.publicKey,candyMachine.state.gatekeeper.gatekeeperNetwork);case 17:gatewayToken=_context2.sent;if(!(gatewayToken!==null&&gatewayToken!==void 0&&gatewayToken.isValid())){_context2.next=23;break;}_context2.next=21;return onMint();case 21:_context2.next=28;break;case 23:window.open(\"https://verify.encore.fans/?gkNetwork=\".concat(network),'_blank');_context2.next=26;return getGatewayTokenAddressForOwnerAndGatekeeperNetwork(wallet.publicKey,candyMachine.state.gatekeeper.gatekeeperNetwork);case 26:gatewayTokenAddress=_context2.sent;setWebSocketSubscriptionId(onGatewayTokenChange(connection.connection,gatewayTokenAddress,function(){return setVerified(true);},'confirmed'));case 28:_context2.next=32;break;case 30:setClicked(false);throw new Error(\"Unknown Gatekeeper Network: \".concat(network));case 32:_context2.next=37;break;case 34:_context2.next=36;return onMint();case 36:setClicked(false);case 37:case\"end\":return _context2.stop();}}},_callee2);})),variant:\"contained\",children:getMintButtonContent()});};function usePrevious(value){var ref=useRef();useEffect(function(){ref.current=value;},[value]);return ref.current;}","map":{"version":3,"sources":["/workspace/0x2Hacks.github.io/candy-machine-ui/src/MintButton.tsx"],"names":["styled","Button","CircularProgress","GatewayStatus","useGateway","useEffect","useState","useRef","useConnection","useWallet","findGatewayToken","getGatewayTokenAddressForOwnerAndGatekeeperNetwork","onGatewayTokenChange","removeAccountChangeListener","CTAButton","MintButton","onMint","candyMachine","isMinting","setIsMinting","isActive","wallet","connection","verified","setVerified","requestGatewayToken","gatewayStatus","webSocketSubscriptionId","setWebSocketSubscriptionId","clicked","setClicked","getMintButtonContent","state","isSoldOut","isPresale","isWhitelistOnly","mint","previousGatewayStatus","usePrevious","fromStates","NOT_REQUESTED","REFRESH_TOKEN_REQUIRED","invalidToStates","UNKNOWN","find","console","log","gatekeeper","network","gatekeeperNetwork","toBase58","ACTIVE","publicKey","gatewayToken","isValid","window","open","gatewayTokenAddress","Error","value","ref","current"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\nimport { CandyMachineAccount } from './candy-machine';\nimport { CircularProgress } from '@material-ui/core';\nimport { GatewayStatus, useGateway } from '@civic/solana-gateway-react';\nimport { useEffect, useState, useRef } from 'react';\nimport { useConnection, useWallet } from '@solana/wallet-adapter-react';\nimport {\n  findGatewayToken,\n  getGatewayTokenAddressForOwnerAndGatekeeperNetwork,\n  onGatewayTokenChange,\n  removeAccountChangeListener,\n} from '@identity.com/solana-gateway-ts';\n\nexport const CTAButton = styled(Button)`\n  width: 100%;\n  height: 60px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`; // add your own styles here\n\nexport const MintButton = ({\n  onMint,\n  candyMachine,\n  isMinting,\n  setIsMinting,\n  isActive,\n}: {\n  onMint: () => Promise<void>;\n  candyMachine?: CandyMachineAccount;\n  isMinting: boolean;\n  setIsMinting: (val: boolean) => void;\n  isActive: boolean;\n}) => {\n  const wallet = useWallet();\n  const connection = useConnection();\n  const [verified, setVerified] = useState(false);\n  const { requestGatewayToken, gatewayStatus } = useGateway();\n  const [webSocketSubscriptionId, setWebSocketSubscriptionId] = useState(-1);\n  const [clicked, setClicked] = useState(false);\n\n  const getMintButtonContent = () => {\n    if (candyMachine?.state.isSoldOut) {\n      return 'SOLD OUT';\n    } else if (isMinting) {\n      return <CircularProgress />;\n    } else if (\n      candyMachine?.state.isPresale ||\n      candyMachine?.state.isWhitelistOnly\n    ) {\n      return 'WHITELIST MINT';\n    }\n\n    return 'MINT';\n  };\n\n  useEffect(() => {\n    const mint = async () => {\n      await removeAccountChangeListener(\n        connection.connection,\n        webSocketSubscriptionId,\n      );\n      await onMint();\n\n      setClicked(false);\n      setVerified(false);\n    };\n    if (verified && clicked) {\n      mint();\n    }\n  }, [\n    verified,\n    clicked,\n    connection.connection,\n    onMint,\n    webSocketSubscriptionId,\n  ]);\n\n  const previousGatewayStatus = usePrevious(gatewayStatus);\n  useEffect(() => {\n    const fromStates = [\n      GatewayStatus.NOT_REQUESTED,\n      GatewayStatus.REFRESH_TOKEN_REQUIRED,\n    ];\n    const invalidToStates = [...fromStates, GatewayStatus.UNKNOWN];\n    if (\n      fromStates.find(state => previousGatewayStatus === state) &&\n      !invalidToStates.find(state => gatewayStatus === state)\n    ) {\n      setIsMinting(true);\n    }\n    console.log('change: ', gatewayStatus);\n  }, [setIsMinting, previousGatewayStatus, gatewayStatus]);\n\n  return (\n    <CTAButton\n      disabled={isMinting || !isActive}\n      onClick={async () => {\n        if (candyMachine?.state.isActive && candyMachine?.state.gatekeeper) {\n          const network =\n            candyMachine.state.gatekeeper.gatekeeperNetwork.toBase58();\n          if (network === 'ignREusXmGrscGNUesoU9mxfds9AiYTezUKex2PsZV6') {\n            if (gatewayStatus === GatewayStatus.ACTIVE) {\n              await onMint();\n            } else {\n              // setIsMinting(true);\n              await requestGatewayToken();\n              console.log('after: ', gatewayStatus);\n            }\n          } else if (\n            network === 'ttib7tuX8PTWPqFsmUFQTj78MbRhUmqxidJRDv4hRRE' ||\n            network === 'tibePmPaoTgrs929rWpu755EXaxC7M3SthVCf6GzjZt'\n          ) {\n            setClicked(true);\n            const gatewayToken = await findGatewayToken(\n              connection.connection,\n              wallet.publicKey!,\n              candyMachine.state.gatekeeper.gatekeeperNetwork,\n            );\n\n            if (gatewayToken?.isValid()) {\n              await onMint();\n            } else {\n              window.open(\n                `https://verify.encore.fans/?gkNetwork=${network}`,\n                '_blank',\n              );\n\n              const gatewayTokenAddress =\n                await getGatewayTokenAddressForOwnerAndGatekeeperNetwork(\n                  wallet.publicKey!,\n                  candyMachine.state.gatekeeper.gatekeeperNetwork,\n                );\n\n              setWebSocketSubscriptionId(\n                onGatewayTokenChange(\n                  connection.connection,\n                  gatewayTokenAddress,\n                  () => setVerified(true),\n                  'confirmed',\n                ),\n              );\n            }\n          } else {\n            setClicked(false);\n            throw new Error(`Unknown Gatekeeper Network: ${network}`);\n          }\n        } else {\n          await onMint();\n          setClicked(false);\n        }\n      }}\n      variant=\"contained\"\n    >\n      {getMintButtonContent()}\n    </CTAButton>\n  );\n};\n\nfunction usePrevious<T>(value: T): T | undefined {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n"]},"metadata":{},"sourceType":"module"}