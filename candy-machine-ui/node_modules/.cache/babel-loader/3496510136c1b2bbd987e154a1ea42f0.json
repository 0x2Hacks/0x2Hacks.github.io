{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\n\nvar _networkConfigs;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.localConfig = void 0;\nvar Network;\n\n(function (Network) {\n  Network[\"IGNITE\"] = \"ignitePass\";\n  Network[\"IGNITE_NFT\"] = \"igniteNftPass\";\n  Network[\"NILE\"] = \"nilePass\";\n})(Network || (Network = {}));\n\nvar defaultConfiguration = {\n  networkAddressMappings: {\n    // test networks\n    tigoYhp9SpCDoCQmXGj2im5xa3mnjR1zuXrpCJ5ZRmi: Network.IGNITE,\n    tig2iQjtihM8GbWS1z5LJi9ytTkj4poeh2N3MW4n9gt: Network.IGNITE_NFT,\n    tniC2HX5yg2yDjMQEcUo1bHa44x9YdZVSqyKox21SDz: Network.NILE,\n    // production networks\n    ignREusXmGrscGNUesoU9mxfds9AiYTezUKex2PsZV6: Network.IGNITE,\n    ign2PJfwxvYxAZpMdXgLdY4VLCnChPZWjtTeQwQfQdc: Network.IGNITE_NFT,\n    ni1jXzPTq1yTqo67tUmVgnp22b1qGAAZCtPmHtskqYG: Network.NILE\n  },\n  networkConfigs: (_networkConfigs = {\n    // We need to check the Gatekeeper record to determine if the user passes all the gatekeeper network rules\n    // This is not required for IgnitePass\n    requiresGatekeeperRecordStatusCheck: true,\n    tokenExpirationMarginSeconds: 60 * 60 * 6,\n    pollChainIntervalMilliseconds: 2000,\n    pollChainNumberRetries: 15,\n    waitForTokenRefreshTimoutMilliseconds: 1000 * 30\n  }, _defineProperty(_networkConfigs, Network.IGNITE, {\n    requiresGatekeeperRecordStatusCheck: false,\n    tokenExpirationMarginSeconds: 60\n  }), _defineProperty(_networkConfigs, Network.IGNITE_NFT, {\n    requiresGatekeeperRecordStatusCheck: false,\n    tokenExpirationMarginSeconds: 60\n  }), _defineProperty(_networkConfigs, Network.NILE, {\n    requiresGatekeeperRecordStatusCheck: true\n  }), _networkConfigs)\n};\nvar testConfig = Object.assign(Object.assign({}, defaultConfiguration), {\n  networkConfigs: Object.assign(Object.assign({}, defaultConfiguration.networkConfigs), {\n    tokenExpirationMarginSeconds: 10\n  })\n});\nexports.localConfig = Object.assign(Object.assign({}, defaultConfiguration), {\n  networkConfigs: Object.assign(Object.assign({}, defaultConfiguration.networkConfigs), {\n    tokenExpirationMarginSeconds: 60 * 1\n  })\n});\nvar devConfig = Object.assign(Object.assign({}, defaultConfiguration), {\n  networkConfigs: Object.assign(Object.assign({}, defaultConfiguration.networkConfigs), {\n    tokenExpirationMarginSeconds: 60 * 15\n  })\n});\nvar preprodConfig = Object.assign({}, defaultConfiguration);\nvar prodConfig = Object.assign({}, defaultConfiguration);\nvar stageConfigs = {\n  test: testConfig,\n  local: exports.localConfig,\n  dev: devConfig,\n  preprod: preprodConfig,\n  prod: prodConfig\n};\n\nvar config = function config(_ref) {\n  var gatekeeperNetworkAddress = _ref.gatekeeperNetworkAddress,\n      stage = _ref.stage;\n\n  var _a, _b;\n\n  var stageConfig = stageConfigs[stage];\n  var networkName = gatekeeperNetworkAddress ? stageConfig === null || stageConfig === void 0 ? void 0 : stageConfig.networkAddressMappings[gatekeeperNetworkAddress] : null;\n  var networkConfig = networkName ? stageConfig === null || stageConfig === void 0 ? void 0 : stageConfig.networkConfigs[networkName] : stageConfig;\n  var tokenExpirationMarginSeconds = (_a = networkConfig === null || networkConfig === void 0 ? void 0 : networkConfig.tokenExpirationMarginSeconds) !== null && _a !== void 0 ? _a : stageConfig.networkConfigs.tokenExpirationMarginSeconds;\n  var _defaultConfiguration = defaultConfiguration.networkConfigs,\n      pollChainIntervalMilliseconds = _defaultConfiguration.pollChainIntervalMilliseconds,\n      pollChainNumberRetries = _defaultConfiguration.pollChainNumberRetries,\n      waitForTokenRefreshTimoutMilliseconds = _defaultConfiguration.waitForTokenRefreshTimoutMilliseconds,\n      requiresGatekeeperRecordStatusCheck = _defaultConfiguration.requiresGatekeeperRecordStatusCheck;\n  return {\n    pollChainNumberRetries: pollChainNumberRetries,\n    pollChainIntervalMilliseconds: pollChainIntervalMilliseconds,\n    waitForTokenRefreshTimoutMilliseconds: waitForTokenRefreshTimoutMilliseconds,\n    tokenExpirationMarginSeconds: tokenExpirationMarginSeconds,\n    requiresGatekeeperRecordStatusCheck: (_b = networkConfig === null || networkConfig === void 0 ? void 0 : networkConfig.requiresGatekeeperRecordStatusCheck) !== null && _b !== void 0 ? _b : requiresGatekeeperRecordStatusCheck\n  };\n};\n\nexports.default = config;","map":{"version":3,"sources":["/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@civic/common-gateway-react/dist/esm/networkConfig.js"],"names":["Object","defineProperty","exports","value","localConfig","Network","defaultConfiguration","networkAddressMappings","tigoYhp9SpCDoCQmXGj2im5xa3mnjR1zuXrpCJ5ZRmi","IGNITE","tig2iQjtihM8GbWS1z5LJi9ytTkj4poeh2N3MW4n9gt","IGNITE_NFT","tniC2HX5yg2yDjMQEcUo1bHa44x9YdZVSqyKox21SDz","NILE","ignREusXmGrscGNUesoU9mxfds9AiYTezUKex2PsZV6","ign2PJfwxvYxAZpMdXgLdY4VLCnChPZWjtTeQwQfQdc","ni1jXzPTq1yTqo67tUmVgnp22b1qGAAZCtPmHtskqYG","networkConfigs","requiresGatekeeperRecordStatusCheck","tokenExpirationMarginSeconds","pollChainIntervalMilliseconds","pollChainNumberRetries","waitForTokenRefreshTimoutMilliseconds","testConfig","assign","devConfig","preprodConfig","prodConfig","stageConfigs","test","local","dev","preprod","prod","config","gatekeeperNetworkAddress","stage","_a","_b","stageConfig","networkName","networkConfig","default"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.localConfig = void 0;\nvar Network;\n(function (Network) {\n    Network[\"IGNITE\"] = \"ignitePass\";\n    Network[\"IGNITE_NFT\"] = \"igniteNftPass\";\n    Network[\"NILE\"] = \"nilePass\";\n})(Network || (Network = {}));\nconst defaultConfiguration = {\n    networkAddressMappings: {\n        // test networks\n        tigoYhp9SpCDoCQmXGj2im5xa3mnjR1zuXrpCJ5ZRmi: Network.IGNITE,\n        tig2iQjtihM8GbWS1z5LJi9ytTkj4poeh2N3MW4n9gt: Network.IGNITE_NFT,\n        tniC2HX5yg2yDjMQEcUo1bHa44x9YdZVSqyKox21SDz: Network.NILE,\n        // production networks\n        ignREusXmGrscGNUesoU9mxfds9AiYTezUKex2PsZV6: Network.IGNITE,\n        ign2PJfwxvYxAZpMdXgLdY4VLCnChPZWjtTeQwQfQdc: Network.IGNITE_NFT,\n        ni1jXzPTq1yTqo67tUmVgnp22b1qGAAZCtPmHtskqYG: Network.NILE,\n    },\n    networkConfigs: {\n        // We need to check the Gatekeeper record to determine if the user passes all the gatekeeper network rules\n        // This is not required for IgnitePass\n        requiresGatekeeperRecordStatusCheck: true,\n        tokenExpirationMarginSeconds: 60 * 60 * 6,\n        pollChainIntervalMilliseconds: 2000,\n        pollChainNumberRetries: 15,\n        waitForTokenRefreshTimoutMilliseconds: 1000 * 30,\n        [Network.IGNITE]: {\n            requiresGatekeeperRecordStatusCheck: false,\n            tokenExpirationMarginSeconds: 60,\n        },\n        [Network.IGNITE_NFT]: {\n            requiresGatekeeperRecordStatusCheck: false,\n            tokenExpirationMarginSeconds: 60,\n        },\n        [Network.NILE]: {\n            requiresGatekeeperRecordStatusCheck: true,\n        },\n    },\n};\nconst testConfig = Object.assign(Object.assign({}, defaultConfiguration), { networkConfigs: Object.assign(Object.assign({}, defaultConfiguration.networkConfigs), { tokenExpirationMarginSeconds: 10 }) });\nexports.localConfig = Object.assign(Object.assign({}, defaultConfiguration), { networkConfigs: Object.assign(Object.assign({}, defaultConfiguration.networkConfigs), { tokenExpirationMarginSeconds: 60 * 1 }) });\nconst devConfig = Object.assign(Object.assign({}, defaultConfiguration), { networkConfigs: Object.assign(Object.assign({}, defaultConfiguration.networkConfigs), { tokenExpirationMarginSeconds: 60 * 15 }) });\nconst preprodConfig = Object.assign({}, defaultConfiguration);\nconst prodConfig = Object.assign({}, defaultConfiguration);\nconst stageConfigs = {\n    test: testConfig,\n    local: exports.localConfig,\n    dev: devConfig,\n    preprod: preprodConfig,\n    prod: prodConfig,\n};\nconst config = ({ gatekeeperNetworkAddress, stage, }) => {\n    var _a, _b;\n    const stageConfig = stageConfigs[stage];\n    const networkName = gatekeeperNetworkAddress ? stageConfig === null || stageConfig === void 0 ? void 0 : stageConfig.networkAddressMappings[gatekeeperNetworkAddress] : null;\n    const networkConfig = networkName ? stageConfig === null || stageConfig === void 0 ? void 0 : stageConfig.networkConfigs[networkName] : stageConfig;\n    const tokenExpirationMarginSeconds = (_a = networkConfig === null || networkConfig === void 0 ? void 0 : networkConfig.tokenExpirationMarginSeconds) !== null && _a !== void 0 ? _a : stageConfig.networkConfigs.tokenExpirationMarginSeconds;\n    const { pollChainIntervalMilliseconds, pollChainNumberRetries, waitForTokenRefreshTimoutMilliseconds, requiresGatekeeperRecordStatusCheck, } = defaultConfiguration.networkConfigs;\n    return {\n        pollChainNumberRetries,\n        pollChainIntervalMilliseconds,\n        waitForTokenRefreshTimoutMilliseconds,\n        tokenExpirationMarginSeconds,\n        requiresGatekeeperRecordStatusCheck: (_b = networkConfig === null || networkConfig === void 0 ? void 0 : networkConfig.requiresGatekeeperRecordStatusCheck) !== null && _b !== void 0 ? _b : requiresGatekeeperRecordStatusCheck,\n    };\n};\nexports.default = config;\n"]},"metadata":{},"sourceType":"script"}