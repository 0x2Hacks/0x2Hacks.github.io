{"ast":null,"code":"import _slicedToArray from\"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/regenerator/index.js\";import*as anchor from'@project-serum/anchor';import{MintLayout,TOKEN_PROGRAM_ID,Token}from'@solana/spl-token';import{SystemProgram,SYSVAR_SLOT_HASHES_PUBKEY}from'@solana/web3.js';import{sendTransactions,SequenceType}from'./connection';import{CIVIC,getAtaForMint,getNetworkExpire,getNetworkToken,SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID}from'./utils';export var CANDY_MACHINE_PROGRAM=new anchor.web3.PublicKey('cndy3Z4yapfJBmL3ShUp5exZKqR3z33thTzeNMm2gRZ');var TOKEN_METADATA_PROGRAM_ID=new anchor.web3.PublicKey('metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s');export var awaitTransactionSignatureConfirmation=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(txid,timeout,connection){var queryStatus,done,status,subId,_args3=arguments;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:queryStatus=_args3.length>3&&_args3[3]!==undefined?_args3[3]:false;done=false;status={slot:0,confirmations:0,err:null};subId=0;_context3.next=6;return new Promise(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(resolve,reject){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setTimeout(function(){if(done){return;}done=true;console.log('Rejecting for timeout...');reject({timeout:true});},timeout);case 1:if(!(!done&&queryStatus)){_context2.next=7;break;}// eslint-disable-next-line no-loop-func\n_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var signatureStatuses;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return connection.getSignatureStatuses([txid]);case 3:signatureStatuses=_context.sent;status=signatureStatuses&&signatureStatuses.value[0];if(!done){if(!status){console.log('REST null result for',txid,status);}else if(status.err){console.log('REST error for',txid,status);done=true;reject(status.err);}else if(!status.confirmations){console.log('REST no confirmations for',txid,status);}else{console.log('REST confirmation for',txid,status);done=true;resolve(status);}}_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);if(!done){console.log('REST connection error: txid',txid,_context.t0);}case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}))();_context2.next=5;return sleep(2000);case 5:_context2.next=1;break;case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x4,_x5){return _ref2.apply(this,arguments);};}());case 6:status=_context3.sent;//@ts-ignore\nif(connection._signatureSubscriptions[subId]){connection.removeSignatureListener(subId);}done=true;console.log('Returning status',status);return _context3.abrupt(\"return\",status);case 11:case\"end\":return _context3.stop();}}},_callee3);}));return function awaitTransactionSignatureConfirmation(_x,_x2,_x3){return _ref.apply(this,arguments);};}();var createAssociatedTokenAccountInstruction=function createAssociatedTokenAccountInstruction(associatedTokenAddress,payer,walletAddress,splTokenMintAddress){var keys=[{pubkey:payer,isSigner:true,isWritable:true},{pubkey:associatedTokenAddress,isSigner:false,isWritable:true},{pubkey:walletAddress,isSigner:false,isWritable:false},{pubkey:splTokenMintAddress,isSigner:false,isWritable:false},{pubkey:anchor.web3.SystemProgram.programId,isSigner:false,isWritable:false},{pubkey:TOKEN_PROGRAM_ID,isSigner:false,isWritable:false},{pubkey:anchor.web3.SYSVAR_RENT_PUBKEY,isSigner:false,isWritable:false}];return new anchor.web3.TransactionInstruction({keys:keys,programId:SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,data:Buffer.from([])});};export var getCandyMachineState=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(anchorWallet,candyMachineId,connection){var provider,idl,program,state,itemsAvailable,itemsRedeemed,itemsRemaining;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:provider=new anchor.Provider(connection,anchorWallet,{preflightCommitment:'processed'});_context4.next=3;return anchor.Program.fetchIdl(CANDY_MACHINE_PROGRAM,provider);case 3:idl=_context4.sent;program=new anchor.Program(idl,CANDY_MACHINE_PROGRAM,provider);_context4.next=7;return program.account.candyMachine.fetch(candyMachineId);case 7:state=_context4.sent;itemsAvailable=state.data.itemsAvailable.toNumber();itemsRedeemed=state.itemsRedeemed.toNumber();itemsRemaining=itemsAvailable-itemsRedeemed;return _context4.abrupt(\"return\",{id:candyMachineId,program:program,state:{authority:state.authority,itemsAvailable:itemsAvailable,itemsRedeemed:itemsRedeemed,itemsRemaining:itemsRemaining,isSoldOut:itemsRemaining===0,isActive:false,isPresale:false,isWhitelistOnly:false,goLiveDate:state.data.goLiveDate,treasury:state.wallet,tokenMint:state.tokenMint,gatekeeper:state.data.gatekeeper,endSettings:state.data.endSettings,whitelistMintSettings:state.data.whitelistMintSettings,hiddenSettings:state.data.hiddenSettings,price:state.data.price,retainAuthority:state.data.retainAuthority}});case 12:case\"end\":return _context4.stop();}}},_callee4);}));return function getCandyMachineState(_x6,_x7,_x8){return _ref4.apply(this,arguments);};}();var getMasterEdition=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(mint){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return anchor.web3.PublicKey.findProgramAddress([Buffer.from('metadata'),TOKEN_METADATA_PROGRAM_ID.toBuffer(),mint.toBuffer(),Buffer.from('edition')],TOKEN_METADATA_PROGRAM_ID);case 2:return _context5.abrupt(\"return\",_context5.sent[0]);case 3:case\"end\":return _context5.stop();}}},_callee5);}));return function getMasterEdition(_x9){return _ref5.apply(this,arguments);};}();var getMetadata=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(mint){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return anchor.web3.PublicKey.findProgramAddress([Buffer.from('metadata'),TOKEN_METADATA_PROGRAM_ID.toBuffer(),mint.toBuffer()],TOKEN_METADATA_PROGRAM_ID);case 2:return _context6.abrupt(\"return\",_context6.sent[0]);case 3:case\"end\":return _context6.stop();}}},_callee6);}));return function getMetadata(_x10){return _ref6.apply(this,arguments);};}();export var getCandyMachineCreator=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(candyMachine){return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return anchor.web3.PublicKey.findProgramAddress([Buffer.from('candy_machine'),candyMachine.toBuffer()],CANDY_MACHINE_PROGRAM);case 2:return _context7.abrupt(\"return\",_context7.sent);case 3:case\"end\":return _context7.stop();}}},_callee7);}));return function getCandyMachineCreator(_x11){return _ref7.apply(this,arguments);};}();export var getCollectionPDA=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(candyMachineAddress){return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.next=2;return anchor.web3.PublicKey.findProgramAddress([Buffer.from('collection'),candyMachineAddress.toBuffer()],CANDY_MACHINE_PROGRAM);case 2:return _context8.abrupt(\"return\",_context8.sent);case 3:case\"end\":return _context8.stop();}}},_callee8);}));return function getCollectionPDA(_x12){return _ref8.apply(this,arguments);};}();export var getCollectionAuthorityRecordPDA=/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(mint,newAuthority){return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_context9.next=2;return anchor.web3.PublicKey.findProgramAddress([Buffer.from('metadata'),TOKEN_METADATA_PROGRAM_ID.toBuffer(),mint.toBuffer(),Buffer.from('collection_authority'),newAuthority.toBuffer()],TOKEN_METADATA_PROGRAM_ID);case 2:return _context9.abrupt(\"return\",_context9.sent[0]);case 3:case\"end\":return _context9.stop();}}},_callee9);}));return function getCollectionAuthorityRecordPDA(_x13,_x14){return _ref9.apply(this,arguments);};}();export var createAccountsForMint=/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(candyMachine,payer){var mint,userTokenAccountAddress,signers,instructions;return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:mint=anchor.web3.Keypair.generate();_context10.next=3;return getAtaForMint(mint.publicKey,payer);case 3:userTokenAccountAddress=_context10.sent[0];signers=[mint];_context10.t0=anchor.web3.SystemProgram;_context10.t1=payer;_context10.t2=mint.publicKey;_context10.t3=MintLayout.span;_context10.next=11;return candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(MintLayout.span);case 11:_context10.t4=_context10.sent;_context10.t5=TOKEN_PROGRAM_ID;_context10.t6={fromPubkey:_context10.t1,newAccountPubkey:_context10.t2,space:_context10.t3,lamports:_context10.t4,programId:_context10.t5};_context10.t7=_context10.t0.createAccount.call(_context10.t0,_context10.t6);_context10.t8=Token.createInitMintInstruction(TOKEN_PROGRAM_ID,mint.publicKey,0,payer,payer);_context10.t9=createAssociatedTokenAccountInstruction(userTokenAccountAddress,payer,payer,mint.publicKey);_context10.t10=Token.createMintToInstruction(TOKEN_PROGRAM_ID,mint.publicKey,userTokenAccountAddress,payer,[],1);instructions=[_context10.t7,_context10.t8,_context10.t9,_context10.t10];_context10.t11=mint;_context10.t12=userTokenAccountAddress;_context10.next=23;return sendTransactions(candyMachine.program.provider.connection,candyMachine.program.provider.wallet,[instructions],[signers],SequenceType.StopOnFailure,'singleGossip',function(){},function(){return false;},undefined,[],[]);case 23:_context10.t13=_context10.sent.txs[0].txid;return _context10.abrupt(\"return\",{mint:_context10.t11,userTokenAccount:_context10.t12,transaction:_context10.t13});case 25:case\"end\":return _context10.stop();}}},_callee10);}));return function createAccountsForMint(_x15,_x16){return _ref10.apply(this,arguments);};}();export var mintOneToken=/*#__PURE__*/function(){var _ref11=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee11(candyMachine,payer){var _setupState$mint;var beforeTransactions,afterTransactions,setupState,mint,userTokenAccountAddress,userPayingAccountAddress,candyMachineAddress,remainingAccounts,instructions,signers,_mint,whitelistToken,metadataAddress,masterEdition,_yield$getCandyMachin,_yield$getCandyMachin2,candyMachineCreator,creatorBump,_yield$getCollectionP,_yield$getCollectionP2,collectionPDA,collectionPDAAccount,collectionData,collectionMint,collectionAuthorityRecord,collectionMetadata,collectionMasterEdition,instructionsMatrix,signersMatrix,txns,mintTxn,_args11=arguments;return _regeneratorRuntime.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:beforeTransactions=_args11.length>2&&_args11[2]!==undefined?_args11[2]:[];afterTransactions=_args11.length>3&&_args11[3]!==undefined?_args11[3]:[];setupState=_args11.length>4?_args11[4]:undefined;mint=(_setupState$mint=setupState===null||setupState===void 0?void 0:setupState.mint)!==null&&_setupState$mint!==void 0?_setupState$mint:anchor.web3.Keypair.generate();_context11.next=6;return getAtaForMint(mint.publicKey,payer);case 6:userTokenAccountAddress=_context11.sent[0];if(!candyMachine.state.tokenMint){_context11.next=13;break;}_context11.next=10;return getAtaForMint(candyMachine.state.tokenMint,payer);case 10:_context11.t0=_context11.sent[0];_context11.next=14;break;case 13:_context11.t0=payer;case 14:userPayingAccountAddress=_context11.t0;candyMachineAddress=candyMachine.id;remainingAccounts=[];instructions=[];signers=[];console.log('SetupState: ',setupState);if(setupState){_context11.next=39;break;}signers.push(mint);_context11.t1=instructions.push;_context11.t2=instructions;_context11.t3=anchor.web3.SystemProgram;_context11.t4=payer;_context11.t5=mint.publicKey;_context11.t6=MintLayout.span;_context11.next=30;return candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(MintLayout.span);case 30:_context11.t7=_context11.sent;_context11.t8=TOKEN_PROGRAM_ID;_context11.t9={fromPubkey:_context11.t4,newAccountPubkey:_context11.t5,space:_context11.t6,lamports:_context11.t7,programId:_context11.t8};_context11.t10=_context11.t3.createAccount.call(_context11.t3,_context11.t9);_context11.t11=Token.createInitMintInstruction(TOKEN_PROGRAM_ID,mint.publicKey,0,payer,payer);_context11.t12=createAssociatedTokenAccountInstruction(userTokenAccountAddress,payer,payer,mint.publicKey);_context11.t13=Token.createMintToInstruction(TOKEN_PROGRAM_ID,mint.publicKey,userTokenAccountAddress,payer,[],1);_context11.t14=[_context11.t10,_context11.t11,_context11.t12,_context11.t13];_context11.t1.apply.call(_context11.t1,_context11.t2,_context11.t14);case 39:if(!candyMachine.state.gatekeeper){_context11.next=54;break;}_context11.t15=remainingAccounts;_context11.next=43;return getNetworkToken(payer,candyMachine.state.gatekeeper.gatekeeperNetwork);case 43:_context11.t16=_context11.sent[0];_context11.t17={pubkey:_context11.t16,isWritable:true,isSigner:false};_context11.t15.push.call(_context11.t15,_context11.t17);if(!candyMachine.state.gatekeeper.expireOnUse){_context11.next=54;break;}remainingAccounts.push({pubkey:CIVIC,isWritable:false,isSigner:false});_context11.t18=remainingAccounts;_context11.next=51;return getNetworkExpire(candyMachine.state.gatekeeper.gatekeeperNetwork);case 51:_context11.t19=_context11.sent[0];_context11.t20={pubkey:_context11.t19,isWritable:false,isSigner:false};_context11.t18.push.call(_context11.t18,_context11.t20);case 54:if(!candyMachine.state.whitelistMintSettings){_context11.next=61;break;}_mint=new anchor.web3.PublicKey(candyMachine.state.whitelistMintSettings.mint);_context11.next=58;return getAtaForMint(_mint,payer);case 58:whitelistToken=_context11.sent[0];remainingAccounts.push({pubkey:whitelistToken,isWritable:true,isSigner:false});if(candyMachine.state.whitelistMintSettings.mode.burnEveryTime){remainingAccounts.push({pubkey:_mint,isWritable:true,isSigner:false});remainingAccounts.push({pubkey:payer,isWritable:false,isSigner:true});}case 61:if(candyMachine.state.tokenMint){remainingAccounts.push({pubkey:userPayingAccountAddress,isWritable:true,isSigner:false});remainingAccounts.push({pubkey:payer,isWritable:false,isSigner:true});}_context11.next=64;return getMetadata(mint.publicKey);case 64:metadataAddress=_context11.sent;_context11.next=67;return getMasterEdition(mint.publicKey);case 67:masterEdition=_context11.sent;_context11.next=70;return getCandyMachineCreator(candyMachineAddress);case 70:_yield$getCandyMachin=_context11.sent;_yield$getCandyMachin2=_slicedToArray(_yield$getCandyMachin,2);candyMachineCreator=_yield$getCandyMachin2[0];creatorBump=_yield$getCandyMachin2[1];console.log(remainingAccounts.map(function(rm){return rm.pubkey.toBase58();}));_context11.t21=instructions;_context11.next=78;return candyMachine.program.instruction.mintNft(creatorBump,{accounts:{candyMachine:candyMachineAddress,candyMachineCreator:candyMachineCreator,payer:payer,wallet:candyMachine.state.treasury,mint:mint.publicKey,metadata:metadataAddress,masterEdition:masterEdition,mintAuthority:payer,updateAuthority:payer,tokenMetadataProgram:TOKEN_METADATA_PROGRAM_ID,tokenProgram:TOKEN_PROGRAM_ID,systemProgram:SystemProgram.programId,rent:anchor.web3.SYSVAR_RENT_PUBKEY,clock:anchor.web3.SYSVAR_CLOCK_PUBKEY,recentBlockhashes:SYSVAR_SLOT_HASHES_PUBKEY,instructionSysvarAccount:anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY},remainingAccounts:remainingAccounts.length>0?remainingAccounts:undefined});case 78:_context11.t22=_context11.sent;_context11.t21.push.call(_context11.t21,_context11.t22);_context11.next=82;return getCollectionPDA(candyMachineAddress);case 82:_yield$getCollectionP=_context11.sent;_yield$getCollectionP2=_slicedToArray(_yield$getCollectionP,1);collectionPDA=_yield$getCollectionP2[0];_context11.next=87;return candyMachine.program.provider.connection.getAccountInfo(collectionPDA);case 87:collectionPDAAccount=_context11.sent;if(!(collectionPDAAccount&&candyMachine.state.retainAuthority)){_context11.next=118;break;}_context11.prev=89;_context11.next=92;return candyMachine.program.account.collectionPda.fetch(collectionPDA);case 92:collectionData=_context11.sent;console.log(collectionData);collectionMint=collectionData.mint;_context11.next=97;return getCollectionAuthorityRecordPDA(collectionMint,collectionPDA);case 97:collectionAuthorityRecord=_context11.sent;console.log(collectionMint);if(!collectionMint){_context11.next=113;break;}_context11.next=102;return getMetadata(collectionMint);case 102:collectionMetadata=_context11.sent;_context11.next=105;return getMasterEdition(collectionMint);case 105:collectionMasterEdition=_context11.sent;console.log('Collection PDA: ',collectionPDA.toBase58());console.log('Authority: ',candyMachine.state.authority.toBase58());_context11.t23=instructions;_context11.next=111;return candyMachine.program.instruction.setCollectionDuringMint({accounts:{candyMachine:candyMachineAddress,metadata:metadataAddress,payer:payer,collectionPda:collectionPDA,tokenMetadataProgram:TOKEN_METADATA_PROGRAM_ID,instructions:anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY,collectionMint:collectionMint,collectionMetadata:collectionMetadata,collectionMasterEdition:collectionMasterEdition,authority:candyMachine.state.authority,collectionAuthorityRecord:collectionAuthorityRecord}});case 111:_context11.t24=_context11.sent;_context11.t23.push.call(_context11.t23,_context11.t24);case 113:_context11.next=118;break;case 115:_context11.prev=115;_context11.t25=_context11[\"catch\"](89);console.error(_context11.t25);case 118:instructionsMatrix=[instructions];signersMatrix=[signers];_context11.prev=120;_context11.next=123;return sendTransactions(candyMachine.program.provider.connection,candyMachine.program.provider.wallet,instructionsMatrix,signersMatrix,SequenceType.StopOnFailure,'singleGossip',function(){},function(){return false;},undefined,beforeTransactions,afterTransactions);case 123:txns=_context11.sent.txs.map(function(t){return t.txid;});mintTxn=txns[0];return _context11.abrupt(\"return\",{mintTxId:mintTxn,metadataKey:metadataAddress});case 128:_context11.prev=128;_context11.t26=_context11[\"catch\"](120);console.log(_context11.t26);case 131:return _context11.abrupt(\"return\",null);case 132:case\"end\":return _context11.stop();}}},_callee11,null,[[89,115],[120,128]]);}));return function mintOneToken(_x17,_x18){return _ref11.apply(this,arguments);};}();export var shortenAddress=function shortenAddress(address){var chars=arguments.length>1&&arguments[1]!==undefined?arguments[1]:4;return\"\".concat(address.slice(0,chars),\"...\").concat(address.slice(-chars));};var sleep=function sleep(ms){return new Promise(function(resolve){return setTimeout(resolve,ms);});};","map":{"version":3,"sources":["/workspace/0x2Hacks.github.io/candy-machine-ui/src/candy-machine.ts"],"names":["anchor","MintLayout","TOKEN_PROGRAM_ID","Token","SystemProgram","SYSVAR_SLOT_HASHES_PUBKEY","sendTransactions","SequenceType","CIVIC","getAtaForMint","getNetworkExpire","getNetworkToken","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","CANDY_MACHINE_PROGRAM","web3","PublicKey","TOKEN_METADATA_PROGRAM_ID","awaitTransactionSignatureConfirmation","txid","timeout","connection","queryStatus","done","status","slot","confirmations","err","subId","Promise","resolve","reject","setTimeout","console","log","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","programId","SYSVAR_RENT_PUBKEY","TransactionInstruction","data","Buffer","from","getCandyMachineState","anchorWallet","candyMachineId","provider","Provider","preflightCommitment","Program","fetchIdl","idl","program","account","candyMachine","fetch","state","itemsAvailable","toNumber","itemsRedeemed","itemsRemaining","id","authority","isSoldOut","isActive","isPresale","isWhitelistOnly","goLiveDate","treasury","wallet","tokenMint","gatekeeper","endSettings","whitelistMintSettings","hiddenSettings","price","retainAuthority","getMasterEdition","mint","findProgramAddress","toBuffer","getMetadata","getCandyMachineCreator","getCollectionPDA","candyMachineAddress","getCollectionAuthorityRecordPDA","newAuthority","createAccountsForMint","Keypair","generate","publicKey","userTokenAccountAddress","signers","span","getMinimumBalanceForRentExemption","fromPubkey","newAccountPubkey","space","lamports","createAccount","createInitMintInstruction","createMintToInstruction","instructions","StopOnFailure","undefined","txs","userTokenAccount","transaction","mintOneToken","beforeTransactions","afterTransactions","setupState","userPayingAccountAddress","remainingAccounts","push","gatekeeperNetwork","expireOnUse","whitelistToken","mode","burnEveryTime","metadataAddress","masterEdition","candyMachineCreator","creatorBump","map","rm","toBase58","instruction","mintNft","accounts","metadata","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","rent","clock","SYSVAR_CLOCK_PUBKEY","recentBlockhashes","instructionSysvarAccount","SYSVAR_INSTRUCTIONS_PUBKEY","length","collectionPDA","getAccountInfo","collectionPDAAccount","collectionPda","collectionData","collectionMint","collectionAuthorityRecord","collectionMetadata","collectionMasterEdition","setCollectionDuringMint","error","instructionsMatrix","signersMatrix","txns","t","mintTxn","mintTxId","metadataKey","shortenAddress","address","chars","slice","ms"],"mappings":"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","sourcesContent":["import * as anchor from '@project-serum/anchor';\n\nimport { MintLayout, TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\nimport {\n  SystemProgram,\n  Transaction,\n  SYSVAR_SLOT_HASHES_PUBKEY,\n} from '@solana/web3.js';\nimport { sendTransactions, SequenceType } from './connection';\n\nimport {\n  CIVIC,\n  getAtaForMint,\n  getNetworkExpire,\n  getNetworkToken,\n  SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n} from './utils';\n\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\n  'cndy3Z4yapfJBmL3ShUp5exZKqR3z33thTzeNMm2gRZ',\n);\n\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\n  'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',\n);\n\ninterface CandyMachineState {\n  authority: anchor.web3.PublicKey;\n  itemsAvailable: number;\n  itemsRedeemed: number;\n  itemsRemaining: number;\n  treasury: anchor.web3.PublicKey;\n  tokenMint: null | anchor.web3.PublicKey;\n  isSoldOut: boolean;\n  isActive: boolean;\n  isPresale: boolean;\n  isWhitelistOnly: boolean;\n  goLiveDate: anchor.BN;\n  price: anchor.BN;\n  gatekeeper: null | {\n    expireOnUse: boolean;\n    gatekeeperNetwork: anchor.web3.PublicKey;\n  };\n  endSettings: null | {\n    number: anchor.BN;\n    endSettingType: any;\n  };\n  whitelistMintSettings: null | {\n    mode: any;\n    mint: anchor.web3.PublicKey;\n    presale: boolean;\n    discountPrice: null | anchor.BN;\n  };\n  hiddenSettings: null | {\n    name: string;\n    uri: string;\n    hash: Uint8Array;\n  };\n  retainAuthority: boolean;\n}\n\nexport interface CandyMachineAccount {\n  id: anchor.web3.PublicKey;\n  program: anchor.Program;\n  state: CandyMachineState;\n}\n\nexport const awaitTransactionSignatureConfirmation = async (\n  txid: anchor.web3.TransactionSignature,\n  timeout: number,\n  connection: anchor.web3.Connection,\n  queryStatus = false,\n): Promise<anchor.web3.SignatureStatus | null | void> => {\n  let done = false;\n  let status: anchor.web3.SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log('Rejecting for timeout...');\n      reject({ timeout: true });\n    }, timeout);\n\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log('REST null result for', txid, status);\n            } else if (status.err) {\n              console.log('REST error for', txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log('REST no confirmations for', txid, status);\n            } else {\n              console.log('REST confirmation for', txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log('REST connection error: txid', txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  if (connection._signatureSubscriptions[subId]) {\n    connection.removeSignatureListener(subId);\n  }\n  done = true;\n  console.log('Returning status', status);\n  return status;\n};\n\nconst createAssociatedTokenAccountInstruction = (\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey,\n) => {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new anchor.web3.TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n};\n\nexport const getCandyMachineState = async (\n  anchorWallet: anchor.Wallet,\n  candyMachineId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<CandyMachineAccount> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: 'processed',\n  });\n\n  const idl = await anchor.Program.fetchIdl(CANDY_MACHINE_PROGRAM, provider);\n\n  const program = new anchor.Program(idl!, CANDY_MACHINE_PROGRAM, provider);\n\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\n\n  return {\n    id: candyMachineId,\n    program,\n    state: {\n      authority: state.authority,\n      itemsAvailable,\n      itemsRedeemed,\n      itemsRemaining,\n      isSoldOut: itemsRemaining === 0,\n      isActive: false,\n      isPresale: false,\n      isWhitelistOnly: false,\n      goLiveDate: state.data.goLiveDate,\n      treasury: state.wallet,\n      tokenMint: state.tokenMint,\n      gatekeeper: state.data.gatekeeper,\n      endSettings: state.data.endSettings,\n      whitelistMintSettings: state.data.whitelistMintSettings,\n      hiddenSettings: state.data.hiddenSettings,\n      price: state.data.price,\n      retainAuthority: state.data.retainAuthority,\n    },\n  };\n};\n\nconst getMasterEdition = async (\n  mint: anchor.web3.PublicKey,\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from('metadata'),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from('edition'),\n      ],\n      TOKEN_METADATA_PROGRAM_ID,\n    )\n  )[0];\n};\n\nconst getMetadata = async (\n  mint: anchor.web3.PublicKey,\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from('metadata'),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID,\n    )\n  )[0];\n};\n\nexport const getCandyMachineCreator = async (\n  candyMachine: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from('candy_machine'), candyMachine.toBuffer()],\n    CANDY_MACHINE_PROGRAM,\n  );\n};\n\nexport const getCollectionPDA = async (\n  candyMachineAddress: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from('collection'), candyMachineAddress.toBuffer()],\n    CANDY_MACHINE_PROGRAM,\n  );\n};\n\nexport interface CollectionData {\n  mint: anchor.web3.PublicKey;\n  candyMachine: anchor.web3.PublicKey;\n}\n\nexport const getCollectionAuthorityRecordPDA = async (\n  mint: anchor.web3.PublicKey,\n  newAuthority: anchor.web3.PublicKey,\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from('metadata'),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from('collection_authority'),\n        newAuthority.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID,\n    )\n  )[0];\n};\n\nexport type SetupState = {\n  mint: anchor.web3.Keypair;\n  userTokenAccount: anchor.web3.PublicKey;\n  transaction: string;\n};\n\nexport const createAccountsForMint = async (\n  candyMachine: CandyMachineAccount,\n  payer: anchor.web3.PublicKey,\n): Promise<SetupState> => {\n  const mint = anchor.web3.Keypair.generate();\n  const userTokenAccountAddress = (\n    await getAtaForMint(mint.publicKey, payer)\n  )[0];\n\n  const signers: anchor.web3.Keypair[] = [mint];\n  const instructions = [\n    anchor.web3.SystemProgram.createAccount({\n      fromPubkey: payer,\n      newAccountPubkey: mint.publicKey,\n      space: MintLayout.span,\n      lamports:\n        await candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(\n          MintLayout.span,\n        ),\n      programId: TOKEN_PROGRAM_ID,\n    }),\n    Token.createInitMintInstruction(\n      TOKEN_PROGRAM_ID,\n      mint.publicKey,\n      0,\n      payer,\n      payer,\n    ),\n    createAssociatedTokenAccountInstruction(\n      userTokenAccountAddress,\n      payer,\n      payer,\n      mint.publicKey,\n    ),\n    Token.createMintToInstruction(\n      TOKEN_PROGRAM_ID,\n      mint.publicKey,\n      userTokenAccountAddress,\n      payer,\n      [],\n      1,\n    ),\n  ];\n\n  return {\n    mint: mint,\n    userTokenAccount: userTokenAccountAddress,\n    transaction: (\n      await sendTransactions(\n        candyMachine.program.provider.connection,\n        candyMachine.program.provider.wallet,\n        [instructions],\n        [signers],\n        SequenceType.StopOnFailure,\n        'singleGossip',\n        () => {},\n        () => false,\n        undefined,\n        [],\n        [],\n      )\n    ).txs[0].txid,\n  };\n};\n\ntype MintResult = {\n  mintTxId: string;\n  metadataKey: anchor.web3.PublicKey;\n};\n\nexport const mintOneToken = async (\n  candyMachine: CandyMachineAccount,\n  payer: anchor.web3.PublicKey,\n  beforeTransactions: Transaction[] = [],\n  afterTransactions: Transaction[] = [],\n  setupState?: SetupState,\n): Promise<MintResult | null> => {\n  const mint = setupState?.mint ?? anchor.web3.Keypair.generate();\n  const userTokenAccountAddress = (\n    await getAtaForMint(mint.publicKey, payer)\n  )[0];\n\n  const userPayingAccountAddress = candyMachine.state.tokenMint\n    ? (await getAtaForMint(candyMachine.state.tokenMint, payer))[0]\n    : payer;\n\n  const candyMachineAddress = candyMachine.id;\n  const remainingAccounts = [];\n  const instructions = [];\n  const signers: anchor.web3.Keypair[] = [];\n  console.log('SetupState: ', setupState);\n  if (!setupState) {\n    signers.push(mint);\n    instructions.push(\n      ...[\n        anchor.web3.SystemProgram.createAccount({\n          fromPubkey: payer,\n          newAccountPubkey: mint.publicKey,\n          space: MintLayout.span,\n          lamports:\n            await candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(\n              MintLayout.span,\n            ),\n          programId: TOKEN_PROGRAM_ID,\n        }),\n        Token.createInitMintInstruction(\n          TOKEN_PROGRAM_ID,\n          mint.publicKey,\n          0,\n          payer,\n          payer,\n        ),\n        createAssociatedTokenAccountInstruction(\n          userTokenAccountAddress,\n          payer,\n          payer,\n          mint.publicKey,\n        ),\n        Token.createMintToInstruction(\n          TOKEN_PROGRAM_ID,\n          mint.publicKey,\n          userTokenAccountAddress,\n          payer,\n          [],\n          1,\n        ),\n      ],\n    );\n  }\n\n  if (candyMachine.state.gatekeeper) {\n    remainingAccounts.push({\n      pubkey: (\n        await getNetworkToken(\n          payer,\n          candyMachine.state.gatekeeper.gatekeeperNetwork,\n        )\n      )[0],\n      isWritable: true,\n      isSigner: false,\n    });\n\n    if (candyMachine.state.gatekeeper.expireOnUse) {\n      remainingAccounts.push({\n        pubkey: CIVIC,\n        isWritable: false,\n        isSigner: false,\n      });\n      remainingAccounts.push({\n        pubkey: (\n          await getNetworkExpire(\n            candyMachine.state.gatekeeper.gatekeeperNetwork,\n          )\n        )[0],\n        isWritable: false,\n        isSigner: false,\n      });\n    }\n  }\n  if (candyMachine.state.whitelistMintSettings) {\n    const mint = new anchor.web3.PublicKey(\n      candyMachine.state.whitelistMintSettings.mint,\n    );\n\n    const whitelistToken = (await getAtaForMint(mint, payer))[0];\n    remainingAccounts.push({\n      pubkey: whitelistToken,\n      isWritable: true,\n      isSigner: false,\n    });\n\n    if (candyMachine.state.whitelistMintSettings.mode.burnEveryTime) {\n      remainingAccounts.push({\n        pubkey: mint,\n        isWritable: true,\n        isSigner: false,\n      });\n      remainingAccounts.push({\n        pubkey: payer,\n        isWritable: false,\n        isSigner: true,\n      });\n    }\n  }\n\n  if (candyMachine.state.tokenMint) {\n    remainingAccounts.push({\n      pubkey: userPayingAccountAddress,\n      isWritable: true,\n      isSigner: false,\n    });\n    remainingAccounts.push({\n      pubkey: payer,\n      isWritable: false,\n      isSigner: true,\n    });\n  }\n  const metadataAddress = await getMetadata(mint.publicKey);\n  const masterEdition = await getMasterEdition(mint.publicKey);\n\n  const [candyMachineCreator, creatorBump] = await getCandyMachineCreator(\n    candyMachineAddress,\n  );\n\n  console.log(remainingAccounts.map(rm => rm.pubkey.toBase58()));\n  instructions.push(\n    await candyMachine.program.instruction.mintNft(creatorBump, {\n      accounts: {\n        candyMachine: candyMachineAddress,\n        candyMachineCreator,\n        payer: payer,\n        wallet: candyMachine.state.treasury,\n        mint: mint.publicKey,\n        metadata: metadataAddress,\n        masterEdition,\n        mintAuthority: payer,\n        updateAuthority: payer,\n        tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n        tokenProgram: TOKEN_PROGRAM_ID,\n        systemProgram: SystemProgram.programId,\n        rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n        recentBlockhashes: SYSVAR_SLOT_HASHES_PUBKEY,\n        instructionSysvarAccount: anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY,\n      },\n      remainingAccounts:\n        remainingAccounts.length > 0 ? remainingAccounts : undefined,\n    }),\n  );\n\n  const [collectionPDA] = await getCollectionPDA(candyMachineAddress);\n  const collectionPDAAccount =\n    await candyMachine.program.provider.connection.getAccountInfo(\n      collectionPDA,\n    );\n\n  if (collectionPDAAccount && candyMachine.state.retainAuthority) {\n    try {\n      const collectionData =\n        (await candyMachine.program.account.collectionPda.fetch(\n          collectionPDA,\n        )) as CollectionData;\n      console.log(collectionData);\n      const collectionMint = collectionData.mint;\n      const collectionAuthorityRecord = await getCollectionAuthorityRecordPDA(\n        collectionMint,\n        collectionPDA,\n      );\n      console.log(collectionMint);\n      if (collectionMint) {\n        const collectionMetadata = await getMetadata(collectionMint);\n        const collectionMasterEdition = await getMasterEdition(collectionMint);\n        console.log('Collection PDA: ', collectionPDA.toBase58());\n        console.log('Authority: ', candyMachine.state.authority.toBase58());\n        instructions.push(\n          await candyMachine.program.instruction.setCollectionDuringMint({\n            accounts: {\n              candyMachine: candyMachineAddress,\n              metadata: metadataAddress,\n              payer: payer,\n              collectionPda: collectionPDA,\n              tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n              instructions: anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY,\n              collectionMint,\n              collectionMetadata,\n              collectionMasterEdition,\n              authority: candyMachine.state.authority,\n              collectionAuthorityRecord,\n            },\n          }),\n        );\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  const instructionsMatrix = [instructions];\n  const signersMatrix = [signers];\n\n  try {\n    const txns = (\n      await sendTransactions(\n        candyMachine.program.provider.connection,\n        candyMachine.program.provider.wallet,\n        instructionsMatrix,\n        signersMatrix,\n        SequenceType.StopOnFailure,\n        'singleGossip',\n        () => {},\n        () => false,\n        undefined,\n        beforeTransactions,\n        afterTransactions,\n      )\n    ).txs.map(t => t.txid);\n    const mintTxn = txns[0];\n    return {\n      mintTxId: mintTxn,\n      metadataKey: metadataAddress,\n    };\n  } catch (e) {\n    console.log(e);\n  }\n  return null;\n};\n\nexport const shortenAddress = (address: string, chars = 4): string => {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n};\n\nconst sleep = (ms: number): Promise<void> => {\n  return new Promise(resolve => setTimeout(resolve, ms));\n};\n"]},"metadata":{},"sourceType":"module"}