{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { Button } from '@material-ui/core';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport React, { useCallback, useMemo } from 'react';\nimport { WalletIcon } from './WalletIcon';\nexport var WalletConnectButton = function WalletConnectButton(_a) {\n  var _a$color = _a.color,\n      color = _a$color === void 0 ? 'primary' : _a$color,\n      _a$variant = _a.variant,\n      variant = _a$variant === void 0 ? 'contained' : _a$variant,\n      _a$type = _a.type,\n      type = _a$type === void 0 ? 'button' : _a$type,\n      children = _a.children,\n      disabled = _a.disabled,\n      onClick = _a.onClick,\n      props = __rest(_a, [\"color\", \"variant\", \"type\", \"children\", \"disabled\", \"onClick\"]);\n\n  var _useWallet = useWallet(),\n      wallet = _useWallet.wallet,\n      connect = _useWallet.connect,\n      connecting = _useWallet.connecting,\n      connected = _useWallet.connected;\n\n  var handleClick = useCallback(function (event) {\n    if (onClick) onClick(event); // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n    if (!event.defaultPrevented) connect().catch(function () {// Silently catch because any errors are caught by the context `onError` handler\n    });\n  }, [onClick, connect]);\n  var content = useMemo(function () {\n    if (children) return children;\n    if (connecting) return 'Connecting ...';\n    if (connected) return 'Connected';\n    if (wallet) return 'Connect';\n    return 'Connect Wallet';\n  }, [children, connecting, connected, wallet]);\n  return React.createElement(Button, Object.assign({\n    color: color,\n    variant: variant,\n    type: type,\n    onClick: handleClick,\n    disabled: disabled || !wallet || connecting || connected,\n    startIcon: React.createElement(WalletIcon, {\n      wallet: wallet\n    })\n  }, props), content);\n};","map":{"version":3,"sources":["../src/WalletConnectButton.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,SAAS,MAAT,QAAoC,mBAApC;AACA,SAAS,SAAT,QAA0B,8BAA1B;AACA,OAAO,KAAP,IAAuC,WAAvC,EAAoD,OAApD,QAAmE,OAAnE;AACA,SAAS,UAAT,QAA2B,cAA3B;AAEA,OAAO,IAAM,mBAAmB,GAAoB,SAAvC,mBAAuC,CAAC,EAAD,EAQ/C;AARgD,iBAM1C,EAN0C,CACjD,KADiD;AAAA,MACjD,KADiD,yBACzC,SADyC;AAAA,mBAM1C,EAN0C,CAEjD,OAFiD;AAAA,MAEjD,OAFiD,2BAEvC,WAFuC;AAAA,gBAM1C,EAN0C,CAGjD,IAHiD;AAAA,MAGjD,IAHiD,wBAG1C,QAH0C;AAAA,MAIjD,QAJiD,GAM1C,EAN0C,CAIjD,QAJiD;AAAA,MAKjD,QALiD,GAM1C,EAN0C,CAKjD,QALiD;AAAA,MAMjD,OANiD,GAM1C,EAN0C,CAMjD,OANiD;AAAA,MAO9C,KAP8C,GAOzC,MAAA,CAAA,EAAA,EAPyC,CAAA,OAAA,EAAA,SAAA,EAAA,MAAA,EAAA,UAAA,EAAA,UAAA,EAAA,SAAA,CAOzC,CAPyC;;AASjD,mBAAmD,SAAS,EAA5D;AAAA,MAAQ,MAAR,cAAQ,MAAR;AAAA,MAAgB,OAAhB,cAAgB,OAAhB;AAAA,MAAyB,UAAzB,cAAyB,UAAzB;AAAA,MAAqC,SAArC,cAAqC,SAArC;;AAEA,MAAM,WAAW,GAAyC,WAAW,CACjE,UAAC,KAAD,EAAU;AACN,QAAI,OAAJ,EAAa,OAAO,CAAC,KAAD,CAAP,CADP,CAEN;;AACA,QAAI,CAAC,KAAK,CAAC,gBAAX,EACI,OAAO,GAAG,KAAV,CAAgB,YAAK,CACjB;AACH,KAFD;AAGP,GARgE,EASjE,CAAC,OAAD,EAAU,OAAV,CATiE,CAArE;AAYA,MAAM,OAAO,GAAG,OAAO,CAAC,YAAK;AACzB,QAAI,QAAJ,EAAc,OAAO,QAAP;AACd,QAAI,UAAJ,EAAgB,OAAO,gBAAP;AAChB,QAAI,SAAJ,EAAe,OAAO,WAAP;AACf,QAAI,MAAJ,EAAY,OAAO,SAAP;AACZ,WAAO,gBAAP;AACH,GANsB,EAMpB,CAAC,QAAD,EAAW,UAAX,EAAuB,SAAvB,EAAkC,MAAlC,CANoB,CAAvB;AAQA,SACI,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO,MAAA,CAAA,MAAA,CAAA;AACH,IAAA,KAAK,EAAE,KADJ;AAEH,IAAA,OAAO,EAAE,OAFN;AAGH,IAAA,IAAI,EAAE,IAHH;AAIH,IAAA,OAAO,EAAE,WAJN;AAKH,IAAA,QAAQ,EAAE,QAAQ,IAAI,CAAC,MAAb,IAAuB,UAAvB,IAAqC,SAL5C;AAMH,IAAA,SAAS,EAAE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AAAC,MAAA,MAAM,EAAE;AAAT,KAAX;AANR,GAAA,EAOC,KAPD,CAAP,EASK,OATL,CADJ;AAaH,CA5CM","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Button } from '@material-ui/core';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport React, { useCallback, useMemo } from 'react';\nimport { WalletIcon } from './WalletIcon';\nexport const WalletConnectButton = (_a) => {\n    var { color = 'primary', variant = 'contained', type = 'button', children, disabled, onClick } = _a, props = __rest(_a, [\"color\", \"variant\", \"type\", \"children\", \"disabled\", \"onClick\"]);\n    const { wallet, connect, connecting, connected } = useWallet();\n    const handleClick = useCallback((event) => {\n        if (onClick)\n            onClick(event);\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        if (!event.defaultPrevented)\n            connect().catch(() => {\n                // Silently catch because any errors are caught by the context `onError` handler\n            });\n    }, [onClick, connect]);\n    const content = useMemo(() => {\n        if (children)\n            return children;\n        if (connecting)\n            return 'Connecting ...';\n        if (connected)\n            return 'Connected';\n        if (wallet)\n            return 'Connect';\n        return 'Connect Wallet';\n    }, [children, connecting, connected, wallet]);\n    return (React.createElement(Button, Object.assign({ color: color, variant: variant, type: type, onClick: handleClick, disabled: disabled || !wallet || connecting || connected, startIcon: React.createElement(WalletIcon, { wallet: wallet }) }, props), content));\n};\n//# sourceMappingURL=WalletConnectButton.js.map"]},"metadata":{},"sourceType":"module"}