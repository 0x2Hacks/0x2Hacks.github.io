{"ast":null,"code":"import _createForOfIteratorHelper from \"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _regeneratorRuntime from \"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/regenerator/index.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { BaseSignerWalletAdapter, pollUntilReady, WalletAccountError, WalletNotConnectedError, WalletNotFoundError, WalletNotInstalledError, WalletPublicKeyError, WalletSignTransactionError } from '@solana/wallet-adapter-base';\nimport { PublicKey } from '@solana/web3.js';\nimport bs58 from 'bs58';\nexport var Coin98WalletAdapter = /*#__PURE__*/function (_BaseSignerWalletAdap) {\n  _inherits(Coin98WalletAdapter, _BaseSignerWalletAdap);\n\n  var _super = _createSuper(Coin98WalletAdapter);\n\n  function Coin98WalletAdapter() {\n    var _this;\n\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Coin98WalletAdapter);\n\n    _this = _super.call(this);\n    _this._connecting = false;\n    _this._wallet = null;\n    _this._publicKey = null;\n    if (!_this.ready) pollUntilReady(_assertThisInitialized(_this), config.pollInterval || 1000, config.pollCount || 3);\n    return _this;\n  }\n\n  _createClass(Coin98WalletAdapter, [{\n    key: \"publicKey\",\n    get: function get() {\n      return this._publicKey;\n    }\n  }, {\n    key: \"ready\",\n    get: function get() {\n      return typeof window !== 'undefined' && !!window.coin98;\n    }\n  }, {\n    key: \"connecting\",\n    get: function get() {\n      return this._connecting;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      var _a;\n\n      return !!((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.isConnected());\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      var _a;\n\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var wallet, account, _yield$wallet$connect, _yield$wallet$connect2, publicKey;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!(this.connected || this.connecting)) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                this._connecting = true;\n                wallet = typeof window !== 'undefined' && ((_a = window.coin98) === null || _a === void 0 ? void 0 : _a.sol);\n\n                if (wallet) {\n                  _context.next = 7;\n                  break;\n                }\n\n                throw new WalletNotFoundError();\n\n              case 7:\n                if (wallet.isCoin98) {\n                  _context.next = 9;\n                  break;\n                }\n\n                throw new WalletNotInstalledError();\n\n              case 9:\n                _context.prev = 9;\n                _context.next = 12;\n                return wallet.connect();\n\n              case 12:\n                _yield$wallet$connect = _context.sent;\n                _yield$wallet$connect2 = _slicedToArray(_yield$wallet$connect, 1);\n                account = _yield$wallet$connect2[0];\n                _context.next = 20;\n                break;\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](9);\n                throw new WalletAccountError(_context.t0 === null || _context.t0 === void 0 ? void 0 : _context.t0.message, _context.t0);\n\n              case 20:\n                _context.prev = 20;\n                publicKey = new PublicKey(account);\n                _context.next = 27;\n                break;\n\n              case 24:\n                _context.prev = 24;\n                _context.t1 = _context[\"catch\"](20);\n                throw new WalletPublicKeyError(_context.t1 === null || _context.t1 === void 0 ? void 0 : _context.t1.message, _context.t1);\n\n              case 27:\n                this._wallet = wallet;\n                this._publicKey = publicKey;\n                this.emit('connect');\n                _context.next = 36;\n                break;\n\n              case 32:\n                _context.prev = 32;\n                _context.t2 = _context[\"catch\"](0);\n                this.emit('error', _context.t2);\n                throw _context.t2;\n\n              case 36:\n                _context.prev = 36;\n                this._connecting = false;\n                return _context.finish(36);\n\n              case 39:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 32, 36, 39], [9, 17], [20, 24]]);\n      }));\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var wallet;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                wallet = this._wallet;\n\n                if (!wallet) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                this._wallet = null;\n                this._publicKey = null;\n                _context2.next = 6;\n                return wallet.disconnect();\n\n              case 6:\n                this.emit('disconnect');\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"signTransaction\",\n    value: function signTransaction(transaction) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var wallet, response, publicKey, signature;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                wallet = this._wallet;\n\n                if (wallet) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                throw new WalletNotConnectedError();\n\n              case 4:\n                _context3.prev = 4;\n                _context3.next = 7;\n                return wallet.request({\n                  method: 'sol_sign',\n                  params: [transaction]\n                });\n\n              case 7:\n                response = _context3.sent;\n                publicKey = new PublicKey(response.publicKey);\n                signature = bs58.decode(response.signature);\n                transaction.addSignature(publicKey, signature);\n                return _context3.abrupt(\"return\", transaction);\n\n              case 14:\n                _context3.prev = 14;\n                _context3.t0 = _context3[\"catch\"](4);\n                throw new WalletSignTransactionError(_context3.t0 === null || _context3.t0 === void 0 ? void 0 : _context3.t0.message, _context3.t0);\n\n              case 17:\n                _context3.next = 23;\n                break;\n\n              case 19:\n                _context3.prev = 19;\n                _context3.t1 = _context3[\"catch\"](0);\n                this.emit('error', _context3.t1);\n                throw _context3.t1;\n\n              case 23:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 19], [4, 14]]);\n      }));\n    }\n  }, {\n    key: \"signAllTransactions\",\n    value: function signAllTransactions(transactions) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var signedTransactions, _iterator, _step, transaction;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                signedTransactions = [];\n                _iterator = _createForOfIteratorHelper(transactions);\n                _context4.prev = 2;\n\n                _iterator.s();\n\n              case 4:\n                if ((_step = _iterator.n()).done) {\n                  _context4.next = 13;\n                  break;\n                }\n\n                transaction = _step.value;\n                _context4.t0 = signedTransactions;\n                _context4.next = 9;\n                return this.signTransaction(transaction);\n\n              case 9:\n                _context4.t1 = _context4.sent;\n\n                _context4.t0.push.call(_context4.t0, _context4.t1);\n\n              case 11:\n                _context4.next = 4;\n                break;\n\n              case 13:\n                _context4.next = 18;\n                break;\n\n              case 15:\n                _context4.prev = 15;\n                _context4.t2 = _context4[\"catch\"](2);\n\n                _iterator.e(_context4.t2);\n\n              case 18:\n                _context4.prev = 18;\n\n                _iterator.f();\n\n                return _context4.finish(18);\n\n              case 21:\n                return _context4.abrupt(\"return\", signedTransactions);\n\n              case 22:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[2, 15, 18, 21]]);\n      }));\n    }\n  }]);\n\n  return Coin98WalletAdapter;\n}(BaseSignerWalletAdapter);","map":{"version":3,"sources":["../src/adapter.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BaseSignerWalletAdapter, pollUntilReady, WalletAccountError, WalletNotConnectedError, WalletNotFoundError, WalletNotInstalledError, WalletPublicKeyError, WalletSignTransactionError, } from '@solana/wallet-adapter-base';\nimport { PublicKey } from '@solana/web3.js';\nimport bs58 from 'bs58';\nexport class Coin98WalletAdapter extends BaseSignerWalletAdapter {\n    constructor(config = {}) {\n        super();\n        this._connecting = false;\n        this._wallet = null;\n        this._publicKey = null;\n        if (!this.ready)\n            pollUntilReady(this, config.pollInterval || 1000, config.pollCount || 3);\n    }\n    get publicKey() {\n        return this._publicKey;\n    }\n    get ready() {\n        return typeof window !== 'undefined' && !!window.coin98;\n    }\n    get connecting() {\n        return this._connecting;\n    }\n    get connected() {\n        var _a;\n        return !!((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.isConnected());\n    }\n    connect() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (this.connected || this.connecting)\n                    return;\n                this._connecting = true;\n                const wallet = typeof window !== 'undefined' && ((_a = window.coin98) === null || _a === void 0 ? void 0 : _a.sol);\n                if (!wallet)\n                    throw new WalletNotFoundError();\n                if (!wallet.isCoin98)\n                    throw new WalletNotInstalledError();\n                let account;\n                try {\n                    [account] = yield wallet.connect();\n                }\n                catch (error) {\n                    throw new WalletAccountError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n                let publicKey;\n                try {\n                    publicKey = new PublicKey(account);\n                }\n                catch (error) {\n                    throw new WalletPublicKeyError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n                this._wallet = wallet;\n                this._publicKey = publicKey;\n                this.emit('connect');\n            }\n            catch (error) {\n                this.emit('error', error);\n                throw error;\n            }\n            finally {\n                this._connecting = false;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wallet = this._wallet;\n            if (wallet) {\n                this._wallet = null;\n                this._publicKey = null;\n                yield wallet.disconnect();\n            }\n            this.emit('disconnect');\n        });\n    }\n    signTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                if (!wallet)\n                    throw new WalletNotConnectedError();\n                try {\n                    const response = yield wallet.request({ method: 'sol_sign', params: [transaction] });\n                    const publicKey = new PublicKey(response.publicKey);\n                    const signature = bs58.decode(response.signature);\n                    transaction.addSignature(publicKey, signature);\n                    return transaction;\n                }\n                catch (error) {\n                    throw new WalletSignTransactionError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n            }\n            catch (error) {\n                this.emit('error', error);\n                throw error;\n            }\n        });\n    }\n    signAllTransactions(transactions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const signedTransactions = [];\n            for (const transaction of transactions) {\n                signedTransactions.push(yield this.signTransaction(transaction));\n            }\n            return signedTransactions;\n        });\n    }\n}\n//# sourceMappingURL=adapter.js.map"]},"metadata":{},"sourceType":"module"}