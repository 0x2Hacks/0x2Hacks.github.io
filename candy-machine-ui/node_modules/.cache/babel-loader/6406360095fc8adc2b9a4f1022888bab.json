{"ast":null,"code":"import _objectSpread from\"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import _regeneratorRuntime from\"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/regenerator/index.js\";import{useCallback,useEffect,useMemo,useState}from'react';import*as anchor from'@project-serum/anchor';import styled from'styled-components';import{Container,Snackbar}from'@material-ui/core';import Paper from'@material-ui/core/Paper';import Alert from'@material-ui/lab/Alert';import Grid from'@material-ui/core/Grid';import Typography from'@material-ui/core/Typography';import{Connection,PublicKey}from'@solana/web3.js';import{useWallet}from'@solana/wallet-adapter-react';import{WalletDialogButton}from'@solana/wallet-adapter-material-ui';import{awaitTransactionSignatureConfirmation,CANDY_MACHINE_PROGRAM,createAccountsForMint,getCandyMachineState,getCollectionPDA,mintOneToken}from'./candy-machine';import{formatNumber,getAtaForMint,toDate}from'./utils';import{MintCountdown}from'./MintCountdown';import{MintButton}from'./MintButton';import{GatewayProvider}from'@civic/solana-gateway-react';import{sendTransaction}from'./connection';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ConnectButton=styled(WalletDialogButton)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 60px;\\n  margin-top: 10px;\\n  margin-bottom: 5px;\\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\\n  color: white;\\n  font-size: 16px;\\n  font-weight: bold;\\n\"])));var MintContainer=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\"])));// add your owns styles here\nvar Home=function Home(props){var _candyMachine$state,_candyMachine$state2,_candyMachine$state2$;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isUserMinting=_useState2[0],setIsUserMinting=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),candyMachine=_useState4[0],setCandyMachine=_useState4[1];var _useState5=useState({open:false,message:'',severity:undefined}),_useState6=_slicedToArray(_useState5,2),alertState=_useState6[0],setAlertState=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isActive=_useState8[0],setIsActive=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),endDate=_useState10[0],setEndDate=_useState10[1];var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),itemsRemaining=_useState12[0],setItemsRemaining=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),isWhitelistUser=_useState14[0],setIsWhitelistUser=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),isPresale=_useState16[0],setIsPresale=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),isValidBalance=_useState18[0],setIsValidBalance=_useState18[1];var _useState19=useState(),_useState20=_slicedToArray(_useState19,2),discountPrice=_useState20[0],setDiscountPrice=_useState20[1];var _useState21=useState(true),_useState22=_slicedToArray(_useState21,2),needTxnSplit=_useState22[0],setNeedTxnSplit=_useState22[1];var _useState23=useState(),_useState24=_slicedToArray(_useState23,2),setupTxn=_useState24[0],setSetupTxn=_useState24[1];var rpcUrl=props.rpcHost;var wallet=useWallet();var cluster=props.network;var anchorWallet=useMemo(function(){if(!wallet||!wallet.publicKey||!wallet.signAllTransactions||!wallet.signTransaction){return;}return{publicKey:wallet.publicKey,signAllTransactions:wallet.signAllTransactions,signTransaction:wallet.signTransaction};},[wallet]);var refreshCandyMachineState=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var commitment,connection,_cndy$state$goLiveDat,_cndy$state$endSettin,_cndy$state$endSettin2,_cndy$state$whitelist,_cndy$state$whitelist2,_cndy$state$gatekeepe,cndy,active,presale,isWLUser,userPrice,mint,token,balance,_mint,_token,_balance,valid,_balance2,_valid,limit,_yield$getCollectionP,_yield$getCollectionP2,collectionPDA,collectionPDAAccount,txnEstimate,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:commitment=_args.length>0&&_args[0]!==undefined?_args[0]:'confirmed';if(anchorWallet){_context.next=3;break;}return _context.abrupt(\"return\");case 3:connection=new Connection(props.rpcHost,commitment);if(!props.candyMachineId){_context.next=90;break;}_context.prev=5;_context.next=8;return getCandyMachineState(anchorWallet,props.candyMachineId,connection);case 8:cndy=_context.sent;active=(cndy===null||cndy===void 0?void 0:(_cndy$state$goLiveDat=cndy.state.goLiveDate)===null||_cndy$state$goLiveDat===void 0?void 0:_cndy$state$goLiveDat.toNumber())<new Date().getTime()/1000;presale=false;// duplication of state to make sure we have the right values!\nisWLUser=false;userPrice=cndy.state.price;// whitelist mint?\nif(!(cndy!==null&&cndy!==void 0&&cndy.state.whitelistMintSettings)){_context.next=35;break;}// is it a presale mint?\nif(cndy.state.whitelistMintSettings.presale&&(!cndy.state.goLiveDate||cndy.state.goLiveDate.toNumber()>new Date().getTime()/1000)){presale=true;}// is there a discount?\nif(cndy.state.whitelistMintSettings.discountPrice){setDiscountPrice(cndy.state.whitelistMintSettings.discountPrice);userPrice=cndy.state.whitelistMintSettings.discountPrice;}else{setDiscountPrice(undefined);// when presale=false and discountPrice=null, mint is restricted\n// to whitelist users only\nif(!cndy.state.whitelistMintSettings.presale){cndy.state.isWhitelistOnly=true;}}// retrieves the whitelist token\nmint=new anchor.web3.PublicKey(cndy.state.whitelistMintSettings.mint);_context.next=19;return getAtaForMint(mint,anchorWallet.publicKey);case 19:token=_context.sent[0];_context.prev=20;_context.next=23;return connection.getTokenAccountBalance(token);case 23:balance=_context.sent;isWLUser=parseInt(balance.value.amount)>0;// only whitelist the user if the balance > 0\nsetIsWhitelistUser(isWLUser);if(cndy.state.isWhitelistOnly){active=isWLUser&&(presale||active);}_context.next=35;break;case 29:_context.prev=29;_context.t0=_context[\"catch\"](20);setIsWhitelistUser(false);// no whitelist user, no mint\nif(cndy.state.isWhitelistOnly){active=false;}console.log('There was a problem fetching whitelist token balance');console.log(_context.t0);case 35:userPrice=isWLUser?userPrice:cndy.state.price;if(!(cndy!==null&&cndy!==void 0&&cndy.state.tokenMint)){_context.next=58;break;}// retrieves the SPL token\n_mint=new anchor.web3.PublicKey(cndy.state.tokenMint);_context.next=40;return getAtaForMint(_mint,anchorWallet.publicKey);case 40:_token=_context.sent[0];_context.prev=41;_context.next=44;return connection.getTokenAccountBalance(_token);case 44:_balance=_context.sent;valid=new anchor.BN(_balance.value.amount).gte(userPrice);// only allow user to mint if token balance >  the user if the balance > 0\nsetIsValidBalance(valid);active=active&&valid;_context.next=56;break;case 50:_context.prev=50;_context.t1=_context[\"catch\"](41);setIsValidBalance(false);active=false;// no whitelist user, no mint\nconsole.log('There was a problem fetching SPL token balance');console.log(_context.t1);case 56:_context.next=66;break;case 58:_context.t2=anchor.BN;_context.next=61;return connection.getBalance(anchorWallet.publicKey);case 61:_context.t3=_context.sent;_balance2=new _context.t2(_context.t3);_valid=_balance2.gte(userPrice);setIsValidBalance(_valid);active=active&&_valid;case 66:// datetime to stop the mint?\nif(cndy!==null&&cndy!==void 0&&(_cndy$state$endSettin=cndy.state.endSettings)!==null&&_cndy$state$endSettin!==void 0&&_cndy$state$endSettin.endSettingType.date){setEndDate(toDate(cndy.state.endSettings.number));if(cndy.state.endSettings.number.toNumber()<new Date().getTime()/1000){active=false;}}// amount to stop the mint?\nif(cndy!==null&&cndy!==void 0&&(_cndy$state$endSettin2=cndy.state.endSettings)!==null&&_cndy$state$endSettin2!==void 0&&_cndy$state$endSettin2.endSettingType.amount){limit=Math.min(cndy.state.endSettings.number.toNumber(),cndy.state.itemsAvailable);if(cndy.state.itemsRedeemed<limit){setItemsRemaining(limit-cndy.state.itemsRedeemed);}else{setItemsRemaining(0);cndy.state.isSoldOut=true;}}else{setItemsRemaining(cndy.state.itemsRemaining);}if(cndy.state.isSoldOut){active=false;}_context.next=71;return getCollectionPDA(props.candyMachineId);case 71:_yield$getCollectionP=_context.sent;_yield$getCollectionP2=_slicedToArray(_yield$getCollectionP,1);collectionPDA=_yield$getCollectionP2[0];_context.next=76;return connection.getAccountInfo(collectionPDA);case 76:collectionPDAAccount=_context.sent;setIsActive(cndy.state.isActive=active);setIsPresale(cndy.state.isPresale=presale);setCandyMachine(cndy);txnEstimate=892+(!!collectionPDAAccount&&cndy.state.retainAuthority?182:0)+(cndy.state.tokenMint?66:0)+(cndy.state.whitelistMintSettings?34:0)+((_cndy$state$whitelist=cndy.state.whitelistMintSettings)!==null&&_cndy$state$whitelist!==void 0&&(_cndy$state$whitelist2=_cndy$state$whitelist.mode)!==null&&_cndy$state$whitelist2!==void 0&&_cndy$state$whitelist2.burnEveryTime?34:0)+(cndy.state.gatekeeper?33:0)+((_cndy$state$gatekeepe=cndy.state.gatekeeper)!==null&&_cndy$state$gatekeepe!==void 0&&_cndy$state$gatekeepe.expireOnUse?66:0);setNeedTxnSplit(txnEstimate>1230);_context.next=88;break;case 84:_context.prev=84;_context.t4=_context[\"catch\"](5);if(_context.t4 instanceof Error){if(_context.t4.message===\"Account does not exist \".concat(props.candyMachineId)){setAlertState({open:true,message:\"Couldn't fetch candy machine state from candy machine with address: \".concat(props.candyMachineId,\", using rpc: \").concat(props.rpcHost,\"! You probably typed the REACT_APP_CANDY_MACHINE_ID value in wrong in your .env file, or you are using the wrong RPC!\"),severity:'error',hideDuration:null});}else if(_context.t4.message.startsWith('failed to get info about account')){setAlertState({open:true,message:\"Couldn't fetch candy machine state with rpc: \".concat(props.rpcHost,\"! This probably means you have an issue with the REACT_APP_SOLANA_RPC_HOST value in your .env file, or you are not using a custom RPC!\"),severity:'error',hideDuration:null});}}else{setAlertState({open:true,message:\"\".concat(_context.t4),severity:'error',hideDuration:null});}console.log(_context.t4);case 88:_context.next=91;break;case 90:setAlertState({open:true,message:\"Your REACT_APP_CANDY_MACHINE_ID value in the .env file doesn't look right! Make sure you enter it in as plain base-58 address!\",severity:'error',hideDuration:null});case 91:case\"end\":return _context.stop();}}},_callee,null,[[5,84],[20,29],[41,50]]);})),[anchorWallet,props.candyMachineId,props.rpcHost]);var onMint=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var beforeTransactions,afterTransactions,_document$getElementB,_setupMint,setupMint,_status,mintResult,status,metadataStatus,remaining,message,_args2=arguments;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:beforeTransactions=_args2.length>0&&_args2[0]!==undefined?_args2[0]:[];afterTransactions=_args2.length>1&&_args2[1]!==undefined?_args2[1]:[];_context2.prev=2;setIsUserMinting(true);(_document$getElementB=document.getElementById('#identity'))===null||_document$getElementB===void 0?void 0:_document$getElementB.click();if(!(wallet.connected&&candyMachine!==null&&candyMachine!==void 0&&candyMachine.program&&wallet.publicKey)){_context2.next=41;break;}if(!(needTxnSplit&&setupTxn===undefined)){_context2.next=26;break;}setAlertState({open:true,message:'Please sign account setup transaction',severity:'info'});_context2.next=10;return createAccountsForMint(candyMachine,wallet.publicKey);case 10:setupMint=_context2.sent;_status={err:true};if(!setupMint.transaction){_context2.next=16;break;}_context2.next=15;return awaitTransactionSignatureConfirmation(setupMint.transaction,props.txTimeout,props.connection,true);case 15:_status=_context2.sent;case 16:if(!(_status&&!_status.err)){_context2.next=21;break;}setSetupTxn(setupMint);setAlertState({open:true,message:'Setup transaction succeeded! Please sign minting transaction',severity:'info'});_context2.next=24;break;case 21:setAlertState({open:true,message:'Mint failed! Please try again!',severity:'error'});setIsUserMinting(false);return _context2.abrupt(\"return\");case 24:_context2.next=27;break;case 26:setAlertState({open:true,message:'Please sign minting transaction',severity:'info'});case 27:_context2.next=29;return mintOneToken(candyMachine,wallet.publicKey,beforeTransactions,afterTransactions,(_setupMint=setupMint)!==null&&_setupMint!==void 0?_setupMint:setupTxn);case 29:mintResult=_context2.sent;status={err:true};metadataStatus=null;if(!mintResult){_context2.next=40;break;}_context2.next=35;return awaitTransactionSignatureConfirmation(mintResult.mintTxId,props.txTimeout,props.connection,true);case 35:status=_context2.sent;_context2.next=38;return candyMachine.program.provider.connection.getAccountInfo(mintResult.metadataKey,'processed');case 38:metadataStatus=_context2.sent;console.log('Metadata status: ',!!metadataStatus);case 40:if(status&&!status.err&&metadataStatus){// manual update since the refresh might not detect\n// the change immediately\nremaining=itemsRemaining-1;setItemsRemaining(remaining);setIsActive(candyMachine.state.isActive=remaining>0);candyMachine.state.isSoldOut=remaining===0;setSetupTxn(undefined);setAlertState({open:true,message:'Congratulations! Mint succeeded!',severity:'success',hideDuration:7000});refreshCandyMachineState('processed');}else if(status&&!status.err){setAlertState({open:true,message:'Mint likely failed! Anti-bot SOL 0.01 fee potentially charged! Check the explorer to confirm the mint failed and if so, make sure you are eligible to mint before trying again.',severity:'error',hideDuration:8000});refreshCandyMachineState();}else{setAlertState({open:true,message:'Mint failed! Please try again!',severity:'error'});refreshCandyMachineState();}case 41:_context2.next=49;break;case 43:_context2.prev=43;_context2.t0=_context2[\"catch\"](2);message=_context2.t0.msg||'Minting failed! Please try again!';if(!_context2.t0.msg){if(!_context2.t0.message){message='Transaction timeout! Please try again.';}else if(_context2.t0.message.indexOf('0x137')){console.log(_context2.t0);message=\"SOLD OUT!\";}else if(_context2.t0.message.indexOf('0x135')){message=\"Insufficient funds to mint. Please fund your wallet.\";}}else{if(_context2.t0.code===311){console.log(_context2.t0);message=\"SOLD OUT!\";window.location.reload();}else if(_context2.t0.code===312){message=\"Minting period hasn't started yet.\";}}setAlertState({open:true,message:message,severity:'error'});// updates the candy machine state to reflect the latest\n// information on chain\nrefreshCandyMachineState();case 49:_context2.prev=49;setIsUserMinting(false);return _context2.finish(49);case 52:case\"end\":return _context2.stop();}}},_callee2,null,[[2,43,49,52]]);}));return function onMint(){return _ref2.apply(this,arguments);};}();var toggleMintButton=function toggleMintButton(){var active=!isActive||isPresale;if(active){if(candyMachine.state.isWhitelistOnly&&!isWhitelistUser){active=false;}if(endDate&&Date.now()>=endDate.getTime()){active=false;}}if(isPresale&&candyMachine.state.goLiveDate&&candyMachine.state.goLiveDate.toNumber()<=new Date().getTime()/1000){setIsPresale(candyMachine.state.isPresale=false);}setIsActive(candyMachine.state.isActive=active);};useEffect(function(){refreshCandyMachineState();},[anchorWallet,props.candyMachineId,props.connection,refreshCandyMachineState]);useEffect(function(){(function loop(){setTimeout(function(){refreshCandyMachineState();loop();},20000);})();},[refreshCandyMachineState]);return/*#__PURE__*/_jsxs(Container,{style:{marginTop:100},children:[/*#__PURE__*/_jsx(Container,{maxWidth:\"xs\",style:{position:'relative'},children:/*#__PURE__*/_jsxs(Paper,{style:{padding:24,paddingBottom:10,backgroundColor:'#151A1F',borderRadius:6},children:[!wallet.connected?/*#__PURE__*/_jsx(ConnectButton,{children:\"Connect Wallet\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[candyMachine&&/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",justifyContent:\"center\",wrap:\"nowrap\",children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Remaining\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"textPrimary\",style:{fontWeight:'bold'},children:\"\".concat(itemsRemaining)})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:4,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:isWhitelistUser&&discountPrice?'Discount Price':'Price'}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"textPrimary\",style:{fontWeight:'bold'},children:isWhitelistUser&&discountPrice?\"\\u25CE \".concat(formatNumber.asNumber(discountPrice)):\"\\u25CE \".concat(formatNumber.asNumber(candyMachine.state.price))})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:5,children:isActive&&endDate&&Date.now()<endDate.getTime()?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MintCountdown,{date:getCountdownDate(candyMachine),style:{justifyContent:'flex-end'},status:\"COMPLETED\",onComplete:toggleMintButton},\"endSettings\"),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",align:\"center\",display:\"block\",style:{fontWeight:'bold'},children:\"TO END OF MINT\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MintCountdown,{date:getCountdownDate(candyMachine),style:{justifyContent:'flex-end'},status:candyMachine!==null&&candyMachine!==void 0&&(_candyMachine$state=candyMachine.state)!==null&&_candyMachine$state!==void 0&&_candyMachine$state.isSoldOut||endDate&&Date.now()>endDate.getTime()?'COMPLETED':isPresale?'PRESALE':'LIVE',onComplete:toggleMintButton},\"goLive\"),isPresale&&candyMachine.state.goLiveDate&&candyMachine.state.goLiveDate.toNumber()>new Date().getTime()/1000&&/*#__PURE__*/_jsx(Typography,{variant:\"caption\",align:\"center\",display:\"block\",style:{fontWeight:'bold'},children:\"UNTIL PUBLIC MINT\"})]})})]}),/*#__PURE__*/_jsx(MintContainer,{children:candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.isActive&&candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.gatekeeper&&wallet.publicKey&&wallet.signTransaction?/*#__PURE__*/_jsx(GatewayProvider,{wallet:{publicKey:wallet.publicKey||new PublicKey(CANDY_MACHINE_PROGRAM),//@ts-ignore\nsignTransaction:wallet.signTransaction},gatekeeperNetwork:candyMachine===null||candyMachine===void 0?void 0:(_candyMachine$state2=candyMachine.state)===null||_candyMachine$state2===void 0?void 0:(_candyMachine$state2$=_candyMachine$state2.gatekeeper)===null||_candyMachine$state2$===void 0?void 0:_candyMachine$state2$.gatekeeperNetwork,clusterUrl:rpcUrl,cluster:cluster,handleTransaction:/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(transaction){var userMustSign;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:setIsUserMinting(true);userMustSign=transaction.signatures.find(function(sig){return sig.publicKey.equals(wallet.publicKey);});if(!userMustSign){_context3.next=17;break;}setAlertState({open:true,message:'Please sign one-time Civic Pass issuance',severity:'info'});_context3.prev=4;_context3.next=7;return wallet.signTransaction(transaction);case 7:transaction=_context3.sent;_context3.next=15;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](4);setAlertState({open:true,message:'User cancelled signing',severity:'error'});// setTimeout(() => window.location.reload(), 2000);\nsetIsUserMinting(false);throw _context3.t0;case 15:_context3.next=18;break;case 17:setAlertState({open:true,message:'Refreshing Civic Pass',severity:'info'});case 18:_context3.prev=18;_context3.next=21;return sendTransaction(props.connection,wallet,transaction,[],true,'confirmed');case 21:setAlertState({open:true,message:'Please sign minting',severity:'info'});_context3.next=30;break;case 24:_context3.prev=24;_context3.t1=_context3[\"catch\"](18);setAlertState({open:true,message:'Solana dropped the transaction, please try again',severity:'warning'});console.error(_context3.t1);// setTimeout(() => window.location.reload(), 2000);\nsetIsUserMinting(false);throw _context3.t1;case 30:_context3.next=32;return onMint();case 32:case\"end\":return _context3.stop();}}},_callee3,null,[[4,10],[18,24]]);}));return function(_x){return _ref3.apply(this,arguments);};}(),broadcastTransaction:false,options:{autoShowModal:false},children:/*#__PURE__*/_jsx(MintButton,{candyMachine:candyMachine,isMinting:isUserMinting,setIsMinting:function setIsMinting(val){return setIsUserMinting(val);},onMint:onMint,isActive:isActive||isPresale&&isWhitelistUser&&isValidBalance})}):/*#__PURE__*/_jsx(MintButton,{candyMachine:candyMachine,isMinting:isUserMinting,setIsMinting:function setIsMinting(val){return setIsUserMinting(val);},onMint:onMint,isActive:isActive||isPresale&&isWhitelistUser&&isValidBalance})})]}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",align:\"center\",display:\"block\",style:{marginTop:7,color:'grey'},children:\"Powered by METAPLEX\"})]})}),/*#__PURE__*/_jsx(Snackbar,{open:alertState.open,autoHideDuration:alertState.hideDuration===undefined?6000:alertState.hideDuration,onClose:function onClose(){return setAlertState(_objectSpread(_objectSpread({},alertState),{},{open:false}));},children:/*#__PURE__*/_jsx(Alert,{onClose:function onClose(){return setAlertState(_objectSpread(_objectSpread({},alertState),{},{open:false}));},severity:alertState.severity,children:alertState.message})})]});};var getCountdownDate=function getCountdownDate(candyMachine){var _candyMachine$state$e;if(candyMachine.state.isActive&&(_candyMachine$state$e=candyMachine.state.endSettings)!==null&&_candyMachine$state$e!==void 0&&_candyMachine$state$e.endSettingType.date){return toDate(candyMachine.state.endSettings.number);}return toDate(candyMachine.state.goLiveDate?candyMachine.state.goLiveDate:candyMachine.state.isPresale?new anchor.BN(new Date().getTime()/1000):undefined);};export default Home;","map":{"version":3,"sources":["/workspace/0x2Hacks.github.io/candy-machine-ui/src/Home.tsx"],"names":["useCallback","useEffect","useMemo","useState","anchor","styled","Container","Snackbar","Paper","Alert","Grid","Typography","Connection","PublicKey","useWallet","WalletDialogButton","awaitTransactionSignatureConfirmation","CANDY_MACHINE_PROGRAM","createAccountsForMint","getCandyMachineState","getCollectionPDA","mintOneToken","formatNumber","getAtaForMint","toDate","MintCountdown","MintButton","GatewayProvider","sendTransaction","ConnectButton","MintContainer","div","Home","props","isUserMinting","setIsUserMinting","candyMachine","setCandyMachine","open","message","severity","undefined","alertState","setAlertState","isActive","setIsActive","endDate","setEndDate","itemsRemaining","setItemsRemaining","isWhitelistUser","setIsWhitelistUser","isPresale","setIsPresale","isValidBalance","setIsValidBalance","discountPrice","setDiscountPrice","needTxnSplit","setNeedTxnSplit","setupTxn","setSetupTxn","rpcUrl","rpcHost","wallet","cluster","network","anchorWallet","publicKey","signAllTransactions","signTransaction","refreshCandyMachineState","commitment","connection","candyMachineId","cndy","active","state","goLiveDate","toNumber","Date","getTime","presale","isWLUser","userPrice","price","whitelistMintSettings","isWhitelistOnly","mint","web3","token","getTokenAccountBalance","balance","parseInt","value","amount","console","log","tokenMint","valid","BN","gte","getBalance","endSettings","endSettingType","date","number","limit","Math","min","itemsAvailable","itemsRedeemed","isSoldOut","collectionPDA","getAccountInfo","collectionPDAAccount","txnEstimate","retainAuthority","mode","burnEveryTime","gatekeeper","expireOnUse","Error","hideDuration","startsWith","onMint","beforeTransactions","afterTransactions","document","getElementById","click","connected","program","setupMint","status","err","transaction","txTimeout","mintResult","metadataStatus","mintTxId","provider","metadataKey","remaining","msg","indexOf","code","window","location","reload","toggleMintButton","now","loop","setTimeout","marginTop","position","padding","paddingBottom","backgroundColor","borderRadius","fontWeight","asNumber","getCountdownDate","justifyContent","gatekeeperNetwork","userMustSign","signatures","find","sig","equals","error","autoShowModal","val","color"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react';\nimport * as anchor from '@project-serum/anchor';\n\nimport styled from 'styled-components';\nimport { Container, Snackbar } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Alert from '@material-ui/lab/Alert';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  Commitment,\n  Connection,\n  PublicKey,\n  Transaction,\n} from '@solana/web3.js';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { WalletDialogButton } from '@solana/wallet-adapter-material-ui';\nimport {\n  awaitTransactionSignatureConfirmation,\n  CANDY_MACHINE_PROGRAM,\n  CandyMachineAccount,\n  createAccountsForMint,\n  getCandyMachineState,\n  getCollectionPDA,\n  mintOneToken,\n  SetupState,\n} from './candy-machine';\nimport { AlertState, formatNumber, getAtaForMint, toDate } from './utils';\nimport { MintCountdown } from './MintCountdown';\nimport { MintButton } from './MintButton';\nimport { GatewayProvider } from '@civic/solana-gateway-react';\nimport { sendTransaction } from './connection';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\n\nconst ConnectButton = styled(WalletDialogButton)`\n  width: 100%;\n  height: 60px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nconst MintContainer = styled.div``; // add your owns styles here\n\nexport interface HomeProps {\n  candyMachineId?: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  txTimeout: number;\n  rpcHost: string;\n  network: WalletAdapterNetwork;\n}\n\nconst Home = (props: HomeProps) => {\n  const [isUserMinting, setIsUserMinting] = useState(false);\n  const [candyMachine, setCandyMachine] = useState<CandyMachineAccount>();\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: '',\n    severity: undefined,\n  });\n  const [isActive, setIsActive] = useState(false);\n  const [endDate, setEndDate] = useState<Date>();\n  const [itemsRemaining, setItemsRemaining] = useState<number>();\n  const [isWhitelistUser, setIsWhitelistUser] = useState(false);\n  const [isPresale, setIsPresale] = useState(false);\n  const [isValidBalance, setIsValidBalance] = useState(false);\n  const [discountPrice, setDiscountPrice] = useState<anchor.BN>();\n  const [needTxnSplit, setNeedTxnSplit] = useState(true);\n  const [setupTxn, setSetupTxn] = useState<SetupState>();\n\n  const rpcUrl = props.rpcHost;\n  const wallet = useWallet();\n  const cluster = props.network;\n  const anchorWallet = useMemo(() => {\n    if (\n      !wallet ||\n      !wallet.publicKey ||\n      !wallet.signAllTransactions ||\n      !wallet.signTransaction\n    ) {\n      return;\n    }\n\n    return {\n      publicKey: wallet.publicKey,\n      signAllTransactions: wallet.signAllTransactions,\n      signTransaction: wallet.signTransaction,\n    } as anchor.Wallet;\n  }, [wallet]);\n\n  const refreshCandyMachineState = useCallback(\n    async (commitment: Commitment = 'confirmed') => {\n      if (!anchorWallet) {\n        return;\n      }\n\n      const connection = new Connection(props.rpcHost, commitment);\n\n      if (props.candyMachineId) {\n        try {\n          const cndy = await getCandyMachineState(\n            anchorWallet,\n            props.candyMachineId,\n            connection,\n          );\n          let active =\n            cndy?.state.goLiveDate?.toNumber() < new Date().getTime() / 1000;\n          let presale = false;\n\n          // duplication of state to make sure we have the right values!\n          let isWLUser = false;\n          let userPrice = cndy.state.price;\n\n          // whitelist mint?\n          if (cndy?.state.whitelistMintSettings) {\n            // is it a presale mint?\n            if (\n              cndy.state.whitelistMintSettings.presale &&\n              (!cndy.state.goLiveDate ||\n                cndy.state.goLiveDate.toNumber() > new Date().getTime() / 1000)\n            ) {\n              presale = true;\n            }\n            // is there a discount?\n            if (cndy.state.whitelistMintSettings.discountPrice) {\n              setDiscountPrice(cndy.state.whitelistMintSettings.discountPrice);\n              userPrice = cndy.state.whitelistMintSettings.discountPrice;\n            } else {\n              setDiscountPrice(undefined);\n              // when presale=false and discountPrice=null, mint is restricted\n              // to whitelist users only\n              if (!cndy.state.whitelistMintSettings.presale) {\n                cndy.state.isWhitelistOnly = true;\n              }\n            }\n            // retrieves the whitelist token\n            const mint = new anchor.web3.PublicKey(\n              cndy.state.whitelistMintSettings.mint,\n            );\n            const token = (\n              await getAtaForMint(mint, anchorWallet.publicKey)\n            )[0];\n\n            try {\n              const balance = await connection.getTokenAccountBalance(token);\n              isWLUser = parseInt(balance.value.amount) > 0;\n              // only whitelist the user if the balance > 0\n              setIsWhitelistUser(isWLUser);\n\n              if (cndy.state.isWhitelistOnly) {\n                active = isWLUser && (presale || active);\n              }\n            } catch (e) {\n              setIsWhitelistUser(false);\n              // no whitelist user, no mint\n              if (cndy.state.isWhitelistOnly) {\n                active = false;\n              }\n              console.log(\n                'There was a problem fetching whitelist token balance',\n              );\n              console.log(e);\n            }\n          }\n          userPrice = isWLUser ? userPrice : cndy.state.price;\n\n          if (cndy?.state.tokenMint) {\n            // retrieves the SPL token\n            const mint = new anchor.web3.PublicKey(cndy.state.tokenMint);\n            const token = (\n              await getAtaForMint(mint, anchorWallet.publicKey)\n            )[0];\n            try {\n              const balance = await connection.getTokenAccountBalance(token);\n\n              const valid = new anchor.BN(balance.value.amount).gte(userPrice);\n\n              // only allow user to mint if token balance >  the user if the balance > 0\n              setIsValidBalance(valid);\n              active = active && valid;\n            } catch (e) {\n              setIsValidBalance(false);\n              active = false;\n              // no whitelist user, no mint\n              console.log('There was a problem fetching SPL token balance');\n              console.log(e);\n            }\n          } else {\n            const balance = new anchor.BN(\n              await connection.getBalance(anchorWallet.publicKey),\n            );\n            const valid = balance.gte(userPrice);\n            setIsValidBalance(valid);\n            active = active && valid;\n          }\n\n          // datetime to stop the mint?\n          if (cndy?.state.endSettings?.endSettingType.date) {\n            setEndDate(toDate(cndy.state.endSettings.number));\n            if (\n              cndy.state.endSettings.number.toNumber() <\n              new Date().getTime() / 1000\n            ) {\n              active = false;\n            }\n          }\n          // amount to stop the mint?\n          if (cndy?.state.endSettings?.endSettingType.amount) {\n            let limit = Math.min(\n              cndy.state.endSettings.number.toNumber(),\n              cndy.state.itemsAvailable,\n            );\n            if (cndy.state.itemsRedeemed < limit) {\n              setItemsRemaining(limit - cndy.state.itemsRedeemed);\n            } else {\n              setItemsRemaining(0);\n              cndy.state.isSoldOut = true;\n            }\n          } else {\n            setItemsRemaining(cndy.state.itemsRemaining);\n          }\n\n          if (cndy.state.isSoldOut) {\n            active = false;\n          }\n\n          const [collectionPDA] = await getCollectionPDA(props.candyMachineId);\n          const collectionPDAAccount = await connection.getAccountInfo(\n            collectionPDA,\n          );\n\n          setIsActive((cndy.state.isActive = active));\n          setIsPresale((cndy.state.isPresale = presale));\n          setCandyMachine(cndy);\n\n          const txnEstimate =\n            892 +\n            (!!collectionPDAAccount && cndy.state.retainAuthority ? 182 : 0) +\n            (cndy.state.tokenMint ? 66 : 0) +\n            (cndy.state.whitelistMintSettings ? 34 : 0) +\n            (cndy.state.whitelistMintSettings?.mode?.burnEveryTime ? 34 : 0) +\n            (cndy.state.gatekeeper ? 33 : 0) +\n            (cndy.state.gatekeeper?.expireOnUse ? 66 : 0);\n\n          setNeedTxnSplit(txnEstimate > 1230);\n        } catch (e) {\n          if (e instanceof Error) {\n            if (\n              e.message === `Account does not exist ${props.candyMachineId}`\n            ) {\n              setAlertState({\n                open: true,\n                message: `Couldn't fetch candy machine state from candy machine with address: ${props.candyMachineId}, using rpc: ${props.rpcHost}! You probably typed the REACT_APP_CANDY_MACHINE_ID value in wrong in your .env file, or you are using the wrong RPC!`,\n                severity: 'error',\n                hideDuration: null,\n              });\n            } else if (\n              e.message.startsWith('failed to get info about account')\n            ) {\n              setAlertState({\n                open: true,\n                message: `Couldn't fetch candy machine state with rpc: ${props.rpcHost}! This probably means you have an issue with the REACT_APP_SOLANA_RPC_HOST value in your .env file, or you are not using a custom RPC!`,\n                severity: 'error',\n                hideDuration: null,\n              });\n            }\n          } else {\n            setAlertState({\n              open: true,\n              message: `${e}`,\n              severity: 'error',\n              hideDuration: null,\n            });\n          }\n          console.log(e);\n        }\n      } else {\n        setAlertState({\n          open: true,\n          message: `Your REACT_APP_CANDY_MACHINE_ID value in the .env file doesn't look right! Make sure you enter it in as plain base-58 address!`,\n          severity: 'error',\n          hideDuration: null,\n        });\n      }\n    },\n    [anchorWallet, props.candyMachineId, props.rpcHost],\n  );\n\n  const onMint = async (\n    beforeTransactions: Transaction[] = [],\n    afterTransactions: Transaction[] = [],\n  ) => {\n    try {\n      setIsUserMinting(true);\n      document.getElementById('#identity')?.click();\n      if (wallet.connected && candyMachine?.program && wallet.publicKey) {\n        let setupMint: SetupState | undefined;\n        if (needTxnSplit && setupTxn === undefined) {\n          setAlertState({\n            open: true,\n            message: 'Please sign account setup transaction',\n            severity: 'info',\n          });\n          setupMint = await createAccountsForMint(\n            candyMachine,\n            wallet.publicKey,\n          );\n          let status: any = { err: true };\n          if (setupMint.transaction) {\n            status = await awaitTransactionSignatureConfirmation(\n              setupMint.transaction,\n              props.txTimeout,\n              props.connection,\n              true,\n            );\n          }\n          if (status && !status.err) {\n            setSetupTxn(setupMint);\n            setAlertState({\n              open: true,\n              message:\n                'Setup transaction succeeded! Please sign minting transaction',\n              severity: 'info',\n            });\n          } else {\n            setAlertState({\n              open: true,\n              message: 'Mint failed! Please try again!',\n              severity: 'error',\n            });\n            setIsUserMinting(false);\n            return;\n          }\n        } else {\n          setAlertState({\n            open: true,\n            message: 'Please sign minting transaction',\n            severity: 'info',\n          });\n        }\n\n        let mintResult = await mintOneToken(\n          candyMachine,\n          wallet.publicKey,\n          beforeTransactions,\n          afterTransactions,\n          setupMint ?? setupTxn,\n        );\n\n        let status: any = { err: true };\n        let metadataStatus = null;\n        if (mintResult) {\n          status = await awaitTransactionSignatureConfirmation(\n            mintResult.mintTxId,\n            props.txTimeout,\n            props.connection,\n            true,\n          );\n\n          metadataStatus =\n            await candyMachine.program.provider.connection.getAccountInfo(\n              mintResult.metadataKey,\n              'processed',\n            );\n          console.log('Metadata status: ', !!metadataStatus);\n        }\n\n        if (status && !status.err && metadataStatus) {\n          // manual update since the refresh might not detect\n          // the change immediately\n          let remaining = itemsRemaining! - 1;\n          setItemsRemaining(remaining);\n          setIsActive((candyMachine.state.isActive = remaining > 0));\n          candyMachine.state.isSoldOut = remaining === 0;\n          setSetupTxn(undefined);\n          setAlertState({\n            open: true,\n            message: 'Congratulations! Mint succeeded!',\n            severity: 'success',\n            hideDuration: 7000,\n          });\n          refreshCandyMachineState('processed');\n        } else if (status && !status.err) {\n          setAlertState({\n            open: true,\n            message:\n              'Mint likely failed! Anti-bot SOL 0.01 fee potentially charged! Check the explorer to confirm the mint failed and if so, make sure you are eligible to mint before trying again.',\n            severity: 'error',\n            hideDuration: 8000,\n          });\n          refreshCandyMachineState();\n        } else {\n          setAlertState({\n            open: true,\n            message: 'Mint failed! Please try again!',\n            severity: 'error',\n          });\n          refreshCandyMachineState();\n        }\n      }\n    } catch (error: any) {\n      let message = error.msg || 'Minting failed! Please try again!';\n      if (!error.msg) {\n        if (!error.message) {\n          message = 'Transaction timeout! Please try again.';\n        } else if (error.message.indexOf('0x137')) {\n          console.log(error);\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf('0x135')) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          console.log(error);\n          message = `SOLD OUT!`;\n          window.location.reload();\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: 'error',\n      });\n      // updates the candy machine state to reflect the latest\n      // information on chain\n      refreshCandyMachineState();\n    } finally {\n      setIsUserMinting(false);\n    }\n  };\n\n  const toggleMintButton = () => {\n    let active = !isActive || isPresale;\n\n    if (active) {\n      if (candyMachine!.state.isWhitelistOnly && !isWhitelistUser) {\n        active = false;\n      }\n      if (endDate && Date.now() >= endDate.getTime()) {\n        active = false;\n      }\n    }\n\n    if (\n      isPresale &&\n      candyMachine!.state.goLiveDate &&\n      candyMachine!.state.goLiveDate.toNumber() <= new Date().getTime() / 1000\n    ) {\n      setIsPresale((candyMachine!.state.isPresale = false));\n    }\n\n    setIsActive((candyMachine!.state.isActive = active));\n  };\n\n  useEffect(() => {\n    refreshCandyMachineState();\n  }, [\n    anchorWallet,\n    props.candyMachineId,\n    props.connection,\n    refreshCandyMachineState,\n  ]);\n\n  useEffect(() => {\n    (function loop() {\n      setTimeout(() => {\n        refreshCandyMachineState();\n        loop();\n      }, 20000);\n    })();\n  }, [refreshCandyMachineState]);\n\n  return (\n    <Container style={{ marginTop: 100 }}>\n      <Container maxWidth=\"xs\" style={{ position: 'relative' }}>\n        <Paper\n          style={{\n            padding: 24,\n            paddingBottom: 10,\n            backgroundColor: '#151A1F',\n            borderRadius: 6,\n          }}\n        >\n          {!wallet.connected ? (\n            <ConnectButton>Connect Wallet</ConnectButton>\n          ) : (\n            <>\n              {candyMachine && (\n                <Grid\n                  container\n                  direction=\"row\"\n                  justifyContent=\"center\"\n                  wrap=\"nowrap\"\n                >\n                  <Grid item xs={3}>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      Remaining\n                    </Typography>\n                    <Typography\n                      variant=\"h6\"\n                      color=\"textPrimary\"\n                      style={{\n                        fontWeight: 'bold',\n                      }}\n                    >\n                      {`${itemsRemaining}`}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      {isWhitelistUser && discountPrice\n                        ? 'Discount Price'\n                        : 'Price'}\n                    </Typography>\n                    <Typography\n                      variant=\"h6\"\n                      color=\"textPrimary\"\n                      style={{ fontWeight: 'bold' }}\n                    >\n                      {isWhitelistUser && discountPrice\n                        ? `◎ ${formatNumber.asNumber(discountPrice)}`\n                        : `◎ ${formatNumber.asNumber(\n                            candyMachine.state.price,\n                          )}`}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={5}>\n                    {isActive && endDate && Date.now() < endDate.getTime() ? (\n                      <>\n                        <MintCountdown\n                          key=\"endSettings\"\n                          date={getCountdownDate(candyMachine)}\n                          style={{ justifyContent: 'flex-end' }}\n                          status=\"COMPLETED\"\n                          onComplete={toggleMintButton}\n                        />\n                        <Typography\n                          variant=\"caption\"\n                          align=\"center\"\n                          display=\"block\"\n                          style={{ fontWeight: 'bold' }}\n                        >\n                          TO END OF MINT\n                        </Typography>\n                      </>\n                    ) : (\n                      <>\n                        <MintCountdown\n                          key=\"goLive\"\n                          date={getCountdownDate(candyMachine)}\n                          style={{ justifyContent: 'flex-end' }}\n                          status={\n                            candyMachine?.state?.isSoldOut ||\n                            (endDate && Date.now() > endDate.getTime())\n                              ? 'COMPLETED'\n                              : isPresale\n                              ? 'PRESALE'\n                              : 'LIVE'\n                          }\n                          onComplete={toggleMintButton}\n                        />\n                        {isPresale &&\n                          candyMachine.state.goLiveDate &&\n                          candyMachine.state.goLiveDate.toNumber() >\n                            new Date().getTime() / 1000 && (\n                            <Typography\n                              variant=\"caption\"\n                              align=\"center\"\n                              display=\"block\"\n                              style={{ fontWeight: 'bold' }}\n                            >\n                              UNTIL PUBLIC MINT\n                            </Typography>\n                          )}\n                      </>\n                    )}\n                  </Grid>\n                </Grid>\n              )}\n              <MintContainer>\n                {candyMachine?.state.isActive &&\n                candyMachine?.state.gatekeeper &&\n                wallet.publicKey &&\n                wallet.signTransaction ? (\n                  <GatewayProvider\n                    wallet={{\n                      publicKey:\n                        wallet.publicKey ||\n                        new PublicKey(CANDY_MACHINE_PROGRAM),\n                      //@ts-ignore\n                      signTransaction: wallet.signTransaction,\n                    }}\n                    gatekeeperNetwork={\n                      candyMachine?.state?.gatekeeper?.gatekeeperNetwork\n                    }\n                    clusterUrl={rpcUrl}\n                    cluster={cluster}\n                    handleTransaction={async (transaction: Transaction) => {\n                      setIsUserMinting(true);\n                      const userMustSign = transaction.signatures.find(sig =>\n                        sig.publicKey.equals(wallet.publicKey!),\n                      );\n                      if (userMustSign) {\n                        setAlertState({\n                          open: true,\n                          message: 'Please sign one-time Civic Pass issuance',\n                          severity: 'info',\n                        });\n                        try {\n                          transaction = await wallet.signTransaction!(\n                            transaction,\n                          );\n                        } catch (e) {\n                          setAlertState({\n                            open: true,\n                            message: 'User cancelled signing',\n                            severity: 'error',\n                          });\n                          // setTimeout(() => window.location.reload(), 2000);\n                          setIsUserMinting(false);\n                          throw e;\n                        }\n                      } else {\n                        setAlertState({\n                          open: true,\n                          message: 'Refreshing Civic Pass',\n                          severity: 'info',\n                        });\n                      }\n                      try {\n                        await sendTransaction(\n                          props.connection,\n                          wallet,\n                          transaction,\n                          [],\n                          true,\n                          'confirmed',\n                        );\n                        setAlertState({\n                          open: true,\n                          message: 'Please sign minting',\n                          severity: 'info',\n                        });\n                      } catch (e) {\n                        setAlertState({\n                          open: true,\n                          message:\n                            'Solana dropped the transaction, please try again',\n                          severity: 'warning',\n                        });\n                        console.error(e);\n                        // setTimeout(() => window.location.reload(), 2000);\n                        setIsUserMinting(false);\n                        throw e;\n                      }\n                      await onMint();\n                    }}\n                    broadcastTransaction={false}\n                    options={{ autoShowModal: false }}\n                  >\n                    <MintButton\n                      candyMachine={candyMachine}\n                      isMinting={isUserMinting}\n                      setIsMinting={val => setIsUserMinting(val)}\n                      onMint={onMint}\n                      isActive={\n                        isActive ||\n                        (isPresale && isWhitelistUser && isValidBalance)\n                      }\n                    />\n                  </GatewayProvider>\n                ) : (\n                  <MintButton\n                    candyMachine={candyMachine}\n                    isMinting={isUserMinting}\n                    setIsMinting={val => setIsUserMinting(val)}\n                    onMint={onMint}\n                    isActive={\n                      isActive ||\n                      (isPresale && isWhitelistUser && isValidBalance)\n                    }\n                  />\n                )}\n              </MintContainer>\n            </>\n          )}\n          <Typography\n            variant=\"caption\"\n            align=\"center\"\n            display=\"block\"\n            style={{ marginTop: 7, color: 'grey' }}\n          >\n            Powered by METAPLEX\n          </Typography>\n        </Paper>\n      </Container>\n\n      <Snackbar\n        open={alertState.open}\n        autoHideDuration={\n          alertState.hideDuration === undefined ? 6000 : alertState.hideDuration\n        }\n        onClose={() => setAlertState({ ...alertState, open: false })}\n      >\n        <Alert\n          onClose={() => setAlertState({ ...alertState, open: false })}\n          severity={alertState.severity}\n        >\n          {alertState.message}\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n};\n\nconst getCountdownDate = (\n  candyMachine: CandyMachineAccount,\n): Date | undefined => {\n  if (\n    candyMachine.state.isActive &&\n    candyMachine.state.endSettings?.endSettingType.date\n  ) {\n    return toDate(candyMachine.state.endSettings.number);\n  }\n\n  return toDate(\n    candyMachine.state.goLiveDate\n      ? candyMachine.state.goLiveDate\n      : candyMachine.state.isPresale\n      ? new anchor.BN(new Date().getTime() / 1000)\n      : undefined,\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}