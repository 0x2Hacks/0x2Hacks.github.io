{"ast":null,"code":"import'./App.css';import{useMemo}from'react';import*as anchor from'@project-serum/anchor';import Home from'./Home';import{DEFAULT_TIMEOUT}from'./connection';import{clusterApiUrl}from'@solana/web3.js';import{getPhantomWallet,getSlopeWallet,getSolflareWallet,getSolletWallet,getSolletExtensionWallet}from'@solana/wallet-adapter-wallets';import{ConnectionProvider,WalletProvider}from'@solana/wallet-adapter-react';import{WalletDialogProvider}from'@solana/wallet-adapter-material-ui';import{ThemeProvider,createTheme}from'@material-ui/core';import{jsx as _jsx}from\"react/jsx-runtime\";var theme=createTheme({palette:{type:'dark'}});var getCandyMachineId=function getCandyMachineId(){try{var _candyMachineId=new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID);return _candyMachineId;}catch(e){console.log('Failed to construct CandyMachineId',e);return undefined;}};var candyMachineId=getCandyMachineId();var network=process.env.REACT_APP_SOLANA_NETWORK;var rpcHost=process.env.REACT_APP_SOLANA_RPC_HOST;var connection=new anchor.web3.Connection(rpcHost?rpcHost:anchor.web3.clusterApiUrl('devnet'));var App=function App(){var endpoint=useMemo(function(){return clusterApiUrl(network);},[]);var wallets=useMemo(function(){return[getPhantomWallet(),getSolflareWallet(),getSlopeWallet(),getSolletWallet({network:network}),getSolletExtensionWallet({network:network})];},[]);return/*#__PURE__*/_jsx(ThemeProvider,{theme:theme,children:/*#__PURE__*/_jsx(ConnectionProvider,{endpoint:endpoint,children:/*#__PURE__*/_jsx(WalletProvider,{wallets:wallets,autoConnect:true,children:/*#__PURE__*/_jsx(WalletDialogProvider,{children:/*#__PURE__*/_jsx(Home,{candyMachineId:candyMachineId,connection:connection,txTimeout:DEFAULT_TIMEOUT,rpcHost:rpcHost,network:network})})})})});};export default App;","map":{"version":3,"sources":["/workspace/0x2Hacks.github.io/candy-machine-ui/src/App.tsx"],"names":["useMemo","anchor","Home","DEFAULT_TIMEOUT","clusterApiUrl","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletWallet","getSolletExtensionWallet","ConnectionProvider","WalletProvider","WalletDialogProvider","ThemeProvider","createTheme","theme","palette","type","getCandyMachineId","candyMachineId","web3","PublicKey","process","env","REACT_APP_CANDY_MACHINE_ID","e","console","log","undefined","network","REACT_APP_SOLANA_NETWORK","rpcHost","REACT_APP_SOLANA_RPC_HOST","connection","Connection","App","endpoint","wallets"],"mappings":"AAAA,MAAO,WAAP,CACA,OAASA,OAAT,KAAwB,OAAxB,CACA,MAAO,GAAKC,CAAAA,MAAZ,KAAwB,uBAAxB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,OAASC,eAAT,KAAgC,cAAhC,CACA,OAASC,aAAT,KAA8B,iBAA9B,CAEA,OACEC,gBADF,CAEEC,cAFF,CAGEC,iBAHF,CAIEC,eAJF,CAKEC,wBALF,KAMO,gCANP,CAQA,OACEC,kBADF,CAEEC,cAFF,KAGO,8BAHP,CAIA,OAASC,oBAAT,KAAqC,oCAArC,CAEA,OAASC,aAAT,CAAwBC,WAAxB,KAA2C,mBAA3C,C,2CAEA,GAAMC,CAAAA,KAAK,CAAGD,WAAW,CAAC,CACxBE,OAAO,CAAE,CACPC,IAAI,CAAE,MADC,CADe,CAAD,CAAzB,CAMA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAyC,CACjE,GAAI,CACF,GAAMC,CAAAA,eAAc,CAAG,GAAIlB,CAAAA,MAAM,CAACmB,IAAP,CAAYC,SAAhB,CACrBC,OAAO,CAACC,GAAR,CAAYC,0BADS,CAAvB,CAIA,MAAOL,CAAAA,eAAP,CACD,CAAC,MAAOM,CAAP,CAAU,CACVC,OAAO,CAACC,GAAR,CAAY,oCAAZ,CAAkDF,CAAlD,EACA,MAAOG,CAAAA,SAAP,CACD,CACF,CAXD,CAaA,GAAMT,CAAAA,cAAc,CAAGD,iBAAiB,EAAxC,CACA,GAAMW,CAAAA,OAAO,CAAGP,OAAO,CAACC,GAAR,CAAYO,wBAA5B,CACA,GAAMC,CAAAA,OAAO,CAAGT,OAAO,CAACC,GAAR,CAAYS,yBAA5B,CACA,GAAMC,CAAAA,UAAU,CAAG,GAAIhC,CAAAA,MAAM,CAACmB,IAAP,CAAYc,UAAhB,CACjBH,OAAO,CAAGA,OAAH,CAAa9B,MAAM,CAACmB,IAAP,CAAYhB,aAAZ,CAA0B,QAA1B,CADH,CAAnB,CAIA,GAAM+B,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAChB,GAAMC,CAAAA,QAAQ,CAAGpC,OAAO,CAAC,iBAAMI,CAAAA,aAAa,CAACyB,OAAD,CAAnB,EAAD,CAA+B,EAA/B,CAAxB,CAEA,GAAMQ,CAAAA,OAAO,CAAGrC,OAAO,CACrB,iBAAM,CACJK,gBAAgB,EADZ,CAEJE,iBAAiB,EAFb,CAGJD,cAAc,EAHV,CAIJE,eAAe,CAAC,CAAEqB,OAAO,CAAPA,OAAF,CAAD,CAJX,CAKJpB,wBAAwB,CAAC,CAAEoB,OAAO,CAAPA,OAAF,CAAD,CALpB,CAAN,EADqB,CAQrB,EARqB,CAAvB,CAWA,mBACE,KAAC,aAAD,EAAe,KAAK,CAAEd,KAAtB,uBACE,KAAC,kBAAD,EAAoB,QAAQ,CAAEqB,QAA9B,uBACE,KAAC,cAAD,EAAgB,OAAO,CAAEC,OAAzB,CAAkC,WAAW,KAA7C,uBACE,KAAC,oBAAD,wBACE,KAAC,IAAD,EACE,cAAc,CAAElB,cADlB,CAEE,UAAU,CAAEc,UAFd,CAGE,SAAS,CAAE9B,eAHb,CAIE,OAAO,CAAE4B,OAJX,CAKE,OAAO,CAAEF,OALX,EADF,EADF,EADF,EADF,EADF,CAiBD,CA/BD,CAiCA,cAAeM,CAAAA,GAAf","sourcesContent":["import './App.css';\nimport { useMemo } from 'react';\nimport * as anchor from '@project-serum/anchor';\nimport Home from './Home';\nimport { DEFAULT_TIMEOUT } from './connection';\nimport { clusterApiUrl } from '@solana/web3.js';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport {\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletWallet,\n  getSolletExtensionWallet,\n} from '@solana/wallet-adapter-wallets';\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from '@solana/wallet-adapter-react';\nimport { WalletDialogProvider } from '@solana/wallet-adapter-material-ui';\n\nimport { ThemeProvider, createTheme } from '@material-ui/core';\n\nconst theme = createTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\nconst getCandyMachineId = (): anchor.web3.PublicKey | undefined => {\n  try {\n    const candyMachineId = new anchor.web3.PublicKey(\n      process.env.REACT_APP_CANDY_MACHINE_ID!,\n    );\n\n    return candyMachineId;\n  } catch (e) {\n    console.log('Failed to construct CandyMachineId', e);\n    return undefined;\n  }\n};\n\nconst candyMachineId = getCandyMachineId();\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection(\n  rpcHost ? rpcHost : anchor.web3.clusterApiUrl('devnet'),\n);\n\nconst App = () => {\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n\n  const wallets = useMemo(\n    () => [\n      getPhantomWallet(),\n      getSolflareWallet(),\n      getSlopeWallet(),\n      getSolletWallet({ network }),\n      getSolletExtensionWallet({ network }),\n    ],\n    [],\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ConnectionProvider endpoint={endpoint}>\n        <WalletProvider wallets={wallets} autoConnect>\n          <WalletDialogProvider>\n            <Home\n              candyMachineId={candyMachineId}\n              connection={connection}\n              txTimeout={DEFAULT_TIMEOUT}\n              rpcHost={rpcHost}\n              network={network}\n            />\n          </WalletDialogProvider>\n        </WalletProvider>\n      </ConnectionProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}