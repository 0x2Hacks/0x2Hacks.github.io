{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* eslint-disable no-console */\n\n/* eslint-disable class-methods-use-this */\n\nvar provider_logger_1 = require(\"./provider.logger\");\n\nvar consoleWithOptionalObject = function consoleWithOptionalObject(method, message, object) {\n  if (object) {\n    method(message, object);\n  } else {\n    method(message);\n  }\n};\n\nvar LogLocal = /*#__PURE__*/function (_provider_logger_1$Lo) {\n  _inherits(LogLocal, _provider_logger_1$Lo);\n\n  var _super = _createSuper(LogLocal);\n\n  function LogLocal() {\n    var logLevel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : provider_logger_1.DEFAULT_LOG_LEVEL;\n\n    _classCallCheck(this, LogLocal);\n\n    return _super.call(this, console, logLevel);\n  }\n\n  _createClass(LogLocal, [{\n    key: \"debug\",\n    value: function debug(message, object) {\n      consoleWithOptionalObject(this.logger.debug, message, object);\n    }\n  }, {\n    key: \"info\",\n    value: function info(message, object) {\n      consoleWithOptionalObject(this.logger.info, message, object);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(message, object) {\n      consoleWithOptionalObject(this.logger.warn, message, object);\n    }\n  }, {\n    key: \"error\",\n    value: function error(message, exception) {\n      consoleWithOptionalObject(this.logger.error, message, exception);\n    }\n  }]);\n\n  return LogLocal;\n}(provider_logger_1.LoggingProvider);\n\nexports.default = LogLocal;","map":{"version":3,"sources":["/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@civic/common-gateway-react/dist/esm/logger/local.logger.js"],"names":["Object","defineProperty","exports","value","provider_logger_1","require","consoleWithOptionalObject","method","message","object","LogLocal","logLevel","DEFAULT_LOG_LEVEL","console","logger","debug","info","warn","exception","error","LoggingProvider","default"],"mappings":"AAAA;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;;AACA;;AACA,IAAMC,iBAAiB,GAAGC,OAAO,CAAC,mBAAD,CAAjC;;AACA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,MAAD,EAASC,OAAT,EAAkBC,MAAlB,EAA6B;AAC3D,MAAIA,MAAJ,EAAY;AACRF,IAAAA,MAAM,CAACC,OAAD,EAAUC,MAAV,CAAN;AACH,GAFD,MAGK;AACDF,IAAAA,MAAM,CAACC,OAAD,CAAN;AACH;AACJ,CAPD;;IAQME,Q;;;;;AACF,sBAA4D;AAAA,QAAhDC,QAAgD,uEAArCP,iBAAiB,CAACQ,iBAAmB;;AAAA;;AAAA,6BAClDC,OADkD,EACzCF,QADyC;AAE3D;;;;WACD,eAAMH,OAAN,EAAeC,MAAf,EAAuB;AACnBH,MAAAA,yBAAyB,CAAC,KAAKQ,MAAL,CAAYC,KAAb,EAAoBP,OAApB,EAA6BC,MAA7B,CAAzB;AACH;;;WACD,cAAKD,OAAL,EAAcC,MAAd,EAAsB;AAClBH,MAAAA,yBAAyB,CAAC,KAAKQ,MAAL,CAAYE,IAAb,EAAmBR,OAAnB,EAA4BC,MAA5B,CAAzB;AACH;;;WACD,cAAKD,OAAL,EAAcC,MAAd,EAAsB;AAClBH,MAAAA,yBAAyB,CAAC,KAAKQ,MAAL,CAAYG,IAAb,EAAmBT,OAAnB,EAA4BC,MAA5B,CAAzB;AACH;;;WACD,eAAMD,OAAN,EAAeU,SAAf,EAA0B;AACtBZ,MAAAA,yBAAyB,CAAC,KAAKQ,MAAL,CAAYK,KAAb,EAAoBX,OAApB,EAA6BU,SAA7B,CAAzB;AACH;;;;EAfkBd,iBAAiB,CAACgB,e;;AAiBzClB,OAAO,CAACmB,OAAR,GAAkBX,QAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* eslint-disable no-console */\n/* eslint-disable class-methods-use-this */\nconst provider_logger_1 = require(\"./provider.logger\");\nconst consoleWithOptionalObject = (method, message, object) => {\n    if (object) {\n        method(message, object);\n    }\n    else {\n        method(message);\n    }\n};\nclass LogLocal extends provider_logger_1.LoggingProvider {\n    constructor(logLevel = provider_logger_1.DEFAULT_LOG_LEVEL) {\n        super(console, logLevel);\n    }\n    debug(message, object) {\n        consoleWithOptionalObject(this.logger.debug, message, object);\n    }\n    info(message, object) {\n        consoleWithOptionalObject(this.logger.info, message, object);\n    }\n    warn(message, object) {\n        consoleWithOptionalObject(this.logger.warn, message, object);\n    }\n    error(message, exception) {\n        consoleWithOptionalObject(this.logger.error, message, exception);\n    }\n}\nexports.default = LogLocal;\n"]},"metadata":{},"sourceType":"script"}