{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeConfig = exports.getGatekeeperEndpoint = exports.GATEKEEPER_ENDPOINTS = void 0;\nvar solanaVersionedEndpoint = 'v1/token/solana';\nexports.GATEKEEPER_ENDPOINTS = {\n  local: \"http://localhost:3001/local/\".concat(solanaVersionedEndpoint),\n  test: \"https://dev-gatekeeper-api.civic.com/\".concat(solanaVersionedEndpoint),\n  dev: \"https://dev-gatekeeper-api.civic.com/\".concat(solanaVersionedEndpoint),\n  preprod: \"https://preprod-gatekeeper-api.civic.com/\".concat(solanaVersionedEndpoint),\n  prod: \"https://gatekeeper-api.civic.com/\".concat(solanaVersionedEndpoint)\n};\n\nvar getGatekeeperEndpoint = function getGatekeeperEndpoint(stage) {\n  var endpoint = exports.GATEKEEPER_ENDPOINTS[stage];\n\n  if (!endpoint) {\n    throw new Error(\"Invalid stage \".concat(stage));\n  }\n\n  return endpoint;\n};\n\nexports.getGatekeeperEndpoint = getGatekeeperEndpoint;\n\nvar makeConfig = function makeConfig(clusterUrl, cluster) {\n  return {\n    cluster: cluster,\n    commitment: 'confirmed',\n    // this map instructs the POWO library to use clusterUrl\n    // to connect to the solana network. This avoids rate limiting issues with using the default\n    // public urls\n    supportedClusterUrls: _defineProperty({}, cluster, clusterUrl),\n    recentBlockCheck: false,\n    broadcastCheck: false\n  };\n};\n\nexports.makeConfig = makeConfig;","map":{"version":3,"sources":["/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@civic/solana-gateway-react/dist/esm/config.js"],"names":["Object","defineProperty","exports","value","makeConfig","getGatekeeperEndpoint","GATEKEEPER_ENDPOINTS","solanaVersionedEndpoint","local","test","dev","preprod","prod","stage","endpoint","Error","clusterUrl","cluster","commitment","supportedClusterUrls","recentBlockCheck","broadcastCheck"],"mappings":"AAAA;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,UAAR,GAAqBF,OAAO,CAACG,qBAAR,GAAgCH,OAAO,CAACI,oBAAR,GAA+B,KAAK,CAAzF;AACA,IAAMC,uBAAuB,GAAG,iBAAhC;AACAL,OAAO,CAACI,oBAAR,GAA+B;AAC3BE,EAAAA,KAAK,wCAAiCD,uBAAjC,CADsB;AAE3BE,EAAAA,IAAI,iDAA0CF,uBAA1C,CAFuB;AAG3BG,EAAAA,GAAG,iDAA0CH,uBAA1C,CAHwB;AAI3BI,EAAAA,OAAO,qDAA8CJ,uBAA9C,CAJoB;AAK3BK,EAAAA,IAAI,6CAAsCL,uBAAtC;AALuB,CAA/B;;AAOA,IAAMF,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACQ,KAAD,EAAW;AACrC,MAAMC,QAAQ,GAAGZ,OAAO,CAACI,oBAAR,CAA6BO,KAA7B,CAAjB;;AACA,MAAI,CAACC,QAAL,EAAe;AACX,UAAM,IAAIC,KAAJ,yBAA2BF,KAA3B,EAAN;AACH;;AACD,SAAOC,QAAP;AACH,CAND;;AAOAZ,OAAO,CAACG,qBAAR,GAAgCA,qBAAhC;;AACA,IAAMD,UAAU,GAAG,SAAbA,UAAa,CAACY,UAAD,EAAaC,OAAb,EAAyB;AACxC,SAAO;AACHA,IAAAA,OAAO,EAAPA,OADG;AAEHC,IAAAA,UAAU,EAAE,WAFT;AAGH;AACA;AACA;AACAC,IAAAA,oBAAoB,sBACfF,OADe,EACLD,UADK,CANjB;AASHI,IAAAA,gBAAgB,EAAE,KATf;AAUHC,IAAAA,cAAc,EAAE;AAVb,GAAP;AAYH,CAbD;;AAcAnB,OAAO,CAACE,UAAR,GAAqBA,UAArB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeConfig = exports.getGatekeeperEndpoint = exports.GATEKEEPER_ENDPOINTS = void 0;\nconst solanaVersionedEndpoint = 'v1/token/solana';\nexports.GATEKEEPER_ENDPOINTS = {\n    local: `http://localhost:3001/local/${solanaVersionedEndpoint}`,\n    test: `https://dev-gatekeeper-api.civic.com/${solanaVersionedEndpoint}`,\n    dev: `https://dev-gatekeeper-api.civic.com/${solanaVersionedEndpoint}`,\n    preprod: `https://preprod-gatekeeper-api.civic.com/${solanaVersionedEndpoint}`,\n    prod: `https://gatekeeper-api.civic.com/${solanaVersionedEndpoint}`,\n};\nconst getGatekeeperEndpoint = (stage) => {\n    const endpoint = exports.GATEKEEPER_ENDPOINTS[stage];\n    if (!endpoint) {\n        throw new Error(`Invalid stage ${stage}`);\n    }\n    return endpoint;\n};\nexports.getGatekeeperEndpoint = getGatekeeperEndpoint;\nconst makeConfig = (clusterUrl, cluster) => {\n    return {\n        cluster,\n        commitment: 'confirmed',\n        // this map instructs the POWO library to use clusterUrl\n        // to connect to the solana network. This avoids rate limiting issues with using the default\n        // public urls\n        supportedClusterUrls: {\n            [cluster]: clusterUrl,\n        },\n        recentBlockCheck: false,\n        broadcastCheck: false,\n    };\n};\nexports.makeConfig = makeConfig;\n"]},"metadata":{},"sourceType":"script"}