{"ast":null,"code":"import _asyncToGenerator from \"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _get from \"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _createForOfIteratorHelper from \"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _regeneratorRuntime from \"/workspace/0x2Hacks.github.io/candy-machine-ui/node_modules/@babel/runtime/regenerator/index.js\";\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport BN from 'bn.js';\nimport { sendAndConfirmTransaction as sendAndConfirmTransaction$1, PublicKey, Keypair, Transaction, SystemProgram, SYSVAR_RENT_PUBKEY, TransactionInstruction } from '@solana/web3.js';\nvar buffer = {};\nvar base64Js = {};\nbase64Js.byteLength = byteLength;\nbase64Js.toByteArray = toByteArray;\nbase64Js.fromByteArray = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  var i;\n\n  for (i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}\n\nvar ieee754 = {};\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\n\nieee754.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nieee754.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n\n(function (exports) {\n  var base64 = base64Js;\n  var ieee754$1 = ieee754;\n  var customInspectSymbol = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' // eslint-disable-line dot-notation\n  ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n  : null;\n  exports.Buffer = Buffer;\n  exports.SlowBuffer = SlowBuffer;\n  exports.INSPECT_MAX_BYTES = 50;\n  var K_MAX_LENGTH = 0x7fffffff;\n  exports.kMaxLength = K_MAX_LENGTH;\n  /**\n   * If `Buffer.TYPED_ARRAY_SUPPORT`:\n   *   === true    Use Uint8Array implementation (fastest)\n   *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n   *               implementation (most compatible, even IE6)\n   *\n   * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n   * Opera 11.6+, iOS 4.2+.\n   *\n   * We report that the browser does not support typed arrays if the are not subclassable\n   * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n   * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n   * for __proto__ and has a buggy typed array implementation.\n   */\n\n  Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');\n  }\n\n  function typedArraySupport() {\n    // Can typed array instances can be augmented?\n    try {\n      var arr = new Uint8Array(1);\n      var proto = {\n        foo: function foo() {\n          return 42;\n        }\n      };\n      Object.setPrototypeOf(proto, Uint8Array.prototype);\n      Object.setPrototypeOf(arr, proto);\n      return arr.foo() === 42;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  Object.defineProperty(Buffer.prototype, 'parent', {\n    enumerable: true,\n    get: function get() {\n      if (!Buffer.isBuffer(this)) return undefined;\n      return this.buffer;\n    }\n  });\n  Object.defineProperty(Buffer.prototype, 'offset', {\n    enumerable: true,\n    get: function get() {\n      if (!Buffer.isBuffer(this)) return undefined;\n      return this.byteOffset;\n    }\n  });\n\n  function createBuffer(length) {\n    if (length > K_MAX_LENGTH) {\n      throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n    } // Return an augmented `Uint8Array` instance\n\n\n    var buf = new Uint8Array(length);\n    Object.setPrototypeOf(buf, Buffer.prototype);\n    return buf;\n  }\n  /**\n   * The Buffer constructor returns instances of `Uint8Array` that have their\n   * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n   * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n   * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n   * returns a single octet.\n   *\n   * The `Uint8Array` prototype remains unmodified.\n   */\n\n\n  function Buffer(arg, encodingOrOffset, length) {\n    // Common case.\n    if (typeof arg === 'number') {\n      if (typeof encodingOrOffset === 'string') {\n        throw new TypeError('The \"string\" argument must be of type string. Received type number');\n      }\n\n      return allocUnsafe(arg);\n    }\n\n    return from(arg, encodingOrOffset, length);\n  }\n\n  Buffer.poolSize = 8192; // not used by this implementation\n\n  function from(value, encodingOrOffset, length) {\n    if (typeof value === 'string') {\n      return fromString(value, encodingOrOffset);\n    }\n\n    if (ArrayBuffer.isView(value)) {\n      return fromArrayView(value);\n    }\n\n    if (value == null) {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n    }\n\n    if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {\n      return fromArrayBuffer(value, encodingOrOffset, length);\n    }\n\n    if (typeof SharedArrayBuffer !== 'undefined' && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {\n      return fromArrayBuffer(value, encodingOrOffset, length);\n    }\n\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n    }\n\n    var valueOf = value.valueOf && value.valueOf();\n\n    if (valueOf != null && valueOf !== value) {\n      return Buffer.from(valueOf, encodingOrOffset, length);\n    }\n\n    var b = fromObject(value);\n    if (b) return b;\n\n    if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {\n      return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);\n    }\n\n    throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n  }\n  /**\n   * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n   * if value is a number.\n   * Buffer.from(str[, encoding])\n   * Buffer.from(array)\n   * Buffer.from(buffer)\n   * Buffer.from(arrayBuffer[, byteOffset[, length]])\n   **/\n\n\n  Buffer.from = function (value, encodingOrOffset, length) {\n    return from(value, encodingOrOffset, length);\n  }; // Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n  // https://github.com/feross/buffer/pull/148\n\n\n  Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);\n  Object.setPrototypeOf(Buffer, Uint8Array);\n\n  function assertSize(size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('\"size\" argument must be of type number');\n    } else if (size < 0) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n    }\n  }\n\n  function alloc(size, fill, encoding) {\n    assertSize(size);\n\n    if (size <= 0) {\n      return createBuffer(size);\n    }\n\n    if (fill !== undefined) {\n      // Only pay attention to encoding if it's a string. This\n      // prevents accidentally sending in a number that would\n      // be interpreted as a start offset.\n      return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n    }\n\n    return createBuffer(size);\n  }\n  /**\n   * Creates a new filled Buffer instance.\n   * alloc(size[, fill[, encoding]])\n   **/\n\n\n  Buffer.alloc = function (size, fill, encoding) {\n    return alloc(size, fill, encoding);\n  };\n\n  function allocUnsafe(size) {\n    assertSize(size);\n    return createBuffer(size < 0 ? 0 : checked(size) | 0);\n  }\n  /**\n   * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n   * */\n\n\n  Buffer.allocUnsafe = function (size) {\n    return allocUnsafe(size);\n  };\n  /**\n   * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n   */\n\n\n  Buffer.allocUnsafeSlow = function (size) {\n    return allocUnsafe(size);\n  };\n\n  function fromString(string, encoding) {\n    if (typeof encoding !== 'string' || encoding === '') {\n      encoding = 'utf8';\n    }\n\n    if (!Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n\n    var length = byteLength(string, encoding) | 0;\n    var buf = createBuffer(length);\n    var actual = buf.write(string, encoding);\n\n    if (actual !== length) {\n      // Writing a hex string, for example, that contains invalid characters will\n      // cause everything after the first invalid character to be ignored. (e.g.\n      // 'abxxcd' will be treated as 'ab')\n      buf = buf.slice(0, actual);\n    }\n\n    return buf;\n  }\n\n  function fromArrayLike(array) {\n    var length = array.length < 0 ? 0 : checked(array.length) | 0;\n    var buf = createBuffer(length);\n\n    for (var _i = 0; _i < length; _i += 1) {\n      buf[_i] = array[_i] & 255;\n    }\n\n    return buf;\n  }\n\n  function fromArrayView(arrayView) {\n    if (isInstance(arrayView, Uint8Array)) {\n      var copy = new Uint8Array(arrayView);\n      return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);\n    }\n\n    return fromArrayLike(arrayView);\n  }\n\n  function fromArrayBuffer(array, byteOffset, length) {\n    if (byteOffset < 0 || array.byteLength < byteOffset) {\n      throw new RangeError('\"offset\" is outside of buffer bounds');\n    }\n\n    if (array.byteLength < byteOffset + (length || 0)) {\n      throw new RangeError('\"length\" is outside of buffer bounds');\n    }\n\n    var buf;\n\n    if (byteOffset === undefined && length === undefined) {\n      buf = new Uint8Array(array);\n    } else if (length === undefined) {\n      buf = new Uint8Array(array, byteOffset);\n    } else {\n      buf = new Uint8Array(array, byteOffset, length);\n    } // Return an augmented `Uint8Array` instance\n\n\n    Object.setPrototypeOf(buf, Buffer.prototype);\n    return buf;\n  }\n\n  function fromObject(obj) {\n    if (Buffer.isBuffer(obj)) {\n      var _len = checked(obj.length) | 0;\n\n      var buf = createBuffer(_len);\n\n      if (buf.length === 0) {\n        return buf;\n      }\n\n      obj.copy(buf, 0, 0, _len);\n      return buf;\n    }\n\n    if (obj.length !== undefined) {\n      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n        return createBuffer(0);\n      }\n\n      return fromArrayLike(obj);\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data);\n    }\n  }\n\n  function checked(length) {\n    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= K_MAX_LENGTH) {\n      throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n    }\n\n    return length | 0;\n  }\n\n  function SlowBuffer(length) {\n    if (+length != length) {\n      // eslint-disable-line eqeqeq\n      length = 0;\n    }\n\n    return Buffer.alloc(+length);\n  }\n\n  Buffer.isBuffer = function isBuffer(b) {\n    return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false\n  };\n\n  Buffer.compare = function compare(a, b) {\n    if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n    if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n\n    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n      throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n    }\n\n    if (a === b) return 0;\n    var x = a.length;\n    var y = b.length;\n\n    for (var _i2 = 0, _len2 = Math.min(x, y); _i2 < _len2; ++_i2) {\n      if (a[_i2] !== b[_i2]) {\n        x = a[_i2];\n        y = b[_i2];\n        break;\n      }\n    }\n\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n  };\n\n  Buffer.isEncoding = function isEncoding(encoding) {\n    switch (String(encoding).toLowerCase()) {\n      case 'hex':\n      case 'utf8':\n      case 'utf-8':\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n      case 'base64':\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return true;\n\n      default:\n        return false;\n    }\n  };\n\n  Buffer.concat = function concat(list, length) {\n    if (!Array.isArray(list)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    if (list.length === 0) {\n      return Buffer.alloc(0);\n    }\n\n    var i;\n\n    if (length === undefined) {\n      length = 0;\n\n      for (i = 0; i < list.length; ++i) {\n        length += list[i].length;\n      }\n    }\n\n    var buffer = Buffer.allocUnsafe(length);\n    var pos = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      var buf = list[i];\n\n      if (isInstance(buf, Uint8Array)) {\n        if (pos + buf.length > buffer.length) {\n          if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf);\n          buf.copy(buffer, pos);\n        } else {\n          Uint8Array.prototype.set.call(buffer, buf, pos);\n        }\n      } else if (!Buffer.isBuffer(buf)) {\n        throw new TypeError('\"list\" argument must be an Array of Buffers');\n      } else {\n        buf.copy(buffer, pos);\n      }\n\n      pos += buf.length;\n    }\n\n    return buffer;\n  };\n\n  function byteLength(string, encoding) {\n    if (Buffer.isBuffer(string)) {\n      return string.length;\n    }\n\n    if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n      return string.byteLength;\n    }\n\n    if (typeof string !== 'string') {\n      throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + typeof string);\n    }\n\n    var len = string.length;\n    var mustMatch = arguments.length > 2 && arguments[2] === true;\n    if (!mustMatch && len === 0) return 0; // Use a for loop to avoid recursion\n\n    var loweredCase = false;\n\n    for (;;) {\n      switch (encoding) {\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n          return len;\n\n        case 'utf8':\n        case 'utf-8':\n          return utf8ToBytes(string).length;\n\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return len * 2;\n\n        case 'hex':\n          return len >>> 1;\n\n        case 'base64':\n          return base64ToBytes(string).length;\n\n        default:\n          if (loweredCase) {\n            return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8\n          }\n\n          encoding = ('' + encoding).toLowerCase();\n          loweredCase = true;\n      }\n    }\n  }\n\n  Buffer.byteLength = byteLength;\n\n  function slowToString(encoding, start, end) {\n    var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n    // property of a typed array.\n    // This behaves neither like String nor Uint8Array in that we set start/end\n    // to their upper/lower bounds if the value passed is out of range.\n    // undefined is handled specially as per ECMA-262 6th Edition,\n    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n    if (start === undefined || start < 0) {\n      start = 0;\n    } // Return early if start > this.length. Done here to prevent potential uint32\n    // coercion fail below.\n\n\n    if (start > this.length) {\n      return '';\n    }\n\n    if (end === undefined || end > this.length) {\n      end = this.length;\n    }\n\n    if (end <= 0) {\n      return '';\n    } // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n    end >>>= 0;\n    start >>>= 0;\n\n    if (end <= start) {\n      return '';\n    }\n\n    if (!encoding) encoding = 'utf8';\n\n    while (true) {\n      switch (encoding) {\n        case 'hex':\n          return hexSlice(this, start, end);\n\n        case 'utf8':\n        case 'utf-8':\n          return utf8Slice(this, start, end);\n\n        case 'ascii':\n          return asciiSlice(this, start, end);\n\n        case 'latin1':\n        case 'binary':\n          return latin1Slice(this, start, end);\n\n        case 'base64':\n          return base64Slice(this, start, end);\n\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return utf16leSlice(this, start, end);\n\n        default:\n          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n          encoding = (encoding + '').toLowerCase();\n          loweredCase = true;\n      }\n    }\n  } // This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n  // to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n  // reliably in a browserify context because there could be multiple different\n  // copies of the 'buffer' package in use. This method works even for Buffer\n  // instances that were created from another copy of the `buffer` package.\n  // See: https://github.com/feross/buffer/issues/154\n\n\n  Buffer.prototype._isBuffer = true;\n\n  function swap(b, n, m) {\n    var i = b[n];\n    b[n] = b[m];\n    b[m] = i;\n  }\n\n  Buffer.prototype.swap16 = function swap16() {\n    var len = this.length;\n\n    if (len % 2 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 16-bits');\n    }\n\n    for (var _i3 = 0; _i3 < len; _i3 += 2) {\n      swap(this, _i3, _i3 + 1);\n    }\n\n    return this;\n  };\n\n  Buffer.prototype.swap32 = function swap32() {\n    var len = this.length;\n\n    if (len % 4 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 32-bits');\n    }\n\n    for (var _i4 = 0; _i4 < len; _i4 += 4) {\n      swap(this, _i4, _i4 + 3);\n      swap(this, _i4 + 1, _i4 + 2);\n    }\n\n    return this;\n  };\n\n  Buffer.prototype.swap64 = function swap64() {\n    var len = this.length;\n\n    if (len % 8 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 64-bits');\n    }\n\n    for (var _i5 = 0; _i5 < len; _i5 += 8) {\n      swap(this, _i5, _i5 + 7);\n      swap(this, _i5 + 1, _i5 + 6);\n      swap(this, _i5 + 2, _i5 + 5);\n      swap(this, _i5 + 3, _i5 + 4);\n    }\n\n    return this;\n  };\n\n  Buffer.prototype.toString = function toString() {\n    var length = this.length;\n    if (length === 0) return '';\n    if (arguments.length === 0) return utf8Slice(this, 0, length);\n    return slowToString.apply(this, arguments);\n  };\n\n  Buffer.prototype.toLocaleString = Buffer.prototype.toString;\n\n  Buffer.prototype.equals = function equals(b) {\n    if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n    if (this === b) return true;\n    return Buffer.compare(this, b) === 0;\n  };\n\n  Buffer.prototype.inspect = function inspect() {\n    var str = '';\n    var max = exports.INSPECT_MAX_BYTES;\n    str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n    if (this.length > max) str += ' ... ';\n    return '<Buffer ' + str + '>';\n  };\n\n  if (customInspectSymbol) {\n    Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;\n  }\n\n  Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n    if (isInstance(target, Uint8Array)) {\n      target = Buffer.from(target, target.offset, target.byteLength);\n    }\n\n    if (!Buffer.isBuffer(target)) {\n      throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + typeof target);\n    }\n\n    if (start === undefined) {\n      start = 0;\n    }\n\n    if (end === undefined) {\n      end = target ? target.length : 0;\n    }\n\n    if (thisStart === undefined) {\n      thisStart = 0;\n    }\n\n    if (thisEnd === undefined) {\n      thisEnd = this.length;\n    }\n\n    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n      throw new RangeError('out of range index');\n    }\n\n    if (thisStart >= thisEnd && start >= end) {\n      return 0;\n    }\n\n    if (thisStart >= thisEnd) {\n      return -1;\n    }\n\n    if (start >= end) {\n      return 1;\n    }\n\n    start >>>= 0;\n    end >>>= 0;\n    thisStart >>>= 0;\n    thisEnd >>>= 0;\n    if (this === target) return 0;\n    var x = thisEnd - thisStart;\n    var y = end - start;\n    var len = Math.min(x, y);\n    var thisCopy = this.slice(thisStart, thisEnd);\n    var targetCopy = target.slice(start, end);\n\n    for (var _i6 = 0; _i6 < len; ++_i6) {\n      if (thisCopy[_i6] !== targetCopy[_i6]) {\n        x = thisCopy[_i6];\n        y = targetCopy[_i6];\n        break;\n      }\n    }\n\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n  }; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n  // OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n  //\n  // Arguments:\n  // - buffer - a Buffer to search\n  // - val - a string, Buffer, or number\n  // - byteOffset - an index into `buffer`; will be clamped to an int32\n  // - encoding - an optional encoding, relevant is val is a string\n  // - dir - true for indexOf, false for lastIndexOf\n\n\n  function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n    // Empty buffer means no match\n    if (buffer.length === 0) return -1; // Normalize byteOffset\n\n    if (typeof byteOffset === 'string') {\n      encoding = byteOffset;\n      byteOffset = 0;\n    } else if (byteOffset > 0x7fffffff) {\n      byteOffset = 0x7fffffff;\n    } else if (byteOffset < -0x80000000) {\n      byteOffset = -0x80000000;\n    }\n\n    byteOffset = +byteOffset; // Coerce to Number.\n\n    if (numberIsNaN(byteOffset)) {\n      // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n      byteOffset = dir ? 0 : buffer.length - 1;\n    } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n    if (byteOffset >= buffer.length) {\n      if (dir) return -1;else byteOffset = buffer.length - 1;\n    } else if (byteOffset < 0) {\n      if (dir) byteOffset = 0;else return -1;\n    } // Normalize val\n\n\n    if (typeof val === 'string') {\n      val = Buffer.from(val, encoding);\n    } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n    if (Buffer.isBuffer(val)) {\n      // Special case: looking for empty string/buffer always fails\n      if (val.length === 0) {\n        return -1;\n      }\n\n      return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n    } else if (typeof val === 'number') {\n      val = val & 0xFF; // Search for a byte value [0-255]\n\n      if (typeof Uint8Array.prototype.indexOf === 'function') {\n        if (dir) {\n          return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n        } else {\n          return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n        }\n      }\n\n      return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n    }\n\n    throw new TypeError('val must be string, number or Buffer');\n  }\n\n  function arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n    var indexSize = 1;\n    var arrLength = arr.length;\n    var valLength = val.length;\n\n    if (encoding !== undefined) {\n      encoding = String(encoding).toLowerCase();\n\n      if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n        if (arr.length < 2 || val.length < 2) {\n          return -1;\n        }\n\n        indexSize = 2;\n        arrLength /= 2;\n        valLength /= 2;\n        byteOffset /= 2;\n      }\n    }\n\n    function read(buf, i) {\n      if (indexSize === 1) {\n        return buf[i];\n      } else {\n        return buf.readUInt16BE(i * indexSize);\n      }\n    }\n\n    var i;\n\n    if (dir) {\n      var foundIndex = -1;\n\n      for (i = byteOffset; i < arrLength; i++) {\n        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n          if (foundIndex === -1) foundIndex = i;\n          if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n        } else {\n          if (foundIndex !== -1) i -= i - foundIndex;\n          foundIndex = -1;\n        }\n      }\n    } else {\n      if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n      for (i = byteOffset; i >= 0; i--) {\n        var found = true;\n\n        for (var j = 0; j < valLength; j++) {\n          if (read(arr, i + j) !== read(val, j)) {\n            found = false;\n            break;\n          }\n        }\n\n        if (found) return i;\n      }\n    }\n\n    return -1;\n  }\n\n  Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n    return this.indexOf(val, byteOffset, encoding) !== -1;\n  };\n\n  Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n  };\n\n  Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n  };\n\n  function hexWrite(buf, string, offset, length) {\n    offset = Number(offset) || 0;\n    var remaining = buf.length - offset;\n\n    if (!length) {\n      length = remaining;\n    } else {\n      length = Number(length);\n\n      if (length > remaining) {\n        length = remaining;\n      }\n    }\n\n    var strLen = string.length;\n\n    if (length > strLen / 2) {\n      length = strLen / 2;\n    }\n\n    var i;\n\n    for (i = 0; i < length; ++i) {\n      var parsed = parseInt(string.substr(i * 2, 2), 16);\n      if (numberIsNaN(parsed)) return i;\n      buf[offset + i] = parsed;\n    }\n\n    return i;\n  }\n\n  function utf8Write(buf, string, offset, length) {\n    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n  }\n\n  function asciiWrite(buf, string, offset, length) {\n    return blitBuffer(asciiToBytes(string), buf, offset, length);\n  }\n\n  function base64Write(buf, string, offset, length) {\n    return blitBuffer(base64ToBytes(string), buf, offset, length);\n  }\n\n  function ucs2Write(buf, string, offset, length) {\n    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n  }\n\n  Buffer.prototype.write = function write(string, offset, length, encoding) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n      encoding = 'utf8';\n      length = this.length;\n      offset = 0; // Buffer#write(string, encoding)\n    } else if (length === undefined && typeof offset === 'string') {\n      encoding = offset;\n      length = this.length;\n      offset = 0; // Buffer#write(string, offset[, length][, encoding])\n    } else if (isFinite(offset)) {\n      offset = offset >>> 0;\n\n      if (isFinite(length)) {\n        length = length >>> 0;\n        if (encoding === undefined) encoding = 'utf8';\n      } else {\n        encoding = length;\n        length = undefined;\n      }\n    } else {\n      throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n    }\n\n    var remaining = this.length - offset;\n    if (length === undefined || length > remaining) length = remaining;\n\n    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n      throw new RangeError('Attempt to write outside buffer bounds');\n    }\n\n    if (!encoding) encoding = 'utf8';\n    var loweredCase = false;\n\n    for (;;) {\n      switch (encoding) {\n        case 'hex':\n          return hexWrite(this, string, offset, length);\n\n        case 'utf8':\n        case 'utf-8':\n          return utf8Write(this, string, offset, length);\n\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n          return asciiWrite(this, string, offset, length);\n\n        case 'base64':\n          // Warning: maxLength not taken into account in base64Write\n          return base64Write(this, string, offset, length);\n\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return ucs2Write(this, string, offset, length);\n\n        default:\n          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n          encoding = ('' + encoding).toLowerCase();\n          loweredCase = true;\n      }\n    }\n  };\n\n  Buffer.prototype.toJSON = function toJSON() {\n    return {\n      type: 'Buffer',\n      data: Array.prototype.slice.call(this._arr || this, 0)\n    };\n  };\n\n  function base64Slice(buf, start, end) {\n    if (start === 0 && end === buf.length) {\n      return base64.fromByteArray(buf);\n    } else {\n      return base64.fromByteArray(buf.slice(start, end));\n    }\n  }\n\n  function utf8Slice(buf, start, end) {\n    end = Math.min(buf.length, end);\n    var res = [];\n    var i = start;\n\n    while (i < end) {\n      var firstByte = buf[i];\n      var codePoint = null;\n      var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n      if (i + bytesPerSequence <= end) {\n        var secondByte = void 0,\n            thirdByte = void 0,\n            fourthByte = void 0,\n            tempCodePoint = void 0;\n\n        switch (bytesPerSequence) {\n          case 1:\n            if (firstByte < 0x80) {\n              codePoint = firstByte;\n            }\n\n            break;\n\n          case 2:\n            secondByte = buf[i + 1];\n\n            if ((secondByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n              if (tempCodePoint > 0x7F) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n            break;\n\n          case 3:\n            secondByte = buf[i + 1];\n            thirdByte = buf[i + 2];\n\n            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n              if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n            break;\n\n          case 4:\n            secondByte = buf[i + 1];\n            thirdByte = buf[i + 2];\n            fourthByte = buf[i + 3];\n\n            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n              if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n        }\n      }\n\n      if (codePoint === null) {\n        // we did not generate a valid codePoint so insert a\n        // replacement char (U+FFFD) and advance only 1 byte\n        codePoint = 0xFFFD;\n        bytesPerSequence = 1;\n      } else if (codePoint > 0xFFFF) {\n        // encode to utf16 (surrogate pair dance)\n        codePoint -= 0x10000;\n        res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n        codePoint = 0xDC00 | codePoint & 0x3FF;\n      }\n\n      res.push(codePoint);\n      i += bytesPerSequence;\n    }\n\n    return decodeCodePointsArray(res);\n  } // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n  // the lowest limit is Chrome, with 0x10000 args.\n  // We go 1 magnitude less, for safety\n\n\n  var MAX_ARGUMENTS_LENGTH = 0x1000;\n\n  function decodeCodePointsArray(codePoints) {\n    var len = codePoints.length;\n\n    if (len <= MAX_ARGUMENTS_LENGTH) {\n      return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n    } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n    var res = '';\n    var i = 0;\n\n    while (i < len) {\n      res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n    }\n\n    return res;\n  }\n\n  function asciiSlice(buf, start, end) {\n    var ret = '';\n    end = Math.min(buf.length, end);\n\n    for (var _i7 = start; _i7 < end; ++_i7) {\n      ret += String.fromCharCode(buf[_i7] & 0x7F);\n    }\n\n    return ret;\n  }\n\n  function latin1Slice(buf, start, end) {\n    var ret = '';\n    end = Math.min(buf.length, end);\n\n    for (var _i8 = start; _i8 < end; ++_i8) {\n      ret += String.fromCharCode(buf[_i8]);\n    }\n\n    return ret;\n  }\n\n  function hexSlice(buf, start, end) {\n    var len = buf.length;\n    if (!start || start < 0) start = 0;\n    if (!end || end < 0 || end > len) end = len;\n    var out = '';\n\n    for (var _i9 = start; _i9 < end; ++_i9) {\n      out += hexSliceLookupTable[buf[_i9]];\n    }\n\n    return out;\n  }\n\n  function utf16leSlice(buf, start, end) {\n    var bytes = buf.slice(start, end);\n    var res = ''; // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n\n    for (var _i10 = 0; _i10 < bytes.length - 1; _i10 += 2) {\n      res += String.fromCharCode(bytes[_i10] + bytes[_i10 + 1] * 256);\n    }\n\n    return res;\n  }\n\n  Buffer.prototype.slice = function slice(start, end) {\n    var len = this.length;\n    start = ~~start;\n    end = end === undefined ? len : ~~end;\n\n    if (start < 0) {\n      start += len;\n      if (start < 0) start = 0;\n    } else if (start > len) {\n      start = len;\n    }\n\n    if (end < 0) {\n      end += len;\n      if (end < 0) end = 0;\n    } else if (end > len) {\n      end = len;\n    }\n\n    if (end < start) end = start;\n    var newBuf = this.subarray(start, end); // Return an augmented `Uint8Array` instance\n\n    Object.setPrototypeOf(newBuf, Buffer.prototype);\n    return newBuf;\n  };\n  /*\n   * Need to make sure that buffer isn't trying to write out of bounds.\n   */\n\n\n  function checkOffset(offset, ext, length) {\n    if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n  }\n\n  Buffer.prototype.readUintLE = Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    var val = this[offset];\n    var mul = 1;\n    var i = 0;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      val += this[offset + i] * mul;\n    }\n\n    return val;\n  };\n\n  Buffer.prototype.readUintBE = Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n\n    if (!noAssert) {\n      checkOffset(offset, byteLength, this.length);\n    }\n\n    var val = this[offset + --byteLength];\n    var mul = 1;\n\n    while (byteLength > 0 && (mul *= 0x100)) {\n      val += this[offset + --byteLength] * mul;\n    }\n\n    return val;\n  };\n\n  Buffer.prototype.readUint8 = Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 1, this.length);\n    return this[offset];\n  };\n\n  Buffer.prototype.readUint16LE = Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    return this[offset] | this[offset + 1] << 8;\n  };\n\n  Buffer.prototype.readUint16BE = Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    return this[offset] << 8 | this[offset + 1];\n  };\n\n  Buffer.prototype.readUint32LE = Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n  };\n\n  Buffer.prototype.readUint32BE = Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n  };\n\n  Buffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {\n    offset = offset >>> 0;\n    validateNumber(offset, 'offset');\n    var first = this[offset];\n    var last = this[offset + 7];\n\n    if (first === undefined || last === undefined) {\n      boundsError(offset, this.length - 8);\n    }\n\n    var lo = first + this[++offset] * Math.pow(2, 8) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 24);\n    var hi = this[++offset] + this[++offset] * Math.pow(2, 8) + this[++offset] * Math.pow(2, 16) + last * Math.pow(2, 24);\n    return BigInt(lo) + (BigInt(hi) << BigInt(32));\n  });\n  Buffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {\n    offset = offset >>> 0;\n    validateNumber(offset, 'offset');\n    var first = this[offset];\n    var last = this[offset + 7];\n\n    if (first === undefined || last === undefined) {\n      boundsError(offset, this.length - 8);\n    }\n\n    var hi = first * Math.pow(2, 24) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 8) + this[++offset];\n    var lo = this[++offset] * Math.pow(2, 24) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 8) + last;\n    return (BigInt(hi) << BigInt(32)) + BigInt(lo);\n  });\n\n  Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    var val = this[offset];\n    var mul = 1;\n    var i = 0;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      val += this[offset + i] * mul;\n    }\n\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n  };\n\n  Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    var i = byteLength;\n    var mul = 1;\n    var val = this[offset + --i];\n\n    while (i > 0 && (mul *= 0x100)) {\n      val += this[offset + --i] * mul;\n    }\n\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n  };\n\n  Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 1, this.length);\n    if (!(this[offset] & 0x80)) return this[offset];\n    return (0xff - this[offset] + 1) * -1;\n  };\n\n  Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    var val = this[offset] | this[offset + 1] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n  };\n\n  Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    var val = this[offset + 1] | this[offset] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n  };\n\n  Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n  };\n\n  Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n  };\n\n  Buffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {\n    offset = offset >>> 0;\n    validateNumber(offset, 'offset');\n    var first = this[offset];\n    var last = this[offset + 7];\n\n    if (first === undefined || last === undefined) {\n      boundsError(offset, this.length - 8);\n    }\n\n    var val = this[offset + 4] + this[offset + 5] * Math.pow(2, 8) + this[offset + 6] * Math.pow(2, 16) + (last << 24); // Overflow\n\n    return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * Math.pow(2, 8) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 24));\n  });\n  Buffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {\n    offset = offset >>> 0;\n    validateNumber(offset, 'offset');\n    var first = this[offset];\n    var last = this[offset + 7];\n\n    if (first === undefined || last === undefined) {\n      boundsError(offset, this.length - 8);\n    }\n\n    var val = (first << 24) + // Overflow\n    this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 8) + this[++offset];\n    return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * Math.pow(2, 24) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 8) + last);\n  });\n\n  Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return ieee754$1.read(this, offset, true, 23, 4);\n  };\n\n  Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return ieee754$1.read(this, offset, false, 23, 4);\n  };\n\n  Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 8, this.length);\n    return ieee754$1.read(this, offset, true, 52, 8);\n  };\n\n  Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 8, this.length);\n    return ieee754$1.read(this, offset, false, 52, 8);\n  };\n\n  function checkInt(buf, value, offset, ext, max, min) {\n    if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n    if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n    if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  }\n\n  Buffer.prototype.writeUintLE = Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n\n    if (!noAssert) {\n      var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n      checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n\n    var mul = 1;\n    var i = 0;\n    this[offset] = value & 0xFF;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      this[offset + i] = value / mul & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeUintBE = Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n\n    if (!noAssert) {\n      var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n      checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n\n    var i = byteLength - 1;\n    var mul = 1;\n    this[offset + i] = value & 0xFF;\n\n    while (--i >= 0 && (mul *= 0x100)) {\n      this[offset + i] = value / mul & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeUint8 = Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n    this[offset] = value & 0xff;\n    return offset + 1;\n  };\n\n  Buffer.prototype.writeUint16LE = Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeUint16BE = Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeUint32LE = Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n    return offset + 4;\n  };\n\n  Buffer.prototype.writeUint32BE = Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n  };\n\n  function wrtBigUInt64LE(buf, value, offset, min, max) {\n    checkIntBI(value, min, max, buf, offset, 7);\n    var lo = Number(value & BigInt(0xffffffff));\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    var hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    return offset;\n  }\n\n  function wrtBigUInt64BE(buf, value, offset, min, max) {\n    checkIntBI(value, min, max, buf, offset, 7);\n    var lo = Number(value & BigInt(0xffffffff));\n    buf[offset + 7] = lo;\n    lo = lo >> 8;\n    buf[offset + 6] = lo;\n    lo = lo >> 8;\n    buf[offset + 5] = lo;\n    lo = lo >> 8;\n    buf[offset + 4] = lo;\n    var hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n    buf[offset + 3] = hi;\n    hi = hi >> 8;\n    buf[offset + 2] = hi;\n    hi = hi >> 8;\n    buf[offset + 1] = hi;\n    hi = hi >> 8;\n    buf[offset] = hi;\n    return offset + 8;\n  }\n\n  Buffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value) {\n    var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'));\n  });\n  Buffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value) {\n    var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'));\n  });\n\n  Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      var limit = Math.pow(2, 8 * byteLength - 1);\n      checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n\n    var i = 0;\n    var mul = 1;\n    var sub = 0;\n    this[offset] = value & 0xFF;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n        sub = 1;\n      }\n\n      this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      var limit = Math.pow(2, 8 * byteLength - 1);\n      checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n\n    var i = byteLength - 1;\n    var mul = 1;\n    var sub = 0;\n    this[offset + i] = value & 0xFF;\n\n    while (--i >= 0 && (mul *= 0x100)) {\n      if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n        sub = 1;\n      }\n\n      this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n    if (value < 0) value = 0xff + value + 1;\n    this[offset] = value & 0xff;\n    return offset + 1;\n  };\n\n  Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n    return offset + 4;\n  };\n\n  Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n    if (value < 0) value = 0xffffffff + value + 1;\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n  };\n\n  Buffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value) {\n    var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'));\n  });\n  Buffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value) {\n    var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'));\n  });\n\n  function checkIEEE754(buf, value, offset, ext, max, min) {\n    if (offset + ext > buf.length) throw new RangeError('Index out of range');\n    if (offset < 0) throw new RangeError('Index out of range');\n  }\n\n  function writeFloat(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      checkIEEE754(buf, value, offset, 4);\n    }\n\n    ieee754$1.write(buf, value, offset, littleEndian, 23, 4);\n    return offset + 4;\n  }\n\n  Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, true, noAssert);\n  };\n\n  Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, false, noAssert);\n  };\n\n  function writeDouble(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      checkIEEE754(buf, value, offset, 8);\n    }\n\n    ieee754$1.write(buf, value, offset, littleEndian, 52, 8);\n    return offset + 8;\n  }\n\n  Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n    return writeDouble(this, value, offset, true, noAssert);\n  };\n\n  Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n    return writeDouble(this, value, offset, false, noAssert);\n  }; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\n  Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n    if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');\n    if (!start) start = 0;\n    if (!end && end !== 0) end = this.length;\n    if (targetStart >= target.length) targetStart = target.length;\n    if (!targetStart) targetStart = 0;\n    if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n    if (end === start) return 0;\n    if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n    if (targetStart < 0) {\n      throw new RangeError('targetStart out of bounds');\n    }\n\n    if (start < 0 || start >= this.length) throw new RangeError('Index out of range');\n    if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n    if (end > this.length) end = this.length;\n\n    if (target.length - targetStart < end - start) {\n      end = target.length - targetStart + start;\n    }\n\n    var len = end - start;\n\n    if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n      // Use built-in when available, missing from IE11\n      this.copyWithin(targetStart, start, end);\n    } else {\n      Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n    }\n\n    return len;\n  }; // Usage:\n  //    buffer.fill(number[, offset[, end]])\n  //    buffer.fill(buffer[, offset[, end]])\n  //    buffer.fill(string[, offset[, end]][, encoding])\n\n\n  Buffer.prototype.fill = function fill(val, start, end, encoding) {\n    // Handle string cases:\n    if (typeof val === 'string') {\n      if (typeof start === 'string') {\n        encoding = start;\n        start = 0;\n        end = this.length;\n      } else if (typeof end === 'string') {\n        encoding = end;\n        end = this.length;\n      }\n\n      if (encoding !== undefined && typeof encoding !== 'string') {\n        throw new TypeError('encoding must be a string');\n      }\n\n      if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n        throw new TypeError('Unknown encoding: ' + encoding);\n      }\n\n      if (val.length === 1) {\n        var _code = val.charCodeAt(0);\n\n        if (encoding === 'utf8' && _code < 128 || encoding === 'latin1') {\n          // Fast path: If `val` fits into a single byte, use that numeric value.\n          val = _code;\n        }\n      }\n    } else if (typeof val === 'number') {\n      val = val & 255;\n    } else if (typeof val === 'boolean') {\n      val = Number(val);\n    } // Invalid ranges are not set to a default, so can range check early.\n\n\n    if (start < 0 || this.length < start || this.length < end) {\n      throw new RangeError('Out of range index');\n    }\n\n    if (end <= start) {\n      return this;\n    }\n\n    start = start >>> 0;\n    end = end === undefined ? this.length : end >>> 0;\n    if (!val) val = 0;\n    var i;\n\n    if (typeof val === 'number') {\n      for (i = start; i < end; ++i) {\n        this[i] = val;\n      }\n    } else {\n      var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);\n      var _len3 = bytes.length;\n\n      if (_len3 === 0) {\n        throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n      }\n\n      for (i = 0; i < end - start; ++i) {\n        this[i + start] = bytes[i % _len3];\n      }\n    }\n\n    return this;\n  }; // CUSTOM ERRORS\n  // =============\n  // Simplified versions from Node, changed for Buffer-only usage\n\n\n  var errors = {};\n\n  function E(sym, getMessage, Base) {\n    errors[sym] = /*#__PURE__*/function (_Base) {\n      _inherits(NodeError, _Base);\n\n      var _super = _createSuper(NodeError);\n\n      function NodeError() {\n        var _this;\n\n        _classCallCheck(this, NodeError);\n\n        _this = _super.call(this);\n        Object.defineProperty(_assertThisInitialized(_this), 'message', {\n          value: getMessage.apply(_assertThisInitialized(_this), arguments),\n          writable: true,\n          configurable: true\n        }); // Add the error code to the name to include it in the stack trace.\n\n        _this.name = \"\".concat(_this.name, \" [\").concat(sym, \"]\"); // Access the stack to generate the error message including the error code\n        // from the name.\n\n        _this.stack; // eslint-disable-line no-unused-expressions\n        // Reset the name to the actual name.\n\n        delete _this.name;\n        return _this;\n      }\n\n      _createClass(NodeError, [{\n        key: \"code\",\n        get: function get() {\n          return sym;\n        },\n        set: function set(value) {\n          Object.defineProperty(this, 'code', {\n            configurable: true,\n            enumerable: true,\n            value: value,\n            writable: true\n          });\n        }\n      }, {\n        key: \"toString\",\n        value: function toString() {\n          return \"\".concat(this.name, \" [\").concat(sym, \"]: \").concat(this.message);\n        }\n      }]);\n\n      return NodeError;\n    }(Base);\n  }\n\n  E('ERR_BUFFER_OUT_OF_BOUNDS', function (name) {\n    if (name) {\n      return \"\".concat(name, \" is outside of buffer bounds\");\n    }\n\n    return 'Attempt to access memory outside buffer bounds';\n  }, RangeError);\n  E('ERR_INVALID_ARG_TYPE', function (name, actual) {\n    return \"The \\\"\".concat(name, \"\\\" argument must be of type number. Received type \").concat(typeof actual);\n  }, TypeError);\n  E('ERR_OUT_OF_RANGE', function (str, range, input) {\n    var msg = \"The value of \\\"\".concat(str, \"\\\" is out of range.\");\n    var received = input;\n\n    if (Number.isInteger(input) && Math.abs(input) > Math.pow(2, 32)) {\n      received = addNumericalSeparator(String(input));\n    } else if (typeof input === 'bigint') {\n      received = String(input);\n\n      if (input > Math.pow(BigInt(2), BigInt(32)) || input < -Math.pow(BigInt(2), BigInt(32))) {\n        received = addNumericalSeparator(received);\n      }\n\n      received += 'n';\n    }\n\n    msg += \" It must be \".concat(range, \". Received \").concat(received);\n    return msg;\n  }, RangeError);\n\n  function addNumericalSeparator(val) {\n    var res = '';\n    var i = val.length;\n    var start = val[0] === '-' ? 1 : 0;\n\n    for (; i >= start + 4; i -= 3) {\n      res = \"_\".concat(val.slice(i - 3, i)).concat(res);\n    }\n\n    return \"\".concat(val.slice(0, i)).concat(res);\n  } // CHECK FUNCTIONS\n  // ===============\n\n\n  function checkBounds(buf, offset, byteLength) {\n    validateNumber(offset, 'offset');\n\n    if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n      boundsError(offset, buf.length - (byteLength + 1));\n    }\n  }\n\n  function checkIntBI(value, min, max, buf, offset, byteLength) {\n    if (value > max || value < min) {\n      var n = typeof min === 'bigint' ? 'n' : '';\n      var range;\n\n      if (byteLength > 3) {\n        if (min === 0 || min === BigInt(0)) {\n          range = \">= 0\".concat(n, \" and < 2\").concat(n, \" ** \").concat((byteLength + 1) * 8).concat(n);\n        } else {\n          range = \">= -(2\".concat(n, \" ** \").concat((byteLength + 1) * 8 - 1).concat(n, \") and < 2 ** \") + \"\".concat((byteLength + 1) * 8 - 1).concat(n);\n        }\n      } else {\n        range = \">= \".concat(min).concat(n, \" and <= \").concat(max).concat(n);\n      }\n\n      throw new errors.ERR_OUT_OF_RANGE('value', range, value);\n    }\n\n    checkBounds(buf, offset, byteLength);\n  }\n\n  function validateNumber(value, name) {\n    if (typeof value !== 'number') {\n      throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value);\n    }\n  }\n\n  function boundsError(value, length, type) {\n    if (Math.floor(value) !== value) {\n      validateNumber(value, type);\n      throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value);\n    }\n\n    if (length < 0) {\n      throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();\n    }\n\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', \">= \".concat(type ? 1 : 0, \" and <= \").concat(length), value);\n  } // HELPER FUNCTIONS\n  // ================\n\n\n  var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\n\n  function base64clean(str) {\n    // Node takes equal signs as end of the Base64 encoding\n    str = str.split('=')[0]; // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\n    str = str.trim().replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n    if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n    while (str.length % 4 !== 0) {\n      str = str + '=';\n    }\n\n    return str;\n  }\n\n  function utf8ToBytes(string, units) {\n    units = units || Infinity;\n    var codePoint;\n    var length = string.length;\n    var leadSurrogate = null;\n    var bytes = [];\n\n    for (var _i11 = 0; _i11 < length; ++_i11) {\n      codePoint = string.charCodeAt(_i11); // is surrogate component\n\n      if (codePoint > 0xD7FF && codePoint < 0xE000) {\n        // last char was a lead\n        if (!leadSurrogate) {\n          // no lead yet\n          if (codePoint > 0xDBFF) {\n            // unexpected trail\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n            continue;\n          } else if (_i11 + 1 === length) {\n            // unpaired lead\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n            continue;\n          } // valid lead\n\n\n          leadSurrogate = codePoint;\n          continue;\n        } // 2 leads in a row\n\n\n        if (codePoint < 0xDC00) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          leadSurrogate = codePoint;\n          continue;\n        } // valid surrogate pair\n\n\n        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n      } else if (leadSurrogate) {\n        // valid bmp char, but last char was a lead\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n      }\n\n      leadSurrogate = null; // encode utf8\n\n      if (codePoint < 0x80) {\n        if ((units -= 1) < 0) break;\n        bytes.push(codePoint);\n      } else if (codePoint < 0x800) {\n        if ((units -= 2) < 0) break;\n        bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n      } else if (codePoint < 0x10000) {\n        if ((units -= 3) < 0) break;\n        bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n      } else if (codePoint < 0x110000) {\n        if ((units -= 4) < 0) break;\n        bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n      } else {\n        throw new Error('Invalid code point');\n      }\n    }\n\n    return bytes;\n  }\n\n  function asciiToBytes(str) {\n    var byteArray = [];\n\n    for (var _i12 = 0; _i12 < str.length; ++_i12) {\n      // Node's code seems to be doing this and not & 0x7F..\n      byteArray.push(str.charCodeAt(_i12) & 0xFF);\n    }\n\n    return byteArray;\n  }\n\n  function utf16leToBytes(str, units) {\n    var c, hi, lo;\n    var byteArray = [];\n\n    for (var _i13 = 0; _i13 < str.length; ++_i13) {\n      if ((units -= 2) < 0) break;\n      c = str.charCodeAt(_i13);\n      hi = c >> 8;\n      lo = c % 256;\n      byteArray.push(lo);\n      byteArray.push(hi);\n    }\n\n    return byteArray;\n  }\n\n  function base64ToBytes(str) {\n    return base64.toByteArray(base64clean(str));\n  }\n\n  function blitBuffer(src, dst, offset, length) {\n    var i;\n\n    for (i = 0; i < length; ++i) {\n      if (i + offset >= dst.length || i >= src.length) break;\n      dst[i + offset] = src[i];\n    }\n\n    return i;\n  } // ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n  // the `instanceof` check but they should be treated as of that type.\n  // See: https://github.com/feross/buffer/issues/166\n\n\n  function isInstance(obj, type) {\n    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n  }\n\n  function numberIsNaN(obj) {\n    // For IE11 support\n    return obj !== obj; // eslint-disable-line no-self-compare\n  } // Create lookup table for `toString('hex')`\n  // See: https://github.com/feross/buffer/issues/219\n\n\n  var hexSliceLookupTable = function () {\n    var alphabet = '0123456789abcdef';\n    var table = new Array(256);\n\n    for (var _i14 = 0; _i14 < 16; ++_i14) {\n      var i16 = _i14 * 16;\n\n      for (var j = 0; j < 16; ++j) {\n        table[i16 + j] = alphabet[_i14] + alphabet[j];\n      }\n    }\n\n    return table;\n  }(); // Return not function with Error if BigInt not supported\n\n\n  function defineBigIntMethod(fn) {\n    return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn;\n  }\n\n  function BufferBigIntNotDefined() {\n    throw new Error('BigInt not supported');\n  }\n})(buffer);\n\nvar global$1 = typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {};\nvar inherits;\n\nif (typeof Object.create === 'function') {\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function TempCtor() {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  };\n}\n\nvar inherits$1 = inherits;\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n\n/* legacy: obj, showHidden, depth, colors*/\n\nfunction inspect$1(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  }; // legacy...\n\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  } // set default options\n\n\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n} // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\n\ninspect$1.colors = {\n  'bold': [1, 22],\n  'italic': [3, 23],\n  'underline': [4, 24],\n  'inverse': [7, 27],\n  'white': [37, 39],\n  'grey': [90, 39],\n  'black': [30, 39],\n  'blue': [34, 39],\n  'cyan': [36, 39],\n  'green': [32, 39],\n  'magenta': [35, 39],\n  'red': [31, 39],\n  'yellow': [33, 39]\n}; // Don't use 'blue' not visible on cmd.exe\n\ninspect$1.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect$1.styles[styleType];\n\n  if (style) {\n    return \"\\x1B[\" + inspect$1.colors[style][0] + 'm' + str + \"\\x1B[\" + inspect$1.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\nfunction arrayToHash(array) {\n  var hash = {};\n  array.forEach(function (val, idx) {\n    hash[val] = true;\n  });\n  return hash;\n}\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect && value && isFunction(value.inspect) && // Filter out the util module, it's inspect function is special\n  value.inspect !== inspect$1 && // Also filter out any prototype objects using the circular check.\n  !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n\n    return ret;\n  } // Primitive types cannot have properties\n\n\n  var primitive = formatPrimitive(ctx, value);\n\n  if (primitive) {\n    return primitive;\n  } // Look up the keys of the object.\n\n\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  } // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\n\n  if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  } // Some type of object without properties can be shortcutted.\n\n\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '',\n      array = false,\n      braces = ['{', '}']; // Make Array say that they are Array\n\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  } // Make functions say that they are functions\n\n\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  } // Make RegExps say that they are RegExps\n\n\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  } // Make dates with properties first say the date\n\n\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  } // Make error with message first say the error\n\n\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n  var output;\n\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function (key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n  return reduceToSingleString(output, base, braces);\n}\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');\n\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '').replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n\n  if (isNumber(value)) return ctx.stylize('' + value, 'number');\n  if (isBoolean(value)) return ctx.stylize('' + value, 'boolean'); // For some reason typeof null is \"object\", so special case here.\n\n  if (isNull(value)) return ctx.stylize('null', 'null');\n}\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n\n  keys.forEach(function (key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n    }\n  });\n  return output;\n}\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || {\n    value: value[key]\n  };\n\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function (line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function (line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n\n    name = JSON.stringify('' + key);\n\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\nfunction reduceToSingleString(output, base, braces) {\n  var length = output.reduce(function (prev, cur) {\n    if (cur.indexOf('\\n') >= 0) ;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] + (base === '' ? '' : base + '\\n ') + ' ' + output.join(',\\n  ') + ' ' + braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n} // NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nfunction isError(e) {\n  return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isPrimitive(arg) {\n  return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || // ES6 symbol\n  typeof arg === 'undefined';\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\nfunction _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n  var keys = Object.keys(add);\n  var i = keys.length;\n\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n\n  return origin;\n}\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n\n  if (y < x) {\n    return 1;\n  }\n\n  return 0;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n\n  return keys;\n};\n\nvar pSlice = Array.prototype.slice;\n\nvar _functionsHaveNames;\n\nfunction functionsHaveNames() {\n  if (typeof _functionsHaveNames !== 'undefined') {\n    return _functionsHaveNames;\n  }\n\n  return _functionsHaveNames = function () {\n    return function foo() {}.name === 'foo';\n  }();\n}\n\nfunction pToString(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isView(arrbuf) {\n  if (buffer.isBuffer(arrbuf)) {\n    return false;\n  }\n\n  if (typeof global$1.ArrayBuffer !== 'function') {\n    return false;\n  }\n\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n\n  if (!arrbuf) {\n    return false;\n  }\n\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n\n  return false;\n} // 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\n\nfunction assert(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n} // 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/; // based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\n\nfunction getName(func) {\n  if (!isFunction(func)) {\n    return;\n  }\n\n  if (functionsHaveNames()) {\n    return func.name;\n  }\n\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\n\nassert.AssertionError = AssertionError;\n\nfunction AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n\n  var stackStartFunction = options.stackStartFunction || fail;\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n\n    if (err.stack) {\n      var out = err.stack; // try to strip useless frames\n\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n} // assert.AssertionError instanceof Error\n\n\ninherits$1(AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\n\nfunction inspect(something) {\n  if (functionsHaveNames() || !isFunction(something)) {\n    return inspect$1(something);\n  }\n\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' + name + ']';\n}\n\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' + self.operator + ' ' + truncate(inspect(self.expected), 128);\n} // At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n} // EXTENSION! allows for well behaved errors defined elsewhere.\n\n\nassert.fail = fail; // 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\n\nassert.ok = ok; // 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = equal;\n\nfunction equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', equal);\n} // 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\n\nassert.notEqual = notEqual;\n\nfunction notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', notEqual);\n  }\n} // 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\n\nassert.deepEqual = deepEqual;\n\nfunction deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', deepEqual);\n  }\n}\n\nassert.deepStrictEqual = deepStrictEqual;\n\nfunction deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', deepStrictEqual);\n  }\n}\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (buffer.isBuffer(actual) && buffer.isBuffer(expected)) {\n    return compare(actual, expected) === 0; // 7.2. If the expected value is a Date object, the actual value is\n    // equivalent if it is also a Date object that refers to the same time.\n  } else if (isDate(actual) && isDate(expected)) {\n    return actual.getTime() === expected.getTime(); // 7.3 If the expected value is a RegExp object, the actual value is\n    // equivalent if it is also a RegExp object with the same source and\n    // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (isRegExp(actual) && isRegExp(expected)) {\n    return actual.source === expected.source && actual.global === expected.global && actual.multiline === expected.multiline && actual.lastIndex === expected.lastIndex && actual.ignoreCase === expected.ignoreCase; // 7.4. Other pairs that do not both pass typeof value == 'object',\n    // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') && (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected; // If both values are instances of typed arrays, wrap their underlying\n    // ArrayBuffers in a Buffer each to increase performance\n    // This optimization requires the arrays to have the same type as checked by\n    // Object.prototype.toString (aka pToString). Never perform binary\n    // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n    // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) && pToString(actual) === pToString(expected) && !(actual instanceof Float32Array || actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer), new Uint8Array(expected.buffer)) === 0; // 7.5 For all other Object pairs, including Array objects, equivalence is\n    // determined by having the same number of owned properties (as verified\n    // with Object.prototype.hasOwnProperty.call), the same set of keys\n    // (although not necessarily the same order), equivalent values for every\n    // corresponding key, and an identical 'prototype' property. Note: this\n    // accounts for both named and indexed properties on Arrays.\n  } else if (buffer.isBuffer(actual) !== buffer.isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {\n      actual: [],\n      expected: []\n    };\n    var actualIndex = memos.actual.indexOf(actual);\n\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined) return false; // if one is a primitive, the other must be same\n\n  if (isPrimitive(a) || isPrimitive(b)) return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b)) return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if (aIsArgs && !bIsArgs || !aIsArgs && bIsArgs) return false;\n\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i; // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n\n  if (ka.length !== kb.length) return false; //the same set of keys (although not necessarily the same order),\n\n  ka.sort();\n  kb.sort(); //~~~cheap key test\n\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i]) return false;\n  } //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n\n\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects)) return false;\n  }\n\n  return true;\n} // 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\n\nassert.notDeepEqual = notDeepEqual;\n\nfunction notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', notDeepEqual);\n  }\n}\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\n\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n} // 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\n\nassert.strictEqual = strictEqual;\n\nfunction strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', strictEqual);\n  }\n} // 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\n\nassert.notStrictEqual = notStrictEqual;\n\nfunction notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', notStrictEqual);\n  }\n}\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {// Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') + (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if (isUnwantedException && userProvidedMessage && expectedException(actual, expected) || isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if (shouldThrow && actual && expected && !expectedException(actual, expected) || !shouldThrow && actual) {\n    throw actual;\n  }\n} // 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\n\nassert.throws = throws;\n\nfunction throws(block,\n/*optional*/\nerror,\n/*optional*/\nmessage) {\n  _throws(true, block, error, message);\n} // EXTENSION! This is annoying to write outside this module.\n\n\nassert.doesNotThrow = doesNotThrow;\n\nfunction doesNotThrow(block,\n/*optional*/\nerror,\n/*optional*/\nmessage) {\n  _throws(false, block, error, message);\n}\n\nassert.ifError = ifError;\n\nfunction ifError(err) {\n  if (err) throw err;\n}\n\nvar Layout$1 = {};\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\n\nvar Layout = /*#__PURE__*/function () {\n  function Layout(span, property) {\n    _classCallCheck(this, Layout);\n\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n\n\n    this.span = span;\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n\n    this.property = property;\n  }\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n\n\n  _createClass(Layout, [{\n    key: \"makeDestinationObject\",\n    value: function makeDestinationObject() {\n      return {};\n    }\n    /**\n     * Decode from a Buffer into an JavaScript value.\n     *\n     * @param {Buffer} b - the buffer from which encoded data is read.\n     *\n     * @param {Number} [offset] - the offset at which the encoded data\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @returns {(Number|Array|Object)} - the value of the decoded data.\n     *\n     * @abstract\n     */\n\n  }, {\n    key: \"decode\",\n    value: function decode(b, offset) {\n      throw new Error('Layout is abstract');\n    }\n    /**\n     * Encode a JavaScript value into a Buffer.\n     *\n     * @param {(Number|Array|Object)} src - the value to be encoded into\n     * the buffer.  The type accepted depends on the (sub-)type of {@link\n     * Layout}.\n     *\n     * @param {Buffer} b - the buffer into which encoded data will be\n     * written.\n     *\n     * @param {Number} [offset] - the offset at which the encoded data\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @returns {Number} - the number of bytes encoded, including the\n     * space skipped for internal padding, but excluding data such as\n     * {@link Sequence#count|lengths} when stored {@link\n     * ExternalLayout|externally}.  This is the adjustment to `offset`\n     * producing the offset where data for the next layout would be\n     * written.\n     *\n     * @abstract\n     */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      throw new Error('Layout is abstract');\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Buffer} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n\n  }, {\n    key: \"getSpan\",\n    value: function getSpan(b, offset) {\n      if (0 > this.span) {\n        throw new RangeError('indeterminate span');\n      }\n\n      return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n\n  }, {\n    key: \"replicate\",\n    value: function replicate(property) {\n      var rv = Object.create(this.constructor.prototype);\n      Object.assign(rv, this);\n      rv.property = property;\n      return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n\n  }, {\n    key: \"fromArray\",\n    value: function fromArray(values) {\n      return undefined;\n    }\n  }]);\n\n  return Layout;\n}();\n\nLayout$1.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\n\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n\n  return name;\n}\n\nLayout$1.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n\n  if (!(layout && layout instanceof Layout)) {\n    throw new TypeError('layout must be a Layout');\n  }\n\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n\n  layout.makeDestinationObject = function () {\n    return new Class();\n  };\n\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function value(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function value(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true\n  });\n}\n\nLayout$1.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\n\nvar ExternalLayout = /*#__PURE__*/function (_Layout) {\n  _inherits(ExternalLayout, _Layout);\n\n  var _super2 = _createSuper(ExternalLayout);\n\n  function ExternalLayout() {\n    _classCallCheck(this, ExternalLayout);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(ExternalLayout, [{\n    key: \"isCount\",\n    value:\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    function isCount() {\n      throw new Error('ExternalLayout is abstract');\n    }\n  }]);\n\n  return ExternalLayout;\n}(Layout);\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\n\n\nvar GreedyCount = /*#__PURE__*/function (_ExternalLayout) {\n  _inherits(GreedyCount, _ExternalLayout);\n\n  var _super3 = _createSuper(GreedyCount);\n\n  function GreedyCount(elementSpan, property) {\n    var _this2;\n\n    _classCallCheck(this, GreedyCount);\n\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n\n    if (!Number.isInteger(elementSpan) || 0 >= elementSpan) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n\n    _this2 = _super3.call(this, -1, property);\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n\n    _this2.elementSpan = elementSpan;\n    return _this2;\n  }\n  /** @override */\n\n\n  _createClass(GreedyCount, [{\n    key: \"isCount\",\n    value: function isCount() {\n      return true;\n    }\n    /** @override */\n\n  }, {\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var rem = b.length - offset;\n      return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      return 0;\n    }\n  }]);\n\n  return GreedyCount;\n}(ExternalLayout);\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\n\n\nvar OffsetLayout = /*#__PURE__*/function (_ExternalLayout2) {\n  _inherits(OffsetLayout, _ExternalLayout2);\n\n  var _super4 = _createSuper(OffsetLayout);\n\n  function OffsetLayout(layout, offset, property) {\n    var _this3;\n\n    _classCallCheck(this, OffsetLayout);\n\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    _this3 = _super4.call(this, layout.span, property || layout.property);\n    /** The subordinated layout. */\n\n    _this3.layout = layout;\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n\n    _this3.offset = offset;\n    return _this3;\n  }\n  /** @override */\n\n\n  _createClass(OffsetLayout, [{\n    key: \"isCount\",\n    value: function isCount() {\n      return this.layout instanceof UInt || this.layout instanceof UIntBE;\n    }\n    /** @override */\n\n  }, {\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return this.layout.encode(src, b, offset + this.offset);\n    }\n  }]);\n\n  return OffsetLayout;\n}(ExternalLayout);\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar UInt = /*#__PURE__*/function (_Layout2) {\n  _inherits(UInt, _Layout2);\n\n  var _super5 = _createSuper(UInt);\n\n  function UInt(span, property) {\n    var _this4;\n\n    _classCallCheck(this, UInt);\n\n    _this4 = _super5.call(this, span, property);\n\n    if (6 < _this4.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n\n    return _this4;\n  }\n  /** @override */\n\n\n  _createClass(UInt, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return b.readUIntLE(offset, this.span);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      b.writeUIntLE(src, offset, this.span);\n      return this.span;\n    }\n  }]);\n\n  return UInt;\n}(Layout);\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar UIntBE = /*#__PURE__*/function (_Layout3) {\n  _inherits(UIntBE, _Layout3);\n\n  var _super6 = _createSuper(UIntBE);\n\n  function UIntBE(span, property) {\n    var _this5;\n\n    _classCallCheck(this, UIntBE);\n\n    _this5 = _super6.call(this, span, property);\n\n    if (6 < _this5.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n\n    return _this5;\n  }\n  /** @override */\n\n\n  _createClass(UIntBE, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return b.readUIntBE(offset, this.span);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      b.writeUIntBE(src, offset, this.span);\n      return this.span;\n    }\n  }]);\n\n  return UIntBE;\n}(Layout);\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar Int = /*#__PURE__*/function (_Layout4) {\n  _inherits(Int, _Layout4);\n\n  var _super7 = _createSuper(Int);\n\n  function Int(span, property) {\n    var _this6;\n\n    _classCallCheck(this, Int);\n\n    _this6 = _super7.call(this, span, property);\n\n    if (6 < _this6.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n\n    return _this6;\n  }\n  /** @override */\n\n\n  _createClass(Int, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return b.readIntLE(offset, this.span);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      b.writeIntLE(src, offset, this.span);\n      return this.span;\n    }\n  }]);\n\n  return Int;\n}(Layout);\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar IntBE = /*#__PURE__*/function (_Layout5) {\n  _inherits(IntBE, _Layout5);\n\n  var _super8 = _createSuper(IntBE);\n\n  function IntBE(span, property) {\n    var _this7;\n\n    _classCallCheck(this, IntBE);\n\n    _this7 = _super8.call(this, span, property);\n\n    if (6 < _this7.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n\n    return _this7;\n  }\n  /** @override */\n\n\n  _createClass(IntBE, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return b.readIntBE(offset, this.span);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      b.writeIntBE(src, offset, this.span);\n      return this.span;\n    }\n  }]);\n\n  return IntBE;\n}(Layout);\n\nvar V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\n\nfunction divmodInt64(src) {\n  var hi32 = Math.floor(src / V2E32);\n  var lo32 = src - hi32 * V2E32;\n  return {\n    hi32: hi32,\n    lo32: lo32\n  };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\n\n\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\n\n\nvar NearUInt64 = /*#__PURE__*/function (_Layout6) {\n  _inherits(NearUInt64, _Layout6);\n\n  var _super9 = _createSuper(NearUInt64);\n\n  function NearUInt64(property) {\n    _classCallCheck(this, NearUInt64);\n\n    return _super9.call(this, 8, property);\n  }\n  /** @override */\n\n\n  _createClass(NearUInt64, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var lo32 = b.readUInt32LE(offset);\n      var hi32 = b.readUInt32LE(offset + 4);\n      return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var split = divmodInt64(src);\n      b.writeUInt32LE(split.lo32, offset);\n      b.writeUInt32LE(split.hi32, offset + 4);\n      return 8;\n    }\n  }]);\n\n  return NearUInt64;\n}(Layout);\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\n\n\nvar NearUInt64BE = /*#__PURE__*/function (_Layout7) {\n  _inherits(NearUInt64BE, _Layout7);\n\n  var _super10 = _createSuper(NearUInt64BE);\n\n  function NearUInt64BE(property) {\n    _classCallCheck(this, NearUInt64BE);\n\n    return _super10.call(this, 8, property);\n  }\n  /** @override */\n\n\n  _createClass(NearUInt64BE, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var hi32 = b.readUInt32BE(offset);\n      var lo32 = b.readUInt32BE(offset + 4);\n      return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var split = divmodInt64(src);\n      b.writeUInt32BE(split.hi32, offset);\n      b.writeUInt32BE(split.lo32, offset + 4);\n      return 8;\n    }\n  }]);\n\n  return NearUInt64BE;\n}(Layout);\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\n\n\nvar NearInt64 = /*#__PURE__*/function (_Layout8) {\n  _inherits(NearInt64, _Layout8);\n\n  var _super11 = _createSuper(NearInt64);\n\n  function NearInt64(property) {\n    _classCallCheck(this, NearInt64);\n\n    return _super11.call(this, 8, property);\n  }\n  /** @override */\n\n\n  _createClass(NearInt64, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var lo32 = b.readUInt32LE(offset);\n      var hi32 = b.readInt32LE(offset + 4);\n      return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var split = divmodInt64(src);\n      b.writeUInt32LE(split.lo32, offset);\n      b.writeInt32LE(split.hi32, offset + 4);\n      return 8;\n    }\n  }]);\n\n  return NearInt64;\n}(Layout);\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\n\n\nvar NearInt64BE = /*#__PURE__*/function (_Layout9) {\n  _inherits(NearInt64BE, _Layout9);\n\n  var _super12 = _createSuper(NearInt64BE);\n\n  function NearInt64BE(property) {\n    _classCallCheck(this, NearInt64BE);\n\n    return _super12.call(this, 8, property);\n  }\n  /** @override */\n\n\n  _createClass(NearInt64BE, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var hi32 = b.readInt32BE(offset);\n      var lo32 = b.readUInt32BE(offset + 4);\n      return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var split = divmodInt64(src);\n      b.writeInt32BE(split.hi32, offset);\n      b.writeUInt32BE(split.lo32, offset + 4);\n      return 8;\n    }\n  }]);\n\n  return NearInt64BE;\n}(Layout);\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar Float = /*#__PURE__*/function (_Layout10) {\n  _inherits(Float, _Layout10);\n\n  var _super13 = _createSuper(Float);\n\n  function Float(property) {\n    _classCallCheck(this, Float);\n\n    return _super13.call(this, 4, property);\n  }\n  /** @override */\n\n\n  _createClass(Float, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return b.readFloatLE(offset);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      b.writeFloatLE(src, offset);\n      return 4;\n    }\n  }]);\n\n  return Float;\n}(Layout);\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar FloatBE = /*#__PURE__*/function (_Layout11) {\n  _inherits(FloatBE, _Layout11);\n\n  var _super14 = _createSuper(FloatBE);\n\n  function FloatBE(property) {\n    _classCallCheck(this, FloatBE);\n\n    return _super14.call(this, 4, property);\n  }\n  /** @override */\n\n\n  _createClass(FloatBE, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return b.readFloatBE(offset);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      b.writeFloatBE(src, offset);\n      return 4;\n    }\n  }]);\n\n  return FloatBE;\n}(Layout);\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar Double = /*#__PURE__*/function (_Layout12) {\n  _inherits(Double, _Layout12);\n\n  var _super15 = _createSuper(Double);\n\n  function Double(property) {\n    _classCallCheck(this, Double);\n\n    return _super15.call(this, 8, property);\n  }\n  /** @override */\n\n\n  _createClass(Double, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return b.readDoubleLE(offset);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      b.writeDoubleLE(src, offset);\n      return 8;\n    }\n  }]);\n\n  return Double;\n}(Layout);\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar DoubleBE = /*#__PURE__*/function (_Layout13) {\n  _inherits(DoubleBE, _Layout13);\n\n  var _super16 = _createSuper(DoubleBE);\n\n  function DoubleBE(property) {\n    _classCallCheck(this, DoubleBE);\n\n    return _super16.call(this, 8, property);\n  }\n  /** @override */\n\n\n  _createClass(DoubleBE, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return b.readDoubleBE(offset);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      b.writeDoubleBE(src, offset);\n      return 8;\n    }\n  }]);\n\n  return DoubleBE;\n}(Layout);\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar Sequence = /*#__PURE__*/function (_Layout14) {\n  _inherits(Sequence, _Layout14);\n\n  var _super17 = _createSuper(Sequence);\n\n  function Sequence(elementLayout, count, property) {\n    var _this8;\n\n    _classCallCheck(this, Sequence);\n\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n\n    if (!(count instanceof ExternalLayout && count.isCount() || Number.isInteger(count) && 0 <= count)) {\n      throw new TypeError('count must be non-negative integer ' + 'or an unsigned integer ExternalLayout');\n    }\n\n    var span = -1;\n\n    if (!(count instanceof ExternalLayout) && 0 < elementLayout.span) {\n      span = count * elementLayout.span;\n    }\n\n    _this8 = _super17.call(this, span, property);\n    /** The layout for individual elements of the sequence. */\n\n    _this8.elementLayout = elementLayout;\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n\n    _this8.count = count;\n    return _this8;\n  }\n  /** @override */\n\n\n  _createClass(Sequence, [{\n    key: \"getSpan\",\n    value: function getSpan(b, offset) {\n      if (0 <= this.span) {\n        return this.span;\n      }\n\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var span = 0;\n      var count = this.count;\n\n      if (count instanceof ExternalLayout) {\n        count = count.decode(b, offset);\n      }\n\n      if (0 < this.elementLayout.span) {\n        span = count * this.elementLayout.span;\n      } else {\n        var idx = 0;\n\n        while (idx < count) {\n          span += this.elementLayout.getSpan(b, offset + span);\n          ++idx;\n        }\n      }\n\n      return span;\n    }\n    /** @override */\n\n  }, {\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var rv = [];\n      var i = 0;\n      var count = this.count;\n\n      if (count instanceof ExternalLayout) {\n        count = count.decode(b, offset);\n      }\n\n      while (i < count) {\n        rv.push(this.elementLayout.decode(b, offset));\n        offset += this.elementLayout.getSpan(b, offset);\n        i += 1;\n      }\n\n      return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var elo = this.elementLayout;\n      var span = src.reduce(function (span, v) {\n        return span + elo.encode(v, b, offset + span);\n      }, 0);\n\n      if (this.count instanceof ExternalLayout) {\n        this.count.encode(src.length, b, offset);\n      }\n\n      return span;\n    }\n  }]);\n\n  return Sequence;\n}(Layout);\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\n\n\nvar Structure = /*#__PURE__*/function (_Layout15) {\n  _inherits(Structure, _Layout15);\n\n  var _super18 = _createSuper(Structure);\n\n  function Structure(fields, property, decodePrefixes) {\n    var _this9;\n\n    _classCallCheck(this, Structure);\n\n    if (!(Array.isArray(fields) && fields.reduce(function (acc, v) {\n      return acc && v instanceof Layout;\n    }, true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n\n    if ('boolean' === typeof property && undefined === decodePrefixes) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n    /* Verify absence of unnamed variable-length fields. */\n\n\n    var _iterator = _createForOfIteratorHelper(fields),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var fd = _step.value;\n\n        if (0 > fd.span && undefined === fd.property) {\n          throw new Error('fields cannot contain unnamed variable-length layout');\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    var span = -1;\n\n    try {\n      span = fields.reduce(function (span, fd) {\n        return span + fd.getSpan();\n      }, 0);\n    } catch (e) {}\n\n    _this9 = _super18.call(this, span, property);\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n\n    _this9.fields = fields;\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n\n    _this9.decodePrefixes = !!decodePrefixes;\n    return _this9;\n  }\n  /** @override */\n\n\n  _createClass(Structure, [{\n    key: \"getSpan\",\n    value: function getSpan(b, offset) {\n      if (0 <= this.span) {\n        return this.span;\n      }\n\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var span = 0;\n\n      try {\n        span = this.fields.reduce(function (span, fd) {\n          var fsp = fd.getSpan(b, offset);\n          offset += fsp;\n          return span + fsp;\n        }, 0);\n      } catch (e) {\n        throw new RangeError('indeterminate span');\n      }\n\n      return span;\n    }\n    /** @override */\n\n  }, {\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var dest = this.makeDestinationObject();\n\n      var _iterator2 = _createForOfIteratorHelper(this.fields),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var fd = _step2.value;\n\n          if (undefined !== fd.property) {\n            dest[fd.property] = fd.decode(b, offset);\n          }\n\n          offset += fd.getSpan(b, offset);\n\n          if (this.decodePrefixes && b.length === offset) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var firstOffset = offset;\n      var lastOffset = 0;\n      var lastWrote = 0;\n\n      var _iterator3 = _createForOfIteratorHelper(this.fields),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var fd = _step3.value;\n          var span = fd.span;\n          lastWrote = 0 < span ? span : 0;\n\n          if (undefined !== fd.property) {\n            var fv = src[fd.property];\n\n            if (undefined !== fv) {\n              lastWrote = fd.encode(fv, b, offset);\n\n              if (0 > span) {\n                /* Read the as-encoded span, which is not necessarily the\n                 * same as what we wrote. */\n                span = fd.getSpan(b, offset);\n              }\n            }\n          }\n\n          lastOffset = offset;\n          offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return lastOffset + lastWrote - firstOffset;\n    }\n    /** @override */\n\n  }, {\n    key: \"fromArray\",\n    value: function fromArray(values) {\n      var dest = this.makeDestinationObject();\n\n      var _iterator4 = _createForOfIteratorHelper(this.fields),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var fd = _step4.value;\n\n          if (undefined !== fd.property && 0 < values.length) {\n            dest[fd.property] = values.shift();\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n\n  }, {\n    key: \"layoutFor\",\n    value: function layoutFor(property) {\n      if ('string' !== typeof property) {\n        throw new TypeError('property must be string');\n      }\n\n      var _iterator5 = _createForOfIteratorHelper(this.fields),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var fd = _step5.value;\n\n          if (fd.property === property) {\n            return fd;\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n\n  }, {\n    key: \"offsetOf\",\n    value: function offsetOf(property) {\n      if ('string' !== typeof property) {\n        throw new TypeError('property must be string');\n      }\n\n      var offset = 0;\n\n      var _iterator6 = _createForOfIteratorHelper(this.fields),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var fd = _step6.value;\n\n          if (fd.property === property) {\n            return offset;\n          }\n\n          if (0 > fd.span) {\n            offset = -1;\n          } else if (0 <= offset) {\n            offset += fd.span;\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n  }]);\n\n  return Structure;\n}(Layout);\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\n\n\nvar UnionDiscriminator = /*#__PURE__*/function () {\n  function UnionDiscriminator(property) {\n    _classCallCheck(this, UnionDiscriminator);\n\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n\n\n  _createClass(UnionDiscriminator, [{\n    key: \"decode\",\n    value: function decode() {\n      throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n\n  }, {\n    key: \"encode\",\n    value: function encode() {\n      throw new Error('UnionDiscriminator is abstract');\n    }\n  }]);\n\n  return UnionDiscriminator;\n}();\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\n\n\nvar UnionLayoutDiscriminator = /*#__PURE__*/function (_UnionDiscriminator) {\n  _inherits(UnionLayoutDiscriminator, _UnionDiscriminator);\n\n  var _super19 = _createSuper(UnionLayoutDiscriminator);\n\n  function UnionLayoutDiscriminator(layout, property) {\n    var _this10;\n\n    _classCallCheck(this, UnionLayoutDiscriminator);\n\n    if (!(layout instanceof ExternalLayout && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    _this10 = _super19.call(this, property || layout.property || 'variant');\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n\n    _this10.layout = layout;\n    return _this10;\n  }\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n\n\n  _createClass(UnionLayoutDiscriminator, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      return this.layout.encode(src, b, offset);\n    }\n  }]);\n\n  return UnionLayoutDiscriminator;\n}(UnionDiscriminator);\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar Union = /*#__PURE__*/function (_Layout16) {\n  _inherits(Union, _Layout16);\n\n  var _super20 = _createSuper(Union);\n\n  function Union(discr, defaultLayout, property) {\n    var _this11;\n\n    _classCallCheck(this, Union);\n\n    var upv = discr instanceof UInt || discr instanceof UIntBE;\n\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if (discr instanceof ExternalLayout && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator ' + 'or an unsigned integer layout');\n    }\n\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n\n    if (!(null === defaultLayout || defaultLayout instanceof Layout)) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n\n\n    var span = -1;\n\n    if (defaultLayout) {\n      span = defaultLayout.span;\n\n      if (0 <= span && upv) {\n        span += discr.layout.span;\n      }\n    }\n\n    _this11 = _super20.call(this, span, property);\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n\n    _this11.discriminator = discr;\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n\n    _this11.usesPrefixDiscriminator = upv;\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n\n    _this11.defaultLayout = defaultLayout;\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n\n    _this11.registry = {};\n    /* Private variable used when invoking getSourceVariant */\n\n    var boundGetSourceVariant = _this11.defaultGetSourceVariant.bind(_assertThisInitialized(_this11));\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n\n\n    _this11.getSourceVariant = function (src) {\n      return boundGetSourceVariant(src);\n    };\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n\n\n    _this11.configGetSourceVariant = function (gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n\n    return _this11;\n  }\n  /** @override */\n\n\n  _createClass(Union, [{\n    key: \"getSpan\",\n    value: function getSpan(b, offset) {\n      if (0 <= this.span) {\n        return this.span;\n      }\n\n      if (undefined === offset) {\n        offset = 0;\n      }\n      /* Default layouts always have non-negative span, so we don't have\n       * one and we have to recognize the variant which will in turn\n       * determine the span. */\n\n\n      var vlo = this.getVariant(b, offset);\n\n      if (!vlo) {\n        throw new Error('unable to determine span for unrecognized variant');\n      }\n\n      return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisified rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n\n  }, {\n    key: \"defaultGetSourceVariant\",\n    value: function defaultGetSourceVariant(src) {\n      if (src.hasOwnProperty(this.discriminator.property)) {\n        if (this.defaultLayout && src.hasOwnProperty(this.defaultLayout.property)) {\n          return undefined;\n        }\n\n        var vlo = this.registry[src[this.discriminator.property]];\n\n        if (vlo && (!vlo.layout || src.hasOwnProperty(vlo.property))) {\n          return vlo;\n        }\n      } else {\n        for (var tag in this.registry) {\n          var _vlo = this.registry[tag];\n\n          if (src.hasOwnProperty(_vlo.property)) {\n            return _vlo;\n          }\n        }\n      }\n\n      throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n\n  }, {\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var dest;\n      var dlo = this.discriminator;\n      var discr = dlo.decode(b, offset);\n      var clo = this.registry[discr];\n\n      if (undefined === clo) {\n        var contentOffset = 0;\n        clo = this.defaultLayout;\n\n        if (this.usesPrefixDiscriminator) {\n          contentOffset = dlo.layout.span;\n        }\n\n        dest = this.makeDestinationObject();\n        dest[dlo.property] = discr;\n        dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n      } else {\n        dest = clo.decode(b, offset);\n      }\n\n      return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var vlo = this.getSourceVariant(src);\n\n      if (undefined === vlo) {\n        var dlo = this.discriminator;\n        var clo = this.defaultLayout;\n        var contentOffset = 0;\n\n        if (this.usesPrefixDiscriminator) {\n          contentOffset = dlo.layout.span;\n        }\n\n        dlo.encode(src[dlo.property], b, offset);\n        return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n      }\n\n      return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n\n  }, {\n    key: \"addVariant\",\n    value: function addVariant(variant, layout, property) {\n      var rv = new VariantLayout(this, variant, layout, property);\n      this.registry[variant] = rv;\n      return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Buffer)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Buffer}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n\n  }, {\n    key: \"getVariant\",\n    value: function getVariant(vb, offset) {\n      var variant = vb;\n\n      if (buffer.Buffer.isBuffer(vb)) {\n        if (undefined === offset) {\n          offset = 0;\n        }\n\n        variant = this.discriminator.decode(vb, offset);\n      }\n\n      return this.registry[variant];\n    }\n  }]);\n\n  return Union;\n}(Layout);\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\n\n\nvar VariantLayout = /*#__PURE__*/function (_Layout17) {\n  _inherits(VariantLayout, _Layout17);\n\n  var _super21 = _createSuper(VariantLayout);\n\n  function VariantLayout(union, variant, layout, property) {\n    var _this12;\n\n    _classCallCheck(this, VariantLayout);\n\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n\n    if (!Number.isInteger(variant) || 0 > variant) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n\n    if ('string' === typeof layout && undefined === property) {\n      property = layout;\n      layout = null;\n    }\n\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n\n      if (null !== union.defaultLayout && 0 <= layout.span && layout.span > union.defaultLayout.span) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n\n    var span = union.span;\n\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n\n      if (0 <= span && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n\n    _this12 = _super21.call(this, span, property);\n    /** The {@link Union} to which this variant belongs. */\n\n    _this12.union = union;\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n\n    _this12.variant = variant;\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n\n    _this12.layout = layout || null;\n    return _this12;\n  }\n  /** @override */\n\n\n  _createClass(VariantLayout, [{\n    key: \"getSpan\",\n    value: function getSpan(b, offset) {\n      if (0 <= this.span) {\n        /* Will be equal to the containing union span if that is not\n         * variable. */\n        return this.span;\n      }\n\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var contentOffset = 0;\n\n      if (this.union.usesPrefixDiscriminator) {\n        contentOffset = this.union.discriminator.layout.span;\n      }\n      /* Span is defined solely by the variant (and prefix discriminator) */\n\n\n      return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n    }\n    /** @override */\n\n  }, {\n    key: \"decode\",\n    value: function decode(b, offset) {\n      var dest = this.makeDestinationObject();\n\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      if (this !== this.union.getVariant(b, offset)) {\n        throw new Error('variant mismatch');\n      }\n\n      var contentOffset = 0;\n\n      if (this.union.usesPrefixDiscriminator) {\n        contentOffset = this.union.discriminator.layout.span;\n      }\n\n      if (this.layout) {\n        dest[this.property] = this.layout.decode(b, offset + contentOffset);\n      } else if (this.property) {\n        dest[this.property] = true;\n      } else if (this.union.usesPrefixDiscriminator) {\n        dest[this.union.discriminator.property] = this.variant;\n      }\n\n      return dest;\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var contentOffset = 0;\n\n      if (this.union.usesPrefixDiscriminator) {\n        contentOffset = this.union.discriminator.layout.span;\n      }\n\n      if (this.layout && !src.hasOwnProperty(this.property)) {\n        throw new TypeError('variant lacks property ' + this.property);\n      }\n\n      this.union.discriminator.encode(this.variant, b, offset);\n      var span = contentOffset;\n\n      if (this.layout) {\n        this.layout.encode(src[this.property], b, offset + contentOffset);\n        span += this.layout.getSpan(b, offset + contentOffset);\n\n        if (0 <= this.union.span && span > this.union.span) {\n          throw new Error('encoded variant overruns containing union');\n        }\n      }\n\n      return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n\n  }, {\n    key: \"fromArray\",\n    value: function fromArray(values) {\n      if (this.layout) {\n        return this.layout.fromArray(values);\n      }\n    }\n  }]);\n\n  return VariantLayout;\n}(Layout);\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\n\n\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n\n  return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar BitStructure = /*#__PURE__*/function (_Layout18) {\n  _inherits(BitStructure, _Layout18);\n\n  var _super22 = _createSuper(BitStructure);\n\n  function BitStructure(word, msb, property) {\n    var _this13;\n\n    _classCallCheck(this, BitStructure);\n\n    if (!(word instanceof UInt || word instanceof UIntBE)) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n\n    if ('string' === typeof msb && undefined === property) {\n      property = msb;\n      msb = undefined;\n    }\n\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n\n    _this13 = _super22.call(this, word.span, property);\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n\n    _this13.word = word;\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n\n    _this13.msb = !!msb;\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n\n    _this13.fields = [];\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n\n    var value = 0;\n\n    _this13._packedSetValue = function (v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n\n    _this13._packedGetValue = function () {\n      return value;\n    };\n\n    return _this13;\n  }\n  /** @override */\n\n\n  _createClass(BitStructure, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      var dest = this.makeDestinationObject();\n\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var value = this.word.decode(b, offset);\n\n      this._packedSetValue(value);\n\n      var _iterator7 = _createForOfIteratorHelper(this.fields),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var fd = _step7.value;\n\n          if (undefined !== fd.property) {\n            dest[fd.property] = fd.decode(value);\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var value = this.word.decode(b, offset);\n\n      this._packedSetValue(value);\n\n      var _iterator8 = _createForOfIteratorHelper(this.fields),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var fd = _step8.value;\n\n          if (undefined !== fd.property) {\n            var fv = src[fd.property];\n\n            if (undefined !== fv) {\n              fd.encode(fv);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n\n      return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n\n  }, {\n    key: \"addField\",\n    value: function addField(bits, property) {\n      var bf = new BitField(this, bits, property);\n      this.fields.push(bf);\n      return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n\n  }, {\n    key: \"addBoolean\",\n    value: function addBoolean(property) {\n      // This is my Boolean, not the Javascript one.\n      // eslint-disable-next-line no-new-wrappers\n      var bf = new Boolean(this, property);\n      this.fields.push(bf);\n      return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n\n  }, {\n    key: \"fieldFor\",\n    value: function fieldFor(property) {\n      if ('string' !== typeof property) {\n        throw new TypeError('property must be string');\n      }\n\n      var _iterator9 = _createForOfIteratorHelper(this.fields),\n          _step9;\n\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var fd = _step9.value;\n\n          if (fd.property === property) {\n            return fd;\n          }\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n    }\n  }]);\n\n  return BitStructure;\n}(Layout);\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\n\n\nvar BitField = /*#__PURE__*/function () {\n  function BitField(container, bits, property) {\n    _classCallCheck(this, BitField);\n\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n\n    if (!Number.isInteger(bits) || 0 >= bits) {\n      throw new TypeError('bits must be positive integer');\n    }\n\n    var totalBits = 8 * container.span;\n    var usedBits = container.fields.reduce(function (sum, fd) {\n      return sum + fd.bits;\n    }, 0);\n\n    if (bits + usedBits > totalBits) {\n      throw new Error('bits too long for span remainder (' + (totalBits - usedBits) + ' of ' + totalBits + ' remain)');\n    }\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n\n\n    this.container = container;\n    /** The span of this value in bits. */\n\n    this.bits = bits;\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n\n    this.valueMask = (1 << bits) - 1;\n\n    if (32 === bits) {\n      // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n\n\n    this.start = usedBits;\n\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n\n\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n\n    this.property = property;\n  }\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n\n\n  _createClass(BitField, [{\n    key: \"decode\",\n    value: function decode() {\n      var word = this.container._packedGetValue();\n\n      var wordValue = fixBitwiseResult(word & this.wordMask);\n      var value = wordValue >>> this.start;\n      return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n\n  }, {\n    key: \"encode\",\n    value: function encode(value) {\n      if (!Number.isInteger(value) || value !== fixBitwiseResult(value & this.valueMask)) {\n        throw new TypeError(nameWithProperty('BitField.encode', this) + ' value must be integer not exceeding ' + this.valueMask);\n      }\n\n      var word = this.container._packedGetValue();\n\n      var wordValue = fixBitwiseResult(value << this.start);\n\n      this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask) | wordValue);\n    }\n  }]);\n\n  return BitField;\n}();\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n\n/* eslint-disable no-extend-native */\n\n\nvar Boolean = /*#__PURE__*/function (_BitField) {\n  _inherits(Boolean, _BitField);\n\n  var _super23 = _createSuper(Boolean);\n\n  function Boolean(container, property) {\n    _classCallCheck(this, Boolean);\n\n    return _super23.call(this, container, 1, property);\n  }\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n\n\n  _createClass(Boolean, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      return !!BitField.prototype.decode.call(this, b, offset);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(value) {\n      if ('boolean' === typeof value) {\n        // BitField requires integer values\n        value = +value;\n      }\n\n      return BitField.prototype.encode.call(this, value);\n    }\n  }]);\n\n  return Boolean;\n}(BitField);\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar Blob = /*#__PURE__*/function (_Layout19) {\n  _inherits(Blob, _Layout19);\n\n  var _super24 = _createSuper(Blob);\n\n  function Blob(length, property) {\n    var _this14;\n\n    _classCallCheck(this, Blob);\n\n    if (!(length instanceof ExternalLayout && length.isCount() || Number.isInteger(length) && 0 <= length)) {\n      throw new TypeError('length must be positive integer ' + 'or an unsigned integer ExternalLayout');\n    }\n\n    var span = -1;\n\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n\n    _this14 = _super24.call(this, span, property);\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n\n    _this14.length = length;\n    return _this14;\n  }\n  /** @override */\n\n\n  _createClass(Blob, [{\n    key: \"getSpan\",\n    value: function getSpan(b, offset) {\n      var span = this.span;\n\n      if (0 > span) {\n        span = this.length.decode(b, offset);\n      }\n\n      return span;\n    }\n    /** @override */\n\n  }, {\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var span = this.span;\n\n      if (0 > span) {\n        span = this.length.decode(b, offset);\n      }\n\n      return b.slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      var span = this.length;\n\n      if (this.length instanceof ExternalLayout) {\n        span = src.length;\n      }\n\n      if (!(buffer.Buffer.isBuffer(src) && span === src.length)) {\n        throw new TypeError(nameWithProperty('Blob.encode', this) + ' requires (length ' + span + ') Buffer as src');\n      }\n\n      if (offset + span > b.length) {\n        throw new RangeError('encoding overruns Buffer');\n      }\n\n      b.write(src.toString('hex'), offset, span, 'hex');\n\n      if (this.length instanceof ExternalLayout) {\n        this.length.encode(span, b, offset);\n      }\n\n      return span;\n    }\n  }]);\n\n  return Blob;\n}(Layout);\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar CString = /*#__PURE__*/function (_Layout20) {\n  _inherits(CString, _Layout20);\n\n  var _super25 = _createSuper(CString);\n\n  function CString(property) {\n    _classCallCheck(this, CString);\n\n    return _super25.call(this, -1, property);\n  }\n  /** @override */\n\n\n  _createClass(CString, [{\n    key: \"getSpan\",\n    value: function getSpan(b, offset) {\n      if (!buffer.Buffer.isBuffer(b)) {\n        throw new TypeError('b must be a Buffer');\n      }\n\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var idx = offset;\n\n      while (idx < b.length && 0 !== b[idx]) {\n        idx += 1;\n      }\n\n      return 1 + idx - offset;\n    }\n    /** @override */\n\n  }, {\n    key: \"decode\",\n    value: function decode(b, offset, dest) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var span = this.getSpan(b, offset);\n      return b.slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      /* Must force this to a string, lest it be a number and the\n       * \"utf8-encoding\" below actually allocate a buffer of length\n       * src */\n\n\n      if ('string' !== typeof src) {\n        src = src.toString();\n      }\n\n      var srcb = new buffer.Buffer(src, 'utf8');\n      var span = srcb.length;\n\n      if (offset + span > b.length) {\n        throw new RangeError('encoding overruns Buffer');\n      }\n\n      srcb.copy(b, offset);\n      b[offset + span] = 0;\n      return span + 1;\n    }\n  }]);\n\n  return CString;\n}(Layout);\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar UTF8 = /*#__PURE__*/function (_Layout21) {\n  _inherits(UTF8, _Layout21);\n\n  var _super26 = _createSuper(UTF8);\n\n  function UTF8(maxSpan, property) {\n    var _this15;\n\n    _classCallCheck(this, UTF8);\n\n    if ('string' === typeof maxSpan && undefined === property) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    _this15 = _super26.call(this, -1, property);\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n\n    _this15.maxSpan = maxSpan;\n    return _this15;\n  }\n  /** @override */\n\n\n  _createClass(UTF8, [{\n    key: \"getSpan\",\n    value: function getSpan(b, offset) {\n      if (!buffer.Buffer.isBuffer(b)) {\n        throw new TypeError('b must be a Buffer');\n      }\n\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return b.length - offset;\n    }\n    /** @override */\n\n  }, {\n    key: \"decode\",\n    value: function decode(b, offset, dest) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var span = this.getSpan(b, offset);\n\n      if (0 <= this.maxSpan && this.maxSpan < span) {\n        throw new RangeError('text length exceeds maxSpan');\n      }\n\n      return b.slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      /* Must force this to a string, lest it be a number and the\n       * \"utf8-encoding\" below actually allocate a buffer of length\n       * src */\n\n\n      if ('string' !== typeof src) {\n        src = src.toString();\n      }\n\n      var srcb = new buffer.Buffer(src, 'utf8');\n      var span = srcb.length;\n\n      if (0 <= this.maxSpan && this.maxSpan < span) {\n        throw new RangeError('text length exceeds maxSpan');\n      }\n\n      if (offset + span > b.length) {\n        throw new RangeError('encoding overruns Buffer');\n      }\n\n      srcb.copy(b, offset);\n      return span;\n    }\n  }]);\n\n  return UTF8;\n}(Layout);\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar Constant = /*#__PURE__*/function (_Layout22) {\n  _inherits(Constant, _Layout22);\n\n  var _super27 = _createSuper(Constant);\n\n  function Constant(value, property) {\n    var _this16;\n\n    _classCallCheck(this, Constant);\n\n    _this16 = _super27.call(this, 0, property);\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n\n    _this16.value = value;\n    return _this16;\n  }\n  /** @override */\n\n\n  _createClass(Constant, [{\n    key: \"decode\",\n    value: function decode(b, offset, dest) {\n      return this.value;\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      /* Constants take no space */\n      return 0;\n    }\n  }]);\n\n  return Constant;\n}(Layout);\n\nLayout$1.ExternalLayout = ExternalLayout;\nLayout$1.GreedyCount = GreedyCount;\nLayout$1.OffsetLayout = OffsetLayout;\nLayout$1.UInt = UInt;\nLayout$1.UIntBE = UIntBE;\nLayout$1.Int = Int;\nLayout$1.IntBE = IntBE;\nLayout$1.Float = Float;\nLayout$1.FloatBE = FloatBE;\nLayout$1.Double = Double;\nLayout$1.DoubleBE = DoubleBE;\nLayout$1.Sequence = Sequence;\nLayout$1.Structure = Structure;\nLayout$1.UnionDiscriminator = UnionDiscriminator;\nLayout$1.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nLayout$1.Union = Union;\nLayout$1.VariantLayout = VariantLayout;\nLayout$1.BitStructure = BitStructure;\nLayout$1.BitField = BitField;\nLayout$1.Boolean = Boolean;\nLayout$1.Blob = Blob;\nLayout$1.CString = CString;\nLayout$1.UTF8 = UTF8;\nLayout$1.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\n\nLayout$1.greedy = function (elementSpan, property) {\n  return new GreedyCount(elementSpan, property);\n};\n/** Factory for {@link OffsetLayout}. */\n\n\nLayout$1.offset = function (layout, offset, property) {\n  return new OffsetLayout(layout, offset, property);\n};\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\n\n\nvar u8 = Layout$1.u8 = function (property) {\n  return new UInt(1, property);\n};\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\n\n\nLayout$1.u16 = function (property) {\n  return new UInt(2, property);\n};\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\n\n\nLayout$1.u24 = function (property) {\n  return new UInt(3, property);\n};\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\n\n\nvar u32 = Layout$1.u32 = function (property) {\n  return new UInt(4, property);\n};\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\n\n\nLayout$1.u40 = function (property) {\n  return new UInt(5, property);\n};\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\n\n\nLayout$1.u48 = function (property) {\n  return new UInt(6, property);\n};\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\n\n\nLayout$1.nu64 = function (property) {\n  return new NearUInt64(property);\n};\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\n\n\nLayout$1.u16be = function (property) {\n  return new UIntBE(2, property);\n};\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\n\n\nLayout$1.u24be = function (property) {\n  return new UIntBE(3, property);\n};\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\n\n\nLayout$1.u32be = function (property) {\n  return new UIntBE(4, property);\n};\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\n\n\nLayout$1.u40be = function (property) {\n  return new UIntBE(5, property);\n};\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\n\n\nLayout$1.u48be = function (property) {\n  return new UIntBE(6, property);\n};\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\n\n\nLayout$1.nu64be = function (property) {\n  return new NearUInt64BE(property);\n};\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\n\n\nLayout$1.s8 = function (property) {\n  return new Int(1, property);\n};\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\n\n\nLayout$1.s16 = function (property) {\n  return new Int(2, property);\n};\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\n\n\nLayout$1.s24 = function (property) {\n  return new Int(3, property);\n};\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\n\n\nLayout$1.s32 = function (property) {\n  return new Int(4, property);\n};\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\n\n\nLayout$1.s40 = function (property) {\n  return new Int(5, property);\n};\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\n\n\nLayout$1.s48 = function (property) {\n  return new Int(6, property);\n};\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\n\n\nLayout$1.ns64 = function (property) {\n  return new NearInt64(property);\n};\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\n\n\nLayout$1.s16be = function (property) {\n  return new IntBE(2, property);\n};\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\n\n\nLayout$1.s24be = function (property) {\n  return new IntBE(3, property);\n};\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\n\n\nLayout$1.s32be = function (property) {\n  return new IntBE(4, property);\n};\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\n\n\nLayout$1.s40be = function (property) {\n  return new IntBE(5, property);\n};\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\n\n\nLayout$1.s48be = function (property) {\n  return new IntBE(6, property);\n};\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\n\n\nLayout$1.ns64be = function (property) {\n  return new NearInt64BE(property);\n};\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\n\n\nLayout$1.f32 = function (property) {\n  return new Float(property);\n};\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\n\n\nLayout$1.f32be = function (property) {\n  return new FloatBE(property);\n};\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\n\n\nLayout$1.f64 = function (property) {\n  return new Double(property);\n};\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\n\n\nLayout$1.f64be = function (property) {\n  return new DoubleBE(property);\n};\n/** Factory for {@link Structure} values. */\n\n\nvar struct = Layout$1.struct = function (fields, property, decodePrefixes) {\n  return new Structure(fields, property, decodePrefixes);\n};\n/** Factory for {@link BitStructure} values. */\n\n\nLayout$1.bits = function (word, msb, property) {\n  return new BitStructure(word, msb, property);\n};\n/** Factory for {@link Sequence} values. */\n\n\nLayout$1.seq = function (elementLayout, count, property) {\n  return new Sequence(elementLayout, count, property);\n};\n/** Factory for {@link Union} values. */\n\n\nLayout$1.union = function (discr, defaultLayout, property) {\n  return new Union(discr, defaultLayout, property);\n};\n/** Factory for {@link UnionLayoutDiscriminator} values. */\n\n\nLayout$1.unionLayoutDiscriminator = function (layout, property) {\n  return new UnionLayoutDiscriminator(layout, property);\n};\n/** Factory for {@link Blob} values. */\n\n\nvar blob = Layout$1.blob = function (length, property) {\n  return new Blob(length, property);\n};\n/** Factory for {@link CString} values. */\n\n\nLayout$1.cstr = function (property) {\n  return new CString(property);\n};\n/** Factory for {@link UTF8} values. */\n\n\nLayout$1.utf8 = function (maxSpan, property) {\n  return new UTF8(maxSpan, property);\n};\n/** Factory for {@link Constant} values. */\n\n\nLayout$1.const = function (value, property) {\n  return new Constant(value, property);\n}; //      \n\n/**\n * Layout for a public key\n */\n\n\nvar publicKey = function publicKey() {\n  var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'publicKey';\n  return blob(32, property);\n};\n/**\n * Layout for a 64bit unsigned value\n */\n\n\nvar uint64 = function uint64() {\n  var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'uint64';\n  return blob(8, property);\n}; //      \n\n\nfunction sendAndConfirmTransaction(title, connection, transaction) {\n  for (var _len4 = arguments.length, signers = new Array(_len4 > 3 ? _len4 - 3 : 0), _key = 3; _key < _len4; _key++) {\n    signers[_key - 3] = arguments[_key];\n  }\n\n  return sendAndConfirmTransaction$1(connection, transaction, signers, {\n    skipPreflight: false\n  });\n}\n\nvar TOKEN_PROGRAM_ID = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\nvar ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\nvar FAILED_TO_FIND_ACCOUNT = 'Failed to find account';\nvar INVALID_ACCOUNT_OWNER = 'Invalid account owner';\n/**\n * Unfortunately, BufferLayout.encode uses an `instanceof` check for `Buffer`\n * which fails when using `publicKey.toBuffer()` directly because the bundled `Buffer`\n * class in `@solana/web3.js` is different from the bundled `Buffer` class in this package\n */\n\nfunction pubkeyToBuffer(publicKey) {\n  return buffer.Buffer.from(publicKey.toBuffer());\n}\n/**\n * 64-bit value\n */\n\n\nvar u64 = /*#__PURE__*/function (_BN) {\n  _inherits(u64, _BN);\n\n  var _super28 = _createSuper(u64);\n\n  function u64() {\n    _classCallCheck(this, u64);\n\n    return _super28.apply(this, arguments);\n  }\n\n  _createClass(u64, [{\n    key: \"toBuffer\",\n    value:\n    /**\n     * Convert to Buffer representation\n     */\n    function toBuffer() {\n      var a = _get(_getPrototypeOf(u64.prototype), \"toArray\", this).call(this).reverse();\n\n      var b = buffer.Buffer.from(a);\n\n      if (b.length === 8) {\n        return b;\n      }\n\n      assert(b.length < 8, 'u64 too large');\n      var zeroPad = buffer.Buffer.alloc(8);\n      b.copy(zeroPad);\n      return zeroPad;\n    }\n    /**\n     * Construct a u64 from Buffer representation\n     */\n\n  }], [{\n    key: \"fromBuffer\",\n    value: function fromBuffer(buffer) {\n      assert(buffer.length === 8, \"Invalid buffer length: \".concat(buffer.length));\n      return new u64(_toConsumableArray(buffer).reverse().map(function (i) {\n        return \"00\".concat(i.toString(16)).slice(-2);\n      }).join(''), 16);\n    }\n  }]);\n\n  return u64;\n}(BN);\n\nfunction isAccount(accountOrPublicKey) {\n  return 'publicKey' in accountOrPublicKey;\n}\n\nvar AuthorityTypeCodes = {\n  MintTokens: 0,\n  FreezeAccount: 1,\n  AccountOwner: 2,\n  CloseAccount: 3\n}; // The address of the special mint for wrapped native token.\n\nvar NATIVE_MINT = new PublicKey('So11111111111111111111111111111111111111112');\n/**\n * Information about the mint\n */\n\nvar MintLayout = struct([u32('mintAuthorityOption'), publicKey('mintAuthority'), uint64('supply'), u8('decimals'), u8('isInitialized'), u32('freezeAuthorityOption'), publicKey('freezeAuthority')]);\n/**\n * Information about an account\n */\n\n/**\n * @private\n */\n\nvar AccountLayout = struct([publicKey('mint'), publicKey('owner'), uint64('amount'), u32('delegateOption'), publicKey('delegate'), u8('state'), u32('isNativeOption'), uint64('isNative'), uint64('delegatedAmount'), u32('closeAuthorityOption'), publicKey('closeAuthority')]);\n/**\n * Information about an multisig\n */\n\n/**\n * @private\n */\n\nvar MultisigLayout = struct([u8('m'), u8('n'), u8('is_initialized'), publicKey('signer1'), publicKey('signer2'), publicKey('signer3'), publicKey('signer4'), publicKey('signer5'), publicKey('signer6'), publicKey('signer7'), publicKey('signer8'), publicKey('signer9'), publicKey('signer10'), publicKey('signer11')]);\n/**\n * An ERC20-like Token\n */\n\nvar Token = /*#__PURE__*/function () {\n  /**\n   * @private\n   */\n\n  /**\n   * The public key identifying this mint\n   */\n\n  /**\n   * Program Identifier for the Token program\n   */\n\n  /**\n   * Program Identifier for the Associated Token program\n   */\n\n  /**\n   * Fee payer\n   */\n\n  /**\n   * Create a Token object attached to the specific mint\n   *\n   * @param connection The connection to use\n   * @param token Public key of the mint\n   * @param programId token programId\n   * @param payer Payer of fees\n   */\n  function Token(connection, publicKey, programId, payer) {\n    _classCallCheck(this, Token);\n\n    _defineProperty(this, \"connection\", void 0);\n\n    _defineProperty(this, \"publicKey\", void 0);\n\n    _defineProperty(this, \"programId\", void 0);\n\n    _defineProperty(this, \"associatedProgramId\", void 0);\n\n    _defineProperty(this, \"payer\", void 0);\n\n    Object.assign(this, {\n      connection: connection,\n      publicKey: publicKey,\n      programId: programId,\n      payer: payer,\n      // Hard code is ok; Overriding is needed only for tests\n      associatedProgramId: ASSOCIATED_TOKEN_PROGRAM_ID\n    });\n  }\n  /**\n   * Get the minimum balance for the mint to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n\n\n  _createClass(Token, [{\n    key: \"createAccount\",\n    value:\n    /**\n     * Create and initialize a new account.\n     *\n     * This account may then be used as a `transfer()` or `approve()` destination\n     *\n     * @param owner User account that will own the new account\n     * @return Public key of the new empty account\n     */\n    function () {\n      var _createAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(owner) {\n        var balanceNeeded, newAccount, transaction, mintPublicKey;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Token.getMinBalanceRentForExemptAccount(this.connection);\n\n              case 2:\n                balanceNeeded = _context.sent;\n                newAccount = Keypair.generate();\n                transaction = new Transaction();\n                transaction.add(SystemProgram.createAccount({\n                  fromPubkey: this.payer.publicKey,\n                  newAccountPubkey: newAccount.publicKey,\n                  lamports: balanceNeeded,\n                  space: AccountLayout.span,\n                  programId: this.programId\n                }));\n                mintPublicKey = this.publicKey;\n                transaction.add(Token.createInitAccountInstruction(this.programId, mintPublicKey, newAccount.publicKey, owner)); // Send the two instructions\n\n                _context.next = 10;\n                return sendAndConfirmTransaction('createAccount and InitializeAccount', this.connection, transaction, this.payer, newAccount);\n\n              case 10:\n                return _context.abrupt(\"return\", newAccount.publicKey);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function createAccount(_x) {\n        return _createAccount.apply(this, arguments);\n      }\n\n      return createAccount;\n    }()\n    /**\n     * Create and initialize the associated account.\n     *\n     * This account may then be used as a `transfer()` or `approve()` destination\n     *\n     * @param owner User account that will own the new account\n     * @return Public key of the new associated account\n     */\n\n  }, {\n    key: \"createAssociatedTokenAccount\",\n    value: function () {\n      var _createAssociatedTokenAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(owner) {\n        var associatedAddress;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Token.getAssociatedTokenAddress(this.associatedProgramId, this.programId, this.publicKey, owner);\n\n              case 2:\n                associatedAddress = _context2.sent;\n                return _context2.abrupt(\"return\", this.createAssociatedTokenAccountInternal(owner, associatedAddress));\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function createAssociatedTokenAccount(_x2) {\n        return _createAssociatedTokenAccount.apply(this, arguments);\n      }\n\n      return createAssociatedTokenAccount;\n    }()\n  }, {\n    key: \"createAssociatedTokenAccountInternal\",\n    value: function () {\n      var _createAssociatedTokenAccountInternal = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(owner, associatedAddress) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return sendAndConfirmTransaction('CreateAssociatedTokenAccount', this.connection, new Transaction().add(Token.createAssociatedTokenAccountInstruction(this.associatedProgramId, this.programId, this.publicKey, associatedAddress, owner, this.payer.publicKey)), this.payer);\n\n              case 2:\n                return _context3.abrupt(\"return\", associatedAddress);\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function createAssociatedTokenAccountInternal(_x3, _x4) {\n        return _createAssociatedTokenAccountInternal.apply(this, arguments);\n      }\n\n      return createAssociatedTokenAccountInternal;\n    }()\n    /**\n     * Retrieve the associated account or create one if not found.\n     *\n     * This account may then be used as a `transfer()` or `approve()` destination\n     *\n     * @param owner User account that will own the new account\n     * @return The new associated account\n     */\n\n  }, {\n    key: \"getOrCreateAssociatedAccountInfo\",\n    value: function () {\n      var _getOrCreateAssociatedAccountInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(owner) {\n        var associatedAddress;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return Token.getAssociatedTokenAddress(this.associatedProgramId, this.programId, this.publicKey, owner);\n\n              case 2:\n                associatedAddress = _context4.sent;\n                _context4.prev = 3;\n                _context4.next = 6;\n                return this.getAccountInfo(associatedAddress);\n\n              case 6:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 9:\n                _context4.prev = 9;\n                _context4.t0 = _context4[\"catch\"](3);\n\n                if (!(_context4.t0.message === FAILED_TO_FIND_ACCOUNT || _context4.t0.message === INVALID_ACCOUNT_OWNER)) {\n                  _context4.next = 24;\n                  break;\n                }\n\n                _context4.prev = 12;\n                _context4.next = 15;\n                return this.createAssociatedTokenAccountInternal(owner, associatedAddress);\n\n              case 15:\n                _context4.next = 19;\n                break;\n\n              case 17:\n                _context4.prev = 17;\n                _context4.t1 = _context4[\"catch\"](12);\n\n              case 19:\n                _context4.next = 21;\n                return this.getAccountInfo(associatedAddress);\n\n              case 21:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 24:\n                throw _context4.t0;\n\n              case 25:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[3, 9], [12, 17]]);\n      }));\n\n      function getOrCreateAssociatedAccountInfo(_x5) {\n        return _getOrCreateAssociatedAccountInfo.apply(this, arguments);\n      }\n\n      return getOrCreateAssociatedAccountInfo;\n    }()\n    /**\n     * Create and initialize a new account on the special native token mint.\n     *\n     * In order to be wrapped, the account must have a balance of native tokens\n     * when it is initialized with the token program.\n     *\n     * This function sends lamports to the new account before initializing it.\n     *\n     * @param connection A solana web3 connection\n     * @param programId The token program ID\n     * @param owner The owner of the new token account\n     * @param payer The source of the lamports to initialize, and payer of the initialization fees.\n     * @param amount The amount of lamports to wrap\n     * @return {Promise<PublicKey>} The new token account\n     */\n\n  }, {\n    key: \"createMultisig\",\n    value:\n    /**\n     * Create and initialize a new multisig.\n     *\n     * This account may then be used for multisignature verification\n     *\n     * @param m Number of required signatures\n     * @param signers Full set of signers\n     * @return Public key of the new multisig account\n     */\n    function () {\n      var _createMultisig = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(m, signers) {\n        var multisigAccount, balanceNeeded, transaction, keys, dataLayout, data;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                multisigAccount = Keypair.generate(); // Allocate memory for the account\n\n                _context5.next = 3;\n                return Token.getMinBalanceRentForExemptMultisig(this.connection);\n\n              case 3:\n                balanceNeeded = _context5.sent;\n                transaction = new Transaction();\n                transaction.add(SystemProgram.createAccount({\n                  fromPubkey: this.payer.publicKey,\n                  newAccountPubkey: multisigAccount.publicKey,\n                  lamports: balanceNeeded,\n                  space: MultisigLayout.span,\n                  programId: this.programId\n                })); // create the new account\n\n                keys = [{\n                  pubkey: multisigAccount.publicKey,\n                  isSigner: false,\n                  isWritable: true\n                }, {\n                  pubkey: SYSVAR_RENT_PUBKEY,\n                  isSigner: false,\n                  isWritable: false\n                }];\n                signers.forEach(function (signer) {\n                  return keys.push({\n                    pubkey: signer,\n                    isSigner: false,\n                    isWritable: false\n                  });\n                });\n                dataLayout = struct([u8('instruction'), u8('m')]);\n                data = buffer.Buffer.alloc(dataLayout.span);\n                dataLayout.encode({\n                  instruction: 2,\n                  // InitializeMultisig instruction\n                  m: m\n                }, data);\n                transaction.add({\n                  keys: keys,\n                  programId: this.programId,\n                  data: data\n                }); // Send the two instructions\n\n                _context5.next = 14;\n                return sendAndConfirmTransaction('createAccount and InitializeMultisig', this.connection, transaction, this.payer, multisigAccount);\n\n              case 14:\n                return _context5.abrupt(\"return\", multisigAccount.publicKey);\n\n              case 15:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function createMultisig(_x6, _x7) {\n        return _createMultisig.apply(this, arguments);\n      }\n\n      return createMultisig;\n    }()\n    /**\n     * Retrieve mint information\n     */\n\n  }, {\n    key: \"getMintInfo\",\n    value: function () {\n      var _getMintInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var info, data, mintInfo;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.connection.getAccountInfo(this.publicKey);\n\n              case 2:\n                info = _context6.sent;\n\n                if (!(info === null)) {\n                  _context6.next = 5;\n                  break;\n                }\n\n                throw new Error('Failed to find mint account');\n\n              case 5:\n                if (info.owner.equals(this.programId)) {\n                  _context6.next = 7;\n                  break;\n                }\n\n                throw new Error(\"Invalid mint owner: \".concat(JSON.stringify(info.owner)));\n\n              case 7:\n                if (!(info.data.length != MintLayout.span)) {\n                  _context6.next = 9;\n                  break;\n                }\n\n                throw new Error(\"Invalid mint size\");\n\n              case 9:\n                data = buffer.Buffer.from(info.data);\n                mintInfo = MintLayout.decode(data);\n\n                if (mintInfo.mintAuthorityOption === 0) {\n                  mintInfo.mintAuthority = null;\n                } else {\n                  mintInfo.mintAuthority = new PublicKey(mintInfo.mintAuthority);\n                }\n\n                mintInfo.supply = u64.fromBuffer(mintInfo.supply);\n                mintInfo.isInitialized = mintInfo.isInitialized != 0;\n\n                if (mintInfo.freezeAuthorityOption === 0) {\n                  mintInfo.freezeAuthority = null;\n                } else {\n                  mintInfo.freezeAuthority = new PublicKey(mintInfo.freezeAuthority);\n                }\n\n                return _context6.abrupt(\"return\", mintInfo);\n\n              case 16:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getMintInfo() {\n        return _getMintInfo.apply(this, arguments);\n      }\n\n      return getMintInfo;\n    }()\n    /**\n     * Retrieve account information\n     *\n     * @param account Public key of the account\n     */\n\n  }, {\n    key: \"getAccountInfo\",\n    value: function () {\n      var _getAccountInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(account, commitment) {\n        var info, data, accountInfo;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.connection.getAccountInfo(account, commitment);\n\n              case 2:\n                info = _context7.sent;\n\n                if (!(info === null)) {\n                  _context7.next = 5;\n                  break;\n                }\n\n                throw new Error(FAILED_TO_FIND_ACCOUNT);\n\n              case 5:\n                if (info.owner.equals(this.programId)) {\n                  _context7.next = 7;\n                  break;\n                }\n\n                throw new Error(INVALID_ACCOUNT_OWNER);\n\n              case 7:\n                if (!(info.data.length != AccountLayout.span)) {\n                  _context7.next = 9;\n                  break;\n                }\n\n                throw new Error(\"Invalid account size\");\n\n              case 9:\n                data = buffer.Buffer.from(info.data);\n                accountInfo = AccountLayout.decode(data);\n                accountInfo.address = account;\n                accountInfo.mint = new PublicKey(accountInfo.mint);\n                accountInfo.owner = new PublicKey(accountInfo.owner);\n                accountInfo.amount = u64.fromBuffer(accountInfo.amount);\n\n                if (accountInfo.delegateOption === 0) {\n                  accountInfo.delegate = null;\n                  accountInfo.delegatedAmount = new u64();\n                } else {\n                  accountInfo.delegate = new PublicKey(accountInfo.delegate);\n                  accountInfo.delegatedAmount = u64.fromBuffer(accountInfo.delegatedAmount);\n                }\n\n                accountInfo.isInitialized = accountInfo.state !== 0;\n                accountInfo.isFrozen = accountInfo.state === 2;\n\n                if (accountInfo.isNativeOption === 1) {\n                  accountInfo.rentExemptReserve = u64.fromBuffer(accountInfo.isNative);\n                  accountInfo.isNative = true;\n                } else {\n                  accountInfo.rentExemptReserve = null;\n                  accountInfo.isNative = false;\n                }\n\n                if (accountInfo.closeAuthorityOption === 0) {\n                  accountInfo.closeAuthority = null;\n                } else {\n                  accountInfo.closeAuthority = new PublicKey(accountInfo.closeAuthority);\n                }\n\n                if (accountInfo.mint.equals(this.publicKey)) {\n                  _context7.next = 22;\n                  break;\n                }\n\n                throw new Error(\"Invalid account mint: \".concat(JSON.stringify(accountInfo.mint), \" !== \").concat(JSON.stringify(this.publicKey)));\n\n              case 22:\n                return _context7.abrupt(\"return\", accountInfo);\n\n              case 23:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function getAccountInfo(_x8, _x9) {\n        return _getAccountInfo.apply(this, arguments);\n      }\n\n      return getAccountInfo;\n    }()\n    /**\n     * Retrieve Multisig information\n     *\n     * @param multisig Public key of the account\n     */\n\n  }, {\n    key: \"getMultisigInfo\",\n    value: function () {\n      var _getMultisigInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(multisig) {\n        var info, data, multisigInfo;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.connection.getAccountInfo(multisig);\n\n              case 2:\n                info = _context8.sent;\n\n                if (!(info === null)) {\n                  _context8.next = 5;\n                  break;\n                }\n\n                throw new Error('Failed to find multisig');\n\n              case 5:\n                if (info.owner.equals(this.programId)) {\n                  _context8.next = 7;\n                  break;\n                }\n\n                throw new Error(\"Invalid multisig owner\");\n\n              case 7:\n                if (!(info.data.length != MultisigLayout.span)) {\n                  _context8.next = 9;\n                  break;\n                }\n\n                throw new Error(\"Invalid multisig size\");\n\n              case 9:\n                data = buffer.Buffer.from(info.data);\n                multisigInfo = MultisigLayout.decode(data);\n                multisigInfo.signer1 = new PublicKey(multisigInfo.signer1);\n                multisigInfo.signer2 = new PublicKey(multisigInfo.signer2);\n                multisigInfo.signer3 = new PublicKey(multisigInfo.signer3);\n                multisigInfo.signer4 = new PublicKey(multisigInfo.signer4);\n                multisigInfo.signer5 = new PublicKey(multisigInfo.signer5);\n                multisigInfo.signer6 = new PublicKey(multisigInfo.signer6);\n                multisigInfo.signer7 = new PublicKey(multisigInfo.signer7);\n                multisigInfo.signer8 = new PublicKey(multisigInfo.signer8);\n                multisigInfo.signer9 = new PublicKey(multisigInfo.signer9);\n                multisigInfo.signer10 = new PublicKey(multisigInfo.signer10);\n                multisigInfo.signer11 = new PublicKey(multisigInfo.signer11);\n                return _context8.abrupt(\"return\", multisigInfo);\n\n              case 23:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function getMultisigInfo(_x10) {\n        return _getMultisigInfo.apply(this, arguments);\n      }\n\n      return getMultisigInfo;\n    }()\n    /**\n     * Transfer tokens to another account\n     *\n     * @param source Source account\n     * @param destination Destination account\n     * @param owner Owner of the source account\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     * @param amount Number of tokens to transfer\n     */\n\n  }, {\n    key: \"transfer\",\n    value: function () {\n      var _transfer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(source, destination, owner, multiSigners, amount) {\n        var ownerPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                if (isAccount(owner)) {\n                  ownerPublicKey = owner.publicKey;\n                  signers = [owner];\n                } else {\n                  ownerPublicKey = owner;\n                  signers = multiSigners;\n                }\n\n                _context9.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['Transfer', this.connection, new Transaction().add(Token.createTransferInstruction(this.programId, source, destination, ownerPublicKey, multiSigners, amount)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n                return _context9.abrupt(\"return\", _context9.sent);\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function transfer(_x11, _x12, _x13, _x14, _x15) {\n        return _transfer.apply(this, arguments);\n      }\n\n      return transfer;\n    }()\n    /**\n     * Grant a third-party permission to transfer up the specified number of tokens from an account\n     *\n     * @param account Public key of the account\n     * @param delegate Account authorized to perform a transfer tokens from the source account\n     * @param owner Owner of the source account\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     * @param amount Maximum number of tokens the delegate may transfer\n     */\n\n  }, {\n    key: \"approve\",\n    value: function () {\n      var _approve = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(account, delegate, owner, multiSigners, amount) {\n        var ownerPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                if (isAccount(owner)) {\n                  ownerPublicKey = owner.publicKey;\n                  signers = [owner];\n                } else {\n                  ownerPublicKey = owner;\n                  signers = multiSigners;\n                }\n\n                _context10.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['Approve', this.connection, new Transaction().add(Token.createApproveInstruction(this.programId, account, delegate, ownerPublicKey, multiSigners, amount)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function approve(_x16, _x17, _x18, _x19, _x20) {\n        return _approve.apply(this, arguments);\n      }\n\n      return approve;\n    }()\n    /**\n     * Remove approval for the transfer of any remaining tokens\n     *\n     * @param account Public key of the account\n     * @param owner Owner of the source account\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     */\n\n  }, {\n    key: \"revoke\",\n    value: function () {\n      var _revoke = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(account, owner, multiSigners) {\n        var ownerPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                if (isAccount(owner)) {\n                  ownerPublicKey = owner.publicKey;\n                  signers = [owner];\n                } else {\n                  ownerPublicKey = owner;\n                  signers = multiSigners;\n                }\n\n                _context11.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['Revoke', this.connection, new Transaction().add(Token.createRevokeInstruction(this.programId, account, ownerPublicKey, multiSigners)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function revoke(_x21, _x22, _x23) {\n        return _revoke.apply(this, arguments);\n      }\n\n      return revoke;\n    }()\n    /**\n     * Assign a new authority to the account\n     *\n     * @param account Public key of the account\n     * @param newAuthority New authority of the account\n     * @param authorityType Type of authority to set\n     * @param currentAuthority Current authority of the account\n     * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n     */\n\n  }, {\n    key: \"setAuthority\",\n    value: function () {\n      var _setAuthority = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(account, newAuthority, authorityType, currentAuthority, multiSigners) {\n        var currentAuthorityPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                if (isAccount(currentAuthority)) {\n                  currentAuthorityPublicKey = currentAuthority.publicKey;\n                  signers = [currentAuthority];\n                } else {\n                  currentAuthorityPublicKey = currentAuthority;\n                  signers = multiSigners;\n                }\n\n                _context12.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['SetAuthority', this.connection, new Transaction().add(Token.createSetAuthorityInstruction(this.programId, account, newAuthority, authorityType, currentAuthorityPublicKey, multiSigners)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function setAuthority(_x24, _x25, _x26, _x27, _x28) {\n        return _setAuthority.apply(this, arguments);\n      }\n\n      return setAuthority;\n    }()\n    /**\n     * Mint new tokens\n     *\n     * @param dest Public key of the account to mint to\n     * @param authority Minting authority\n     * @param multiSigners Signing accounts if `authority` is a multiSig\n     * @param amount Amount to mint\n     */\n\n  }, {\n    key: \"mintTo\",\n    value: function () {\n      var _mintTo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(dest, authority, multiSigners, amount) {\n        var ownerPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                if (isAccount(authority)) {\n                  ownerPublicKey = authority.publicKey;\n                  signers = [authority];\n                } else {\n                  ownerPublicKey = authority;\n                  signers = multiSigners;\n                }\n\n                _context13.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['MintTo', this.connection, new Transaction().add(Token.createMintToInstruction(this.programId, this.publicKey, dest, ownerPublicKey, multiSigners, amount)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function mintTo(_x29, _x30, _x31, _x32) {\n        return _mintTo.apply(this, arguments);\n      }\n\n      return mintTo;\n    }()\n    /**\n     * Burn tokens\n     *\n     * @param account Account to burn tokens from\n     * @param owner Account owner\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     * @param amount Amount to burn\n     */\n\n  }, {\n    key: \"burn\",\n    value: function () {\n      var _burn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(account, owner, multiSigners, amount) {\n        var ownerPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                if (isAccount(owner)) {\n                  ownerPublicKey = owner.publicKey;\n                  signers = [owner];\n                } else {\n                  ownerPublicKey = owner;\n                  signers = multiSigners;\n                }\n\n                _context14.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['Burn', this.connection, new Transaction().add(Token.createBurnInstruction(this.programId, this.publicKey, account, ownerPublicKey, multiSigners, amount)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function burn(_x33, _x34, _x35, _x36) {\n        return _burn.apply(this, arguments);\n      }\n\n      return burn;\n    }()\n    /**\n     * Close account\n     *\n     * @param account Account to close\n     * @param dest Account to receive the remaining balance of the closed account\n     * @param authority Authority which is allowed to close the account\n     * @param multiSigners Signing accounts if `authority` is a multiSig\n     */\n\n  }, {\n    key: \"closeAccount\",\n    value: function () {\n      var _closeAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(account, dest, authority, multiSigners) {\n        var authorityPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                if (isAccount(authority)) {\n                  authorityPublicKey = authority.publicKey;\n                  signers = [authority];\n                } else {\n                  authorityPublicKey = authority;\n                  signers = multiSigners;\n                }\n\n                _context15.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['CloseAccount', this.connection, new Transaction().add(Token.createCloseAccountInstruction(this.programId, account, dest, authorityPublicKey, multiSigners)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function closeAccount(_x37, _x38, _x39, _x40) {\n        return _closeAccount.apply(this, arguments);\n      }\n\n      return closeAccount;\n    }()\n    /**\n     * Freeze account\n     *\n     * @param account Account to freeze\n     * @param authority The mint freeze authority\n     * @param multiSigners Signing accounts if `authority` is a multiSig\n     */\n\n  }, {\n    key: \"freezeAccount\",\n    value: function () {\n      var _freezeAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(account, authority, multiSigners) {\n        var authorityPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                if (isAccount(authority)) {\n                  authorityPublicKey = authority.publicKey;\n                  signers = [authority];\n                } else {\n                  authorityPublicKey = authority;\n                  signers = multiSigners;\n                }\n\n                _context16.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['FreezeAccount', this.connection, new Transaction().add(Token.createFreezeAccountInstruction(this.programId, account, this.publicKey, authorityPublicKey, multiSigners)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function freezeAccount(_x41, _x42, _x43) {\n        return _freezeAccount.apply(this, arguments);\n      }\n\n      return freezeAccount;\n    }()\n    /**\n     * Thaw account\n     *\n     * @param account Account to thaw\n     * @param authority The mint freeze authority\n     * @param multiSigners Signing accounts if `authority` is a multiSig\n     */\n\n  }, {\n    key: \"thawAccount\",\n    value: function () {\n      var _thawAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17(account, authority, multiSigners) {\n        var authorityPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                if (isAccount(authority)) {\n                  authorityPublicKey = authority.publicKey;\n                  signers = [authority];\n                } else {\n                  authorityPublicKey = authority;\n                  signers = multiSigners;\n                }\n\n                _context17.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['ThawAccount', this.connection, new Transaction().add(Token.createThawAccountInstruction(this.programId, account, this.publicKey, authorityPublicKey, multiSigners)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function thawAccount(_x44, _x45, _x46) {\n        return _thawAccount.apply(this, arguments);\n      }\n\n      return thawAccount;\n    }()\n    /**\n     * Transfer tokens to another account, asserting the token mint and decimals\n     *\n     * @param source Source account\n     * @param destination Destination account\n     * @param owner Owner of the source account\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     * @param amount Number of tokens to transfer\n     * @param decimals Number of decimals in transfer amount\n     */\n\n  }, {\n    key: \"transferChecked\",\n    value: function () {\n      var _transferChecked = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(source, destination, owner, multiSigners, amount, decimals) {\n        var ownerPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                if (isAccount(owner)) {\n                  ownerPublicKey = owner.publicKey;\n                  signers = [owner];\n                } else {\n                  ownerPublicKey = owner;\n                  signers = multiSigners;\n                }\n\n                _context18.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['TransferChecked', this.connection, new Transaction().add(Token.createTransferCheckedInstruction(this.programId, source, this.publicKey, destination, ownerPublicKey, multiSigners, amount, decimals)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n                return _context18.abrupt(\"return\", _context18.sent);\n\n              case 4:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function transferChecked(_x47, _x48, _x49, _x50, _x51, _x52) {\n        return _transferChecked.apply(this, arguments);\n      }\n\n      return transferChecked;\n    }()\n    /**\n     * Grant a third-party permission to transfer up the specified number of tokens from an account,\n     * asserting the token mint and decimals\n     *\n     * @param account Public key of the account\n     * @param delegate Account authorized to perform a transfer tokens from the source account\n     * @param owner Owner of the source account\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     * @param amount Maximum number of tokens the delegate may transfer\n     * @param decimals Number of decimals in approve amount\n     */\n\n  }, {\n    key: \"approveChecked\",\n    value: function () {\n      var _approveChecked = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19(account, delegate, owner, multiSigners, amount, decimals) {\n        var ownerPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                if (isAccount(owner)) {\n                  ownerPublicKey = owner.publicKey;\n                  signers = [owner];\n                } else {\n                  ownerPublicKey = owner;\n                  signers = multiSigners;\n                }\n\n                _context19.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['ApproveChecked', this.connection, new Transaction().add(Token.createApproveCheckedInstruction(this.programId, account, this.publicKey, delegate, ownerPublicKey, multiSigners, amount, decimals)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function approveChecked(_x53, _x54, _x55, _x56, _x57, _x58) {\n        return _approveChecked.apply(this, arguments);\n      }\n\n      return approveChecked;\n    }()\n    /**\n     * Mint new tokens, asserting the token mint and decimals\n     *\n     * @param dest Public key of the account to mint to\n     * @param authority Minting authority\n     * @param multiSigners Signing accounts if `authority` is a multiSig\n     * @param amount Amount to mint\n     * @param decimals Number of decimals in amount to mint\n     */\n\n  }, {\n    key: \"mintToChecked\",\n    value: function () {\n      var _mintToChecked = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20(dest, authority, multiSigners, amount, decimals) {\n        var ownerPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                if (isAccount(authority)) {\n                  ownerPublicKey = authority.publicKey;\n                  signers = [authority];\n                } else {\n                  ownerPublicKey = authority;\n                  signers = multiSigners;\n                }\n\n                _context20.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['MintToChecked', this.connection, new Transaction().add(Token.createMintToCheckedInstruction(this.programId, this.publicKey, dest, ownerPublicKey, multiSigners, amount, decimals)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n\n      function mintToChecked(_x59, _x60, _x61, _x62, _x63) {\n        return _mintToChecked.apply(this, arguments);\n      }\n\n      return mintToChecked;\n    }()\n    /**\n     * Burn tokens, asserting the token mint and decimals\n     *\n     * @param account Account to burn tokens from\n     * @param owner Account owner\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     * @param amount Amount to burn\n     * @param decimals Number of decimals in amount to burn\n     */\n\n  }, {\n    key: \"burnChecked\",\n    value: function () {\n      var _burnChecked = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21(account, owner, multiSigners, amount, decimals) {\n        var ownerPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                if (isAccount(owner)) {\n                  ownerPublicKey = owner.publicKey;\n                  signers = [owner];\n                } else {\n                  ownerPublicKey = owner;\n                  signers = multiSigners;\n                }\n\n                _context21.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['BurnChecked', this.connection, new Transaction().add(Token.createBurnCheckedInstruction(this.programId, this.publicKey, account, ownerPublicKey, multiSigners, amount, decimals)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function burnChecked(_x64, _x65, _x66, _x67, _x68) {\n        return _burnChecked.apply(this, arguments);\n      }\n\n      return burnChecked;\n    }()\n    /**\n     * Sync amount in native SPL token account to underlying lamports\n     *\n     * @param nativeAccount Account to sync\n     */\n\n  }, {\n    key: \"syncNative\",\n    value: function () {\n      var _syncNative = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee22(nativeAccount) {\n        return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                _context22.next = 2;\n                return sendAndConfirmTransaction('SyncNative', this.connection, new Transaction().add(Token.createSyncNativeInstruction(this.programId, nativeAccount)), this.payer);\n\n              case 2:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this);\n      }));\n\n      function syncNative(_x69) {\n        return _syncNative.apply(this, arguments);\n      }\n\n      return syncNative;\n    }()\n    /**\n     * Construct an InitializeMint instruction\n     *\n     * @param programId SPL Token program account\n     * @param mint Token mint account\n     * @param decimals Number of decimals in token account amounts\n     * @param mintAuthority Minting authority\n     * @param freezeAuthority Optional authority that can freeze token accounts\n     */\n\n  }], [{\n    key: \"getMinBalanceRentForExemptMint\",\n    value: function () {\n      var _getMinBalanceRentForExemptMint = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee23(connection) {\n        return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                _context23.next = 2;\n                return connection.getMinimumBalanceForRentExemption(MintLayout.span);\n\n              case 2:\n                return _context23.abrupt(\"return\", _context23.sent);\n\n              case 3:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23);\n      }));\n\n      function getMinBalanceRentForExemptMint(_x70) {\n        return _getMinBalanceRentForExemptMint.apply(this, arguments);\n      }\n\n      return getMinBalanceRentForExemptMint;\n    }()\n    /**\n     * Get the minimum balance for the account to be rent exempt\n     *\n     * @return Number of lamports required\n     */\n\n  }, {\n    key: \"getMinBalanceRentForExemptAccount\",\n    value: function () {\n      var _getMinBalanceRentForExemptAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee24(connection) {\n        return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                _context24.next = 2;\n                return connection.getMinimumBalanceForRentExemption(AccountLayout.span);\n\n              case 2:\n                return _context24.abrupt(\"return\", _context24.sent);\n\n              case 3:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24);\n      }));\n\n      function getMinBalanceRentForExemptAccount(_x71) {\n        return _getMinBalanceRentForExemptAccount.apply(this, arguments);\n      }\n\n      return getMinBalanceRentForExemptAccount;\n    }()\n    /**\n     * Get the minimum balance for the multsig to be rent exempt\n     *\n     * @return Number of lamports required\n     */\n\n  }, {\n    key: \"getMinBalanceRentForExemptMultisig\",\n    value: function () {\n      var _getMinBalanceRentForExemptMultisig = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee25(connection) {\n        return _regeneratorRuntime.wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                _context25.next = 2;\n                return connection.getMinimumBalanceForRentExemption(MultisigLayout.span);\n\n              case 2:\n                return _context25.abrupt(\"return\", _context25.sent);\n\n              case 3:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25);\n      }));\n\n      function getMinBalanceRentForExemptMultisig(_x72) {\n        return _getMinBalanceRentForExemptMultisig.apply(this, arguments);\n      }\n\n      return getMinBalanceRentForExemptMultisig;\n    }()\n    /**\n     * Create and initialize a token.\n     *\n     * @param connection The connection to use\n     * @param payer Fee payer for transaction\n     * @param mintAuthority Account or multisig that will control minting\n     * @param freezeAuthority Optional account or multisig that can freeze token accounts\n     * @param decimals Location of the decimal place\n     * @param programId Optional token programId, uses the system programId by default\n     * @return Token object for the newly minted token\n     */\n\n  }, {\n    key: \"createMint\",\n    value: function () {\n      var _createMint = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee26(connection, payer, mintAuthority, freezeAuthority, decimals, programId) {\n        var mintAccount, token, balanceNeeded, transaction;\n        return _regeneratorRuntime.wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                mintAccount = Keypair.generate();\n                token = new Token(connection, mintAccount.publicKey, programId, payer); // Allocate memory for the account\n\n                _context26.next = 4;\n                return Token.getMinBalanceRentForExemptMint(connection);\n\n              case 4:\n                balanceNeeded = _context26.sent;\n                transaction = new Transaction();\n                transaction.add(SystemProgram.createAccount({\n                  fromPubkey: payer.publicKey,\n                  newAccountPubkey: mintAccount.publicKey,\n                  lamports: balanceNeeded,\n                  space: MintLayout.span,\n                  programId: programId\n                }));\n                transaction.add(Token.createInitMintInstruction(programId, mintAccount.publicKey, decimals, mintAuthority, freezeAuthority)); // Send the two instructions\n\n                _context26.next = 10;\n                return sendAndConfirmTransaction('createAccount and InitializeMint', connection, transaction, payer, mintAccount);\n\n              case 10:\n                return _context26.abrupt(\"return\", token);\n\n              case 11:\n              case \"end\":\n                return _context26.stop();\n            }\n          }\n        }, _callee26);\n      }));\n\n      function createMint(_x73, _x74, _x75, _x76, _x77, _x78) {\n        return _createMint.apply(this, arguments);\n      }\n\n      return createMint;\n    }()\n  }, {\n    key: \"createWrappedNativeAccount\",\n    value: function () {\n      var _createWrappedNativeAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee27(connection, programId, owner, payer, amount) {\n        var balanceNeeded, newAccount, transaction;\n        return _regeneratorRuntime.wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                _context27.next = 2;\n                return Token.getMinBalanceRentForExemptAccount(connection);\n\n              case 2:\n                balanceNeeded = _context27.sent;\n                // Create a new account\n                newAccount = Keypair.generate();\n                transaction = new Transaction();\n                transaction.add(SystemProgram.createAccount({\n                  fromPubkey: payer.publicKey,\n                  newAccountPubkey: newAccount.publicKey,\n                  lamports: balanceNeeded,\n                  space: AccountLayout.span,\n                  programId: programId\n                })); // Send lamports to it (these will be wrapped into native tokens by the token program)\n\n                transaction.add(SystemProgram.transfer({\n                  fromPubkey: payer.publicKey,\n                  toPubkey: newAccount.publicKey,\n                  lamports: amount\n                })); // Assign the new account to the native token mint.\n                // the account will be initialized with a balance equal to the native token balance.\n                // (i.e. amount)\n\n                transaction.add(Token.createInitAccountInstruction(programId, NATIVE_MINT, newAccount.publicKey, owner)); // Send the three instructions\n\n                _context27.next = 10;\n                return sendAndConfirmTransaction('createAccount, transfer, and initializeAccount', connection, transaction, payer, newAccount);\n\n              case 10:\n                return _context27.abrupt(\"return\", newAccount.publicKey);\n\n              case 11:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27);\n      }));\n\n      function createWrappedNativeAccount(_x79, _x80, _x81, _x82, _x83) {\n        return _createWrappedNativeAccount.apply(this, arguments);\n      }\n\n      return createWrappedNativeAccount;\n    }()\n  }, {\n    key: \"createInitMintInstruction\",\n    value: function createInitMintInstruction(programId, mint, decimals, mintAuthority, freezeAuthority) {\n      var keys = [{\n        pubkey: mint,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }];\n      var commandDataLayout = struct([u8('instruction'), u8('decimals'), publicKey('mintAuthority'), u8('option'), publicKey('freezeAuthority')]);\n      var data = buffer.Buffer.alloc(1024);\n      {\n        var encodeLength = commandDataLayout.encode({\n          instruction: 0,\n          // InitializeMint instruction\n          decimals: decimals,\n          mintAuthority: pubkeyToBuffer(mintAuthority),\n          option: freezeAuthority === null ? 0 : 1,\n          freezeAuthority: pubkeyToBuffer(freezeAuthority || new PublicKey(0))\n        }, data);\n        data = data.slice(0, encodeLength);\n      }\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct an InitializeAccount instruction\n     *\n     * @param programId SPL Token program account\n     * @param mint Token mint account\n     * @param account New account\n     * @param owner Owner of the new account\n     */\n\n  }, {\n    key: \"createInitAccountInstruction\",\n    value: function createInitAccountInstruction(programId, mint, account, owner) {\n      var keys = [{\n        pubkey: account,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: mint,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: owner,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }];\n      var dataLayout = struct([u8('instruction')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 1 // InitializeAccount instruction\n\n      }, data);\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct a Transfer instruction\n     *\n     * @param programId SPL Token program account\n     * @param source Source account\n     * @param destination Destination account\n     * @param owner Owner of the source account\n     * @param multiSigners Signing accounts if `authority` is a multiSig\n     * @param amount Number of tokens to transfer\n     */\n\n  }, {\n    key: \"createTransferInstruction\",\n    value: function createTransferInstruction(programId, source, destination, owner, multiSigners, amount) {\n      var dataLayout = struct([u8('instruction'), uint64('amount')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 3,\n        // Transfer instruction\n        amount: new u64(amount).toBuffer()\n      }, data);\n      var keys = [{\n        pubkey: source,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: destination,\n        isSigner: false,\n        isWritable: true\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: owner,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: owner,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct an Approve instruction\n     *\n     * @param programId SPL Token program account\n     * @param account Public key of the account\n     * @param delegate Account authorized to perform a transfer of tokens from the source account\n     * @param owner Owner of the source account\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     * @param amount Maximum number of tokens the delegate may transfer\n     */\n\n  }, {\n    key: \"createApproveInstruction\",\n    value: function createApproveInstruction(programId, account, delegate, owner, multiSigners, amount) {\n      var dataLayout = struct([u8('instruction'), uint64('amount')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 4,\n        // Approve instruction\n        amount: new u64(amount).toBuffer()\n      }, data);\n      var keys = [{\n        pubkey: account,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: delegate,\n        isSigner: false,\n        isWritable: false\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: owner,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: owner,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct a Revoke instruction\n     *\n     * @param programId SPL Token program account\n     * @param account Public key of the account\n     * @param owner Owner of the source account\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     */\n\n  }, {\n    key: \"createRevokeInstruction\",\n    value: function createRevokeInstruction(programId, account, owner, multiSigners) {\n      var dataLayout = struct([u8('instruction')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 5 // Approve instruction\n\n      }, data);\n      var keys = [{\n        pubkey: account,\n        isSigner: false,\n        isWritable: true\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: owner,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: owner,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct a SetAuthority instruction\n     *\n     * @param programId SPL Token program account\n     * @param account Public key of the account\n     * @param newAuthority New authority of the account\n     * @param authorityType Type of authority to set\n     * @param currentAuthority Current authority of the specified type\n     * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n     */\n\n  }, {\n    key: \"createSetAuthorityInstruction\",\n    value: function createSetAuthorityInstruction(programId, account, newAuthority, authorityType, currentAuthority, multiSigners) {\n      var commandDataLayout = struct([u8('instruction'), u8('authorityType'), u8('option'), publicKey('newAuthority')]);\n      var data = buffer.Buffer.alloc(1024);\n      {\n        var encodeLength = commandDataLayout.encode({\n          instruction: 6,\n          // SetAuthority instruction\n          authorityType: AuthorityTypeCodes[authorityType],\n          option: newAuthority === null ? 0 : 1,\n          newAuthority: pubkeyToBuffer(newAuthority || new PublicKey(0))\n        }, data);\n        data = data.slice(0, encodeLength);\n      }\n      var keys = [{\n        pubkey: account,\n        isSigner: false,\n        isWritable: true\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: currentAuthority,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: currentAuthority,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct a MintTo instruction\n     *\n     * @param programId SPL Token program account\n     * @param mint Public key of the mint\n     * @param dest Public key of the account to mint to\n     * @param authority The mint authority\n     * @param multiSigners Signing accounts if `authority` is a multiSig\n     * @param amount Amount to mint\n     */\n\n  }, {\n    key: \"createMintToInstruction\",\n    value: function createMintToInstruction(programId, mint, dest, authority, multiSigners, amount) {\n      var dataLayout = struct([u8('instruction'), uint64('amount')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 7,\n        // MintTo instruction\n        amount: new u64(amount).toBuffer()\n      }, data);\n      var keys = [{\n        pubkey: mint,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: dest,\n        isSigner: false,\n        isWritable: true\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: authority,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: authority,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct a Burn instruction\n     *\n     * @param programId SPL Token program account\n     * @param mint Mint for the account\n     * @param account Account to burn tokens from\n     * @param owner Owner of the account\n     * @param multiSigners Signing accounts if `authority` is a multiSig\n     * @param amount amount to burn\n     */\n\n  }, {\n    key: \"createBurnInstruction\",\n    value: function createBurnInstruction(programId, mint, account, owner, multiSigners, amount) {\n      var dataLayout = struct([u8('instruction'), uint64('amount')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 8,\n        // Burn instruction\n        amount: new u64(amount).toBuffer()\n      }, data);\n      var keys = [{\n        pubkey: account,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: mint,\n        isSigner: false,\n        isWritable: true\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: owner,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: owner,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct a Close instruction\n     *\n     * @param programId SPL Token program account\n     * @param account Account to close\n     * @param dest Account to receive the remaining balance of the closed account\n     * @param authority Account Close authority\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     */\n\n  }, {\n    key: \"createCloseAccountInstruction\",\n    value: function createCloseAccountInstruction(programId, account, dest, owner, multiSigners) {\n      var dataLayout = struct([u8('instruction')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 9 // CloseAccount instruction\n\n      }, data);\n      var keys = [{\n        pubkey: account,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: dest,\n        isSigner: false,\n        isWritable: true\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: owner,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: owner,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct a Freeze instruction\n     *\n     * @param programId SPL Token program account\n     * @param account Account to freeze\n     * @param mint Mint account\n     * @param authority Mint freeze authority\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     */\n\n  }, {\n    key: \"createFreezeAccountInstruction\",\n    value: function createFreezeAccountInstruction(programId, account, mint, authority, multiSigners) {\n      var dataLayout = struct([u8('instruction')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 10 // FreezeAccount instruction\n\n      }, data);\n      var keys = [{\n        pubkey: account,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: mint,\n        isSigner: false,\n        isWritable: false\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: authority,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: authority,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct a Thaw instruction\n     *\n     * @param programId SPL Token program account\n     * @param account Account to thaw\n     * @param mint Mint account\n     * @param authority Mint freeze authority\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     */\n\n  }, {\n    key: \"createThawAccountInstruction\",\n    value: function createThawAccountInstruction(programId, account, mint, authority, multiSigners) {\n      var dataLayout = struct([u8('instruction')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 11 // ThawAccount instruction\n\n      }, data);\n      var keys = [{\n        pubkey: account,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: mint,\n        isSigner: false,\n        isWritable: false\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: authority,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: authority,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct a TransferChecked instruction\n     *\n     * @param programId SPL Token program account\n     * @param source Source account\n     * @param mint Mint account\n     * @param destination Destination account\n     * @param owner Owner of the source account\n     * @param multiSigners Signing accounts if `authority` is a multiSig\n     * @param amount Number of tokens to transfer\n     * @param decimals Number of decimals in transfer amount\n     */\n\n  }, {\n    key: \"createTransferCheckedInstruction\",\n    value: function createTransferCheckedInstruction(programId, source, mint, destination, owner, multiSigners, amount, decimals) {\n      var dataLayout = struct([u8('instruction'), uint64('amount'), u8('decimals')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 12,\n        // TransferChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals: decimals\n      }, data);\n      var keys = [{\n        pubkey: source,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: mint,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: destination,\n        isSigner: false,\n        isWritable: true\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: owner,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: owner,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct an ApproveChecked instruction\n     *\n     * @param programId SPL Token program account\n     * @param account Public key of the account\n     * @param mint Mint account\n     * @param delegate Account authorized to perform a transfer of tokens from the source account\n     * @param owner Owner of the source account\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     * @param amount Maximum number of tokens the delegate may transfer\n     * @param decimals Number of decimals in approve amount\n     */\n\n  }, {\n    key: \"createApproveCheckedInstruction\",\n    value: function createApproveCheckedInstruction(programId, account, mint, delegate, owner, multiSigners, amount, decimals) {\n      var dataLayout = struct([u8('instruction'), uint64('amount'), u8('decimals')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 13,\n        // ApproveChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals: decimals\n      }, data);\n      var keys = [{\n        pubkey: account,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: mint,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: delegate,\n        isSigner: false,\n        isWritable: false\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: owner,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: owner,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct a MintToChecked instruction\n     *\n     * @param programId SPL Token program account\n     * @param mint Public key of the mint\n     * @param dest Public key of the account to mint to\n     * @param authority The mint authority\n     * @param multiSigners Signing accounts if `authority` is a multiSig\n     * @param amount Amount to mint\n     * @param decimals Number of decimals in amount to mint\n     */\n\n  }, {\n    key: \"createMintToCheckedInstruction\",\n    value: function createMintToCheckedInstruction(programId, mint, dest, authority, multiSigners, amount, decimals) {\n      var dataLayout = struct([u8('instruction'), uint64('amount'), u8('decimals')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 14,\n        // MintToChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals: decimals\n      }, data);\n      var keys = [{\n        pubkey: mint,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: dest,\n        isSigner: false,\n        isWritable: true\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: authority,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: authority,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct a BurnChecked instruction\n     *\n     * @param programId SPL Token program account\n     * @param mint Mint for the account\n     * @param account Account to burn tokens from\n     * @param owner Owner of the account\n     * @param multiSigners Signing accounts if `authority` is a multiSig\n     * @param amount amount to burn\n     */\n\n  }, {\n    key: \"createBurnCheckedInstruction\",\n    value: function createBurnCheckedInstruction(programId, mint, account, owner, multiSigners, amount, decimals) {\n      var dataLayout = struct([u8('instruction'), uint64('amount'), u8('decimals')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 15,\n        // BurnChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals: decimals\n      }, data);\n      var keys = [{\n        pubkey: account,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: mint,\n        isSigner: false,\n        isWritable: true\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: owner,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: owner,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct a SyncNative instruction\n     *\n     * @param programId SPL Token program account\n     * @param nativeAccount Account to sync lamports from\n     */\n\n  }, {\n    key: \"createSyncNativeInstruction\",\n    value: function createSyncNativeInstruction(programId, nativeAccount) {\n      var dataLayout = struct([u8('instruction')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 17 // SyncNative instruction\n\n      }, data);\n      var keys = [{\n        pubkey: nativeAccount,\n        isSigner: false,\n        isWritable: true\n      }];\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Get the address for the associated token account\n     *\n     * @param associatedProgramId SPL Associated Token program account\n     * @param programId SPL Token program account\n     * @param mint Token mint account\n     * @param owner Owner of the new account\n     * @return Public key of the associated token account\n     */\n\n  }, {\n    key: \"getAssociatedTokenAddress\",\n    value: function () {\n      var _getAssociatedTokenAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee28(associatedProgramId, programId, mint, owner) {\n        var allowOwnerOffCurve,\n            _args28 = arguments;\n        return _regeneratorRuntime.wrap(function _callee28$(_context28) {\n          while (1) {\n            switch (_context28.prev = _context28.next) {\n              case 0:\n                allowOwnerOffCurve = _args28.length > 4 && _args28[4] !== undefined ? _args28[4] : false;\n\n                if (!(!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer()))) {\n                  _context28.next = 3;\n                  break;\n                }\n\n                throw new Error(\"Owner cannot sign: \".concat(owner.toString()));\n\n              case 3:\n                _context28.next = 5;\n                return PublicKey.findProgramAddress([owner.toBuffer(), programId.toBuffer(), mint.toBuffer()], associatedProgramId);\n\n              case 5:\n                return _context28.abrupt(\"return\", _context28.sent[0]);\n\n              case 6:\n              case \"end\":\n                return _context28.stop();\n            }\n          }\n        }, _callee28);\n      }));\n\n      function getAssociatedTokenAddress(_x84, _x85, _x86, _x87) {\n        return _getAssociatedTokenAddress.apply(this, arguments);\n      }\n\n      return getAssociatedTokenAddress;\n    }()\n    /**\n     * Construct the AssociatedTokenProgram instruction to create the associated\n     * token account\n     *\n     * @param associatedProgramId SPL Associated Token program account\n     * @param programId SPL Token program account\n     * @param mint Token mint account\n     * @param associatedAccount New associated account\n     * @param owner Owner of the new account\n     * @param payer Payer of fees\n     */\n\n  }, {\n    key: \"createAssociatedTokenAccountInstruction\",\n    value: function createAssociatedTokenAccountInstruction(associatedProgramId, programId, mint, associatedAccount, owner, payer) {\n      var data = buffer.Buffer.alloc(0);\n      var keys = [{\n        pubkey: payer,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: associatedAccount,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: owner,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: mint,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: programId,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }];\n      return new TransactionInstruction({\n        keys: keys,\n        programId: associatedProgramId,\n        data: data\n      });\n    }\n  }]);\n\n  return Token;\n}();\n\nexport { ASSOCIATED_TOKEN_PROGRAM_ID, AccountLayout, MintLayout, NATIVE_MINT, TOKEN_PROGRAM_ID, Token, u64 };","map":{"version":3,"sources":["../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/index.js","../node_modules/rollup-plugin-node-polyfills/polyfills/global.js","../node_modules/rollup-plugin-node-polyfills/polyfills/inherits.js","../node_modules/rollup-plugin-node-polyfills/polyfills/util.js","../node_modules/rollup-plugin-node-polyfills/polyfills/assert.js","../node_modules/buffer-layout/lib/Layout.js","../client/layout.js","../client/util/send-and-confirm-transaction.js","../client/token.js"],"names":["require$$0","ieee754","require$$1","inspect","isBuffer","global","inherits","utilInspect","Buffer","publicKey","property","BufferLayout","uint64","realSendAndConfirmTransaction","skipPreflight","TOKEN_PROGRAM_ID","ASSOCIATED_TOKEN_PROGRAM_ID","FAILED_TO_FIND_ACCOUNT","INVALID_ACCOUNT_OWNER","toBuffer","a","b","assert","zeroPad","fromBuffer","buffer","i","AuthorityTypeCodes","MintTokens","FreezeAccount","AccountOwner","CloseAccount","NATIVE_MINT","MintLayout","Layout","AccountLayout","MultisigLayout","constructor","Object","connection","programId","payer","associatedProgramId","getMinBalanceRentForExemptMint","getMinBalanceRentForExemptAccount","getMinBalanceRentForExemptMultisig","createMint","mintAccount","Keypair","token","balanceNeeded","Token","transaction","fromPubkey","newAccountPubkey","lamports","space","sendAndConfirmTransaction","createAccount","newAccount","mintPublicKey","createAssociatedTokenAccount","associatedAddress","createAssociatedTokenAccountInternal","getOrCreateAssociatedAccountInfo","err","createWrappedNativeAccount","toPubkey","amount","createMultisig","multisigAccount","keys","pubkey","isSigner","isWritable","signers","signer","dataLayout","data","instruction","m","getMintInfo","info","JSON","mintInfo","u64","getAccountInfo","accountInfo","getMultisigInfo","multisigInfo","transfer","isAccount","ownerPublicKey","owner","approve","revoke","setAuthority","currentAuthorityPublicKey","currentAuthority","mintTo","authority","burn","closeAccount","authorityPublicKey","freezeAccount","thawAccount","transferChecked","approveChecked","mintToChecked","burnChecked","syncNative","createInitMintInstruction","commandDataLayout","encodeLength","decimals","mintAuthority","pubkeyToBuffer","option","freezeAuthority","createInitAccountInstruction","createTransferInstruction","multiSigners","createApproveInstruction","createRevokeInstruction","createSetAuthorityInstruction","authorityType","newAuthority","createMintToInstruction","createBurnInstruction","createCloseAccountInstruction","createFreezeAccountInstruction","createThawAccountInstruction","createTransferCheckedInstruction","createApproveCheckedInstruction","createMintToCheckedInstruction","createBurnCheckedInstruction","createSyncNativeInstruction","getAssociatedTokenAddress","allowOwnerOffCurve","PublicKey","mint","createAssociatedTokenAccountInstruction","SystemProgram"],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,SAAK,IAAL,GAAY,IAAZ;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,SAAK,QAAL,GAAgB,QAAhB;AACD;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;WACE,iCAAwB;AACtB,aAAO,EAAP;AACD;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACE,gBAAO,CAAP,EAAU,MAAV,EAAkB;AAChB,YAAM,IAAI,KAAJ,CAAU,oBAAV,CAAN;AACD;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACE,gBAAO,GAAP,EAAY,CAAZ,EAAe,MAAf,EAAuB;AACrB,YAAM,IAAI,KAAJ,CAAU,oBAAV,CAAN;AACD;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACE,iBAAQ,CAAR,EAAW,MAAX,EAAmB;AACjB,UAAI,IAAI,KAAK,IAAb,EAAmB;AACjB,cAAM,IAAI,UAAJ,CAAe,oBAAf,CAAN;AACD;;AACD,aAAO,KAAK,IAAZ;AACD;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACE,mBAAU,QAAV,EAAoB;AAClB,UAAM,EAAE,GAAG,MAAM,CAAC,MAAP,CAAc,KAAK,WAAL,CAAiB,SAA/B,CAAX;AACA,MAAA,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,IAAlB;AACA,MAAA,EAAE,CAAC,QAAH,GAAc,QAAd;AACA,aAAO,EAAP;AACD;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACE,mBAAU,MAAV,EAAk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","sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","export default (typeof global !== \"undefined\" ? global :\n  typeof self !== \"undefined\" ? self :\n  typeof window !== \"undefined\" ? window : {});","\nvar inherits;\nif (typeof Object.create === 'function'){\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\nexport default inherits;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport process from 'process';\nvar formatRegExp = /%[sdj%]/g;\nexport function format(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexport function deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexport function debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nexport function inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexport function isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexport function isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexport function isNull(arg) {\n  return arg === null;\n}\n\nexport function isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexport function isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexport function isString(arg) {\n  return typeof arg === 'string';\n}\n\nexport function isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexport function isUndefined(arg) {\n  return arg === void 0;\n}\n\nexport function isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexport function isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexport function isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexport function isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexport function isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexport function isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nexport function isBuffer(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexport function log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nimport inherits from './inherits';\nexport {inherits}\n\nexport function _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport default {\n  inherits: inherits,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n}\n","\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport {isBuffer} from 'buffer';\nimport {isPrimitive, inherits, isError, isFunction, isRegExp, isDate, inspect as utilInspect} from 'util';\nvar pSlice = Array.prototype.slice;\nvar _functionsHaveNames;\nfunction functionsHaveNames() {\n  if (typeof _functionsHaveNames !== 'undefined') {\n    return _functionsHaveNames;\n  }\n  return _functionsHaveNames = (function () {\n    return function foo() {}.name === 'foo';\n  }());\n}\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nfunction assert(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\nexport default assert;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames()) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = AssertionError;\nexport function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n}\n\n// assert.AssertionError instanceof Error\ninherits(AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames() || !isFunction(something)) {\n    return utilInspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nexport function fail(actual, expected, message, operator, stackStartFunction) {\n  throw new AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nexport function ok(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\nassert.ok = ok;\nexport {ok as assert};\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\nassert.equal = equal;\nexport function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', equal);\n}\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\nassert.notEqual = notEqual;\nexport function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', notEqual);\n  }\n}\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\nassert.deepEqual = deepEqual;\nexport function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', deepEqual);\n  }\n}\nassert.deepStrictEqual = deepStrictEqual;\nexport function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', deepStrictEqual);\n  }\n}\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (isDate(actual) && isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (isRegExp(actual) && isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (isPrimitive(a) || isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\nassert.notDeepEqual = notDeepEqual;\nexport function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', notDeepEqual);\n  }\n}\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nexport function notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\nassert.strictEqual = strictEqual;\nexport function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', strictEqual);\n  }\n}\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\nassert.notStrictEqual = notStrictEqual;\nexport function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', notStrictEqual);\n  }\n}\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\nassert.throws = throws;\nexport function throws(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n}\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = doesNotThrow;\nexport function doesNotThrow(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n}\n\nassert.ifError = ifError;\nexport function ifError(err) {\n  if (err) throw err;\n}\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for translating between Buffer instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n\n'use strict';\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nexports.ExternalLayout = ExternalLayout;\nexports.GreedyCount = GreedyCount;\nexports.OffsetLayout = OffsetLayout;\nexports.UInt = UInt;\nexports.UIntBE = UIntBE;\nexports.Int = Int;\nexports.IntBE = IntBE;\nexports.Float = Float;\nexports.FloatBE = FloatBE;\nexports.Double = Double;\nexports.DoubleBE = DoubleBE;\nexports.Sequence = Sequence;\nexports.Structure = Structure;\nexports.UnionDiscriminator = UnionDiscriminator;\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nexports.Union = Union;\nexports.VariantLayout = VariantLayout;\nexports.BitStructure = BitStructure;\nexports.BitField = BitField;\nexports.Boolean = Boolean;\nexports.Blob = Blob;\nexports.CString = CString;\nexports.UTF8 = UTF8;\nexports.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nexports.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nexports.const = ((value, property) => new Constant(value, property));\n","// @flow\n\nimport * as BufferLayout from 'buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey'): Object => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64'): Object => {\n  return BufferLayout.blob(8, property);\n};\n","// @flow\n\nimport {sendAndConfirmTransaction as realSendAndConfirmTransaction} from '@solana/web3.js';\nimport type {\n  Connection,\n  Signer,\n  Transaction,\n  TransactionSignature,\n} from '@solana/web3.js';\n\nexport function sendAndConfirmTransaction(\n  title: string,\n  connection: Connection,\n  transaction: Transaction,\n  ...signers: Array<Signer>\n): Promise<TransactionSignature> {\n  return realSendAndConfirmTransaction(connection, transaction, signers, {\n    skipPreflight: false,\n  });\n}\n","/**\n * @flow\n */\n\nimport {Buffer} from 'buffer';\nimport assert from 'assert';\nimport BN from 'bn.js';\nimport * as BufferLayout from 'buffer-layout';\nimport {\n  Keypair,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionInstruction,\n  SYSVAR_RENT_PUBKEY,\n} from '@solana/web3.js';\nimport type {\n  Connection,\n  Commitment,\n  Signer,\n  TransactionSignature,\n} from '@solana/web3.js';\n\nimport * as Layout from './layout';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\n\nexport const TOKEN_PROGRAM_ID: PublicKey = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport const ASSOCIATED_TOKEN_PROGRAM_ID: PublicKey = new PublicKey(\n  'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n);\n\nconst FAILED_TO_FIND_ACCOUNT = 'Failed to find account';\nconst INVALID_ACCOUNT_OWNER = 'Invalid account owner';\n\n/**\n * Unfortunately, BufferLayout.encode uses an `instanceof` check for `Buffer`\n * which fails when using `publicKey.toBuffer()` directly because the bundled `Buffer`\n * class in `@solana/web3.js` is different from the bundled `Buffer` class in this package\n */\nfunction pubkeyToBuffer(publicKey: PublicKey): typeof Buffer {\n  return Buffer.from(publicKey.toBuffer());\n}\n\n/**\n * 64-bit value\n */\nexport class u64 extends BN {\n  /**\n   * Convert to Buffer representation\n   */\n  toBuffer(): typeof Buffer {\n    const a = super.toArray().reverse();\n    const b = Buffer.from(a);\n    if (b.length === 8) {\n      return b;\n    }\n    assert(b.length < 8, 'u64 too large');\n\n    const zeroPad = Buffer.alloc(8);\n    b.copy(zeroPad);\n    return zeroPad;\n  }\n\n  /**\n   * Construct a u64 from Buffer representation\n   */\n  static fromBuffer(buffer: typeof Buffer): u64 {\n    assert(buffer.length === 8, `Invalid buffer length: ${buffer.length}`);\n    return new u64(\n      [...buffer]\n        .reverse()\n        .map(i => `00${i.toString(16)}`.slice(-2))\n        .join(''),\n      16,\n    );\n  }\n}\n\nfunction isAccount(accountOrPublicKey: any): boolean {\n  return 'publicKey' in accountOrPublicKey;\n}\n\ntype AuthorityType =\n  | 'MintTokens'\n  | 'FreezeAccount'\n  | 'AccountOwner'\n  | 'CloseAccount';\n\nconst AuthorityTypeCodes = {\n  MintTokens: 0,\n  FreezeAccount: 1,\n  AccountOwner: 2,\n  CloseAccount: 3,\n};\n\n// The address of the special mint for wrapped native token.\nexport const NATIVE_MINT: PublicKey = new PublicKey(\n  'So11111111111111111111111111111111111111112',\n);\n\n/**\n * Information about the mint\n */\ntype MintInfo = {|\n  /**\n   * Optional authority used to mint new tokens. The mint authority may only be provided during\n   * mint creation. If no mint authority is present then the mint has a fixed supply and no\n   * further tokens may be minted.\n   */\n  mintAuthority: null | PublicKey,\n\n  /**\n   * Total supply of tokens\n   */\n  supply: u64,\n\n  /**\n   * Number of base 10 digits to the right of the decimal place\n   */\n  decimals: number,\n\n  /**\n   * Is this mint initialized\n   */\n  isInitialized: boolean,\n\n  /**\n   * Optional authority to freeze token accounts\n   */\n  freezeAuthority: null | PublicKey,\n|};\n\nexport const MintLayout: typeof BufferLayout.Structure = BufferLayout.struct([\n  BufferLayout.u32('mintAuthorityOption'),\n  Layout.publicKey('mintAuthority'),\n  Layout.uint64('supply'),\n  BufferLayout.u8('decimals'),\n  BufferLayout.u8('isInitialized'),\n  BufferLayout.u32('freezeAuthorityOption'),\n  Layout.publicKey('freezeAuthority'),\n]);\n\n/**\n * Information about an account\n */\ntype AccountInfo = {|\n  /**\n   * The address of this account\n   */\n  address: PublicKey,\n\n  /**\n   * The mint associated with this account\n   */\n  mint: PublicKey,\n\n  /**\n   * Owner of this account\n   */\n  owner: PublicKey,\n\n  /**\n   * Amount of tokens this account holds\n   */\n  amount: u64,\n\n  /**\n   * The delegate for this account\n   */\n  delegate: null | PublicKey,\n\n  /**\n   * The amount of tokens the delegate authorized to the delegate\n   */\n  delegatedAmount: u64,\n\n  /**\n   * Is this account initialized\n   */\n  isInitialized: boolean,\n\n  /**\n   * Is this account frozen\n   */\n  isFrozen: boolean,\n\n  /**\n   * Is this a native token account\n   */\n  isNative: boolean,\n\n  /**\n   * If this account is a native token, it must be rent-exempt. This\n   * value logs the rent-exempt reserve which must remain in the balance\n   * until the account is closed.\n   */\n  rentExemptReserve: null | u64,\n\n  /**\n   * Optional authority to close the account\n   */\n  closeAuthority: null | PublicKey,\n|};\n\n/**\n * @private\n */\nexport const AccountLayout: typeof BufferLayout.Structure = BufferLayout.struct(\n  [\n    Layout.publicKey('mint'),\n    Layout.publicKey('owner'),\n    Layout.uint64('amount'),\n    BufferLayout.u32('delegateOption'),\n    Layout.publicKey('delegate'),\n    BufferLayout.u8('state'),\n    BufferLayout.u32('isNativeOption'),\n    Layout.uint64('isNative'),\n    Layout.uint64('delegatedAmount'),\n    BufferLayout.u32('closeAuthorityOption'),\n    Layout.publicKey('closeAuthority'),\n  ],\n);\n\n/**\n * Information about an multisig\n */\ntype MultisigInfo = {|\n  /**\n   * The number of signers required\n   */\n  m: number,\n\n  /**\n   * Number of possible signers, corresponds to the\n   * number of `signers` that are valid.\n   */\n  n: number,\n\n  /**\n   * Is this mint initialized\n   */\n  initialized: boolean,\n\n  /**\n   * The signers\n   */\n  signer1: PublicKey,\n  signer2: PublicKey,\n  signer3: PublicKey,\n  signer4: PublicKey,\n  signer5: PublicKey,\n  signer6: PublicKey,\n  signer7: PublicKey,\n  signer8: PublicKey,\n  signer9: PublicKey,\n  signer10: PublicKey,\n  signer11: PublicKey,\n|};\n\n/**\n * @private\n */\nconst MultisigLayout = BufferLayout.struct([\n  BufferLayout.u8('m'),\n  BufferLayout.u8('n'),\n  BufferLayout.u8('is_initialized'),\n  Layout.publicKey('signer1'),\n  Layout.publicKey('signer2'),\n  Layout.publicKey('signer3'),\n  Layout.publicKey('signer4'),\n  Layout.publicKey('signer5'),\n  Layout.publicKey('signer6'),\n  Layout.publicKey('signer7'),\n  Layout.publicKey('signer8'),\n  Layout.publicKey('signer9'),\n  Layout.publicKey('signer10'),\n  Layout.publicKey('signer11'),\n]);\n\n/**\n * An ERC20-like Token\n */\nexport class Token {\n  /**\n   * @private\n   */\n  connection: Connection;\n\n  /**\n   * The public key identifying this mint\n   */\n  publicKey: PublicKey;\n\n  /**\n   * Program Identifier for the Token program\n   */\n  programId: PublicKey;\n\n  /**\n   * Program Identifier for the Associated Token program\n   */\n  associatedProgramId: PublicKey;\n\n  /**\n   * Fee payer\n   */\n  payer: Signer;\n\n  /**\n   * Create a Token object attached to the specific mint\n   *\n   * @param connection The connection to use\n   * @param token Public key of the mint\n   * @param programId token programId\n   * @param payer Payer of fees\n   */\n  constructor(\n    connection: Connection,\n    publicKey: PublicKey,\n    programId: PublicKey,\n    payer: Signer,\n  ) {\n    Object.assign(this, {\n      connection,\n      publicKey,\n      programId,\n      payer,\n      // Hard code is ok; Overriding is needed only for tests\n      associatedProgramId: ASSOCIATED_TOKEN_PROGRAM_ID,\n    });\n  }\n\n  /**\n   * Get the minimum balance for the mint to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptMint(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(MintLayout.span);\n  }\n\n  /**\n   * Get the minimum balance for the account to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptAccount(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(\n      AccountLayout.span,\n    );\n  }\n\n  /**\n   * Get the minimum balance for the multsig to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptMultisig(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(\n      MultisigLayout.span,\n    );\n  }\n\n  /**\n   * Create and initialize a token.\n   *\n   * @param connection The connection to use\n   * @param payer Fee payer for transaction\n   * @param mintAuthority Account or multisig that will control minting\n   * @param freezeAuthority Optional account or multisig that can freeze token accounts\n   * @param decimals Location of the decimal place\n   * @param programId Optional token programId, uses the system programId by default\n   * @return Token object for the newly minted token\n   */\n  static async createMint(\n    connection: Connection,\n    payer: Signer,\n    mintAuthority: PublicKey,\n    freezeAuthority: PublicKey | null,\n    decimals: number,\n    programId: PublicKey,\n  ): Promise<Token> {\n    const mintAccount = Keypair.generate();\n    const token = new Token(\n      connection,\n      mintAccount.publicKey,\n      programId,\n      payer,\n    );\n\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptMint(\n      connection,\n    );\n\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: mintAccount.publicKey,\n        lamports: balanceNeeded,\n        space: MintLayout.span,\n        programId,\n      }),\n    );\n\n    transaction.add(\n      Token.createInitMintInstruction(\n        programId,\n        mintAccount.publicKey,\n        decimals,\n        mintAuthority,\n        freezeAuthority,\n      ),\n    );\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeMint',\n      connection,\n      transaction,\n      payer,\n      mintAccount,\n    );\n\n    return token;\n  }\n\n  /**\n   * Create and initialize a new account.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return Public key of the new empty account\n   */\n  async createAccount(owner: PublicKey): Promise<PublicKey> {\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptAccount(\n      this.connection,\n    );\n\n    const newAccount = Keypair.generate();\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: this.payer.publicKey,\n        newAccountPubkey: newAccount.publicKey,\n        lamports: balanceNeeded,\n        space: AccountLayout.span,\n        programId: this.programId,\n      }),\n    );\n\n    const mintPublicKey = this.publicKey;\n    transaction.add(\n      Token.createInitAccountInstruction(\n        this.programId,\n        mintPublicKey,\n        newAccount.publicKey,\n        owner,\n      ),\n    );\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeAccount',\n      this.connection,\n      transaction,\n      this.payer,\n      newAccount,\n    );\n\n    return newAccount.publicKey;\n  }\n\n  /**\n   * Create and initialize the associated account.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return Public key of the new associated account\n   */\n  async createAssociatedTokenAccount(owner: PublicKey): Promise<PublicKey> {\n    const associatedAddress = await Token.getAssociatedTokenAddress(\n      this.associatedProgramId,\n      this.programId,\n      this.publicKey,\n      owner,\n    );\n\n    return this.createAssociatedTokenAccountInternal(owner, associatedAddress);\n  }\n\n  async createAssociatedTokenAccountInternal(\n    owner: PublicKey,\n    associatedAddress: PublicKey,\n  ): Promise<PublicKey> {\n    await sendAndConfirmTransaction(\n      'CreateAssociatedTokenAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createAssociatedTokenAccountInstruction(\n          this.associatedProgramId,\n          this.programId,\n          this.publicKey,\n          associatedAddress,\n          owner,\n          this.payer.publicKey,\n        ),\n      ),\n      this.payer,\n    );\n\n    return associatedAddress;\n  }\n\n  /**\n   * Retrieve the associated account or create one if not found.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return The new associated account\n   */\n  async getOrCreateAssociatedAccountInfo(\n    owner: PublicKey,\n  ): Promise<AccountInfo> {\n    const associatedAddress = await Token.getAssociatedTokenAddress(\n      this.associatedProgramId,\n      this.programId,\n      this.publicKey,\n      owner,\n    );\n\n    // This is the optimum logic, considering TX fee, client-side computation,\n    // RPC roundtrips and guaranteed idempotent.\n    // Sadly we can't do this atomically;\n    try {\n      return await this.getAccountInfo(associatedAddress);\n    } catch (err) {\n      // INVALID_ACCOUNT_OWNER can be possible if the associatedAddress has\n      // already been received some lamports (= became system accounts).\n      // Assuming program derived addressing is safe, this is the only case\n      // for the INVALID_ACCOUNT_OWNER in this code-path\n      if (\n        err.message === FAILED_TO_FIND_ACCOUNT ||\n        err.message === INVALID_ACCOUNT_OWNER\n      ) {\n        // as this isn't atomic, it's possible others can create associated\n        // accounts meanwhile\n        try {\n          await this.createAssociatedTokenAccountInternal(\n            owner,\n            associatedAddress,\n          );\n        } catch (err) {\n          // ignore all errors; for now there is no API compatible way to\n          // selectively ignore the expected instruction error if the\n          // associated account is existing already.\n        }\n\n        // Now this should always succeed\n        return await this.getAccountInfo(associatedAddress);\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * Create and initialize a new account on the special native token mint.\n   *\n   * In order to be wrapped, the account must have a balance of native tokens\n   * when it is initialized with the token program.\n   *\n   * This function sends lamports to the new account before initializing it.\n   *\n   * @param connection A solana web3 connection\n   * @param programId The token program ID\n   * @param owner The owner of the new token account\n   * @param payer The source of the lamports to initialize, and payer of the initialization fees.\n   * @param amount The amount of lamports to wrap\n   * @return {Promise<PublicKey>} The new token account\n   */\n  static async createWrappedNativeAccount(\n    connection: Connection,\n    programId: PublicKey,\n    owner: PublicKey,\n    payer: Signer,\n    amount: number,\n  ): Promise<PublicKey> {\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptAccount(\n      connection,\n    );\n\n    // Create a new account\n    const newAccount = Keypair.generate();\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: newAccount.publicKey,\n        lamports: balanceNeeded,\n        space: AccountLayout.span,\n        programId,\n      }),\n    );\n\n    // Send lamports to it (these will be wrapped into native tokens by the token program)\n    transaction.add(\n      SystemProgram.transfer({\n        fromPubkey: payer.publicKey,\n        toPubkey: newAccount.publicKey,\n        lamports: amount,\n      }),\n    );\n\n    // Assign the new account to the native token mint.\n    // the account will be initialized with a balance equal to the native token balance.\n    // (i.e. amount)\n    transaction.add(\n      Token.createInitAccountInstruction(\n        programId,\n        NATIVE_MINT,\n        newAccount.publicKey,\n        owner,\n      ),\n    );\n\n    // Send the three instructions\n    await sendAndConfirmTransaction(\n      'createAccount, transfer, and initializeAccount',\n      connection,\n      transaction,\n      payer,\n      newAccount,\n    );\n\n    return newAccount.publicKey;\n  }\n\n  /**\n   * Create and initialize a new multisig.\n   *\n   * This account may then be used for multisignature verification\n   *\n   * @param m Number of required signatures\n   * @param signers Full set of signers\n   * @return Public key of the new multisig account\n   */\n  async createMultisig(\n    m: number,\n    signers: Array<PublicKey>,\n  ): Promise<PublicKey> {\n    const multisigAccount = Keypair.generate();\n\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptMultisig(\n      this.connection,\n    );\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: this.payer.publicKey,\n        newAccountPubkey: multisigAccount.publicKey,\n        lamports: balanceNeeded,\n        space: MultisigLayout.span,\n        programId: this.programId,\n      }),\n    );\n\n    // create the new account\n    let keys = [\n      {pubkey: multisigAccount.publicKey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    signers.forEach(signer =>\n      keys.push({pubkey: signer, isSigner: false, isWritable: false}),\n    );\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('m'),\n    ]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 2, // InitializeMultisig instruction\n        m,\n      },\n      data,\n    );\n    transaction.add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeMultisig',\n      this.connection,\n      transaction,\n      this.payer,\n      multisigAccount,\n    );\n\n    return multisigAccount.publicKey;\n  }\n\n  /**\n   * Retrieve mint information\n   */\n  async getMintInfo(): Promise<MintInfo> {\n    const info = await this.connection.getAccountInfo(this.publicKey);\n    if (info === null) {\n      throw new Error('Failed to find mint account');\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(`Invalid mint owner: ${JSON.stringify(info.owner)}`);\n    }\n    if (info.data.length != MintLayout.span) {\n      throw new Error(`Invalid mint size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const mintInfo = MintLayout.decode(data);\n\n    if (mintInfo.mintAuthorityOption === 0) {\n      mintInfo.mintAuthority = null;\n    } else {\n      mintInfo.mintAuthority = new PublicKey(mintInfo.mintAuthority);\n    }\n\n    mintInfo.supply = u64.fromBuffer(mintInfo.supply);\n    mintInfo.isInitialized = mintInfo.isInitialized != 0;\n\n    if (mintInfo.freezeAuthorityOption === 0) {\n      mintInfo.freezeAuthority = null;\n    } else {\n      mintInfo.freezeAuthority = new PublicKey(mintInfo.freezeAuthority);\n    }\n    return mintInfo;\n  }\n\n  /**\n   * Retrieve account information\n   *\n   * @param account Public key of the account\n   */\n  async getAccountInfo(\n    account: PublicKey,\n    commitment?: Commitment,\n  ): Promise<AccountInfo> {\n    const info = await this.connection.getAccountInfo(account, commitment);\n    if (info === null) {\n      throw new Error(FAILED_TO_FIND_ACCOUNT);\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(INVALID_ACCOUNT_OWNER);\n    }\n    if (info.data.length != AccountLayout.span) {\n      throw new Error(`Invalid account size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const accountInfo = AccountLayout.decode(data);\n    accountInfo.address = account;\n    accountInfo.mint = new PublicKey(accountInfo.mint);\n    accountInfo.owner = new PublicKey(accountInfo.owner);\n    accountInfo.amount = u64.fromBuffer(accountInfo.amount);\n\n    if (accountInfo.delegateOption === 0) {\n      accountInfo.delegate = null;\n      accountInfo.delegatedAmount = new u64();\n    } else {\n      accountInfo.delegate = new PublicKey(accountInfo.delegate);\n      accountInfo.delegatedAmount = u64.fromBuffer(accountInfo.delegatedAmount);\n    }\n\n    accountInfo.isInitialized = accountInfo.state !== 0;\n    accountInfo.isFrozen = accountInfo.state === 2;\n\n    if (accountInfo.isNativeOption === 1) {\n      accountInfo.rentExemptReserve = u64.fromBuffer(accountInfo.isNative);\n      accountInfo.isNative = true;\n    } else {\n      accountInfo.rentExemptReserve = null;\n      accountInfo.isNative = false;\n    }\n\n    if (accountInfo.closeAuthorityOption === 0) {\n      accountInfo.closeAuthority = null;\n    } else {\n      accountInfo.closeAuthority = new PublicKey(accountInfo.closeAuthority);\n    }\n\n    if (!accountInfo.mint.equals(this.publicKey)) {\n      throw new Error(\n        `Invalid account mint: ${JSON.stringify(\n          accountInfo.mint,\n        )} !== ${JSON.stringify(this.publicKey)}`,\n      );\n    }\n    return accountInfo;\n  }\n\n  /**\n   * Retrieve Multisig information\n   *\n   * @param multisig Public key of the account\n   */\n  async getMultisigInfo(multisig: PublicKey): Promise<MultisigInfo> {\n    const info = await this.connection.getAccountInfo(multisig);\n    if (info === null) {\n      throw new Error('Failed to find multisig');\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(`Invalid multisig owner`);\n    }\n    if (info.data.length != MultisigLayout.span) {\n      throw new Error(`Invalid multisig size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const multisigInfo = MultisigLayout.decode(data);\n    multisigInfo.signer1 = new PublicKey(multisigInfo.signer1);\n    multisigInfo.signer2 = new PublicKey(multisigInfo.signer2);\n    multisigInfo.signer3 = new PublicKey(multisigInfo.signer3);\n    multisigInfo.signer4 = new PublicKey(multisigInfo.signer4);\n    multisigInfo.signer5 = new PublicKey(multisigInfo.signer5);\n    multisigInfo.signer6 = new PublicKey(multisigInfo.signer6);\n    multisigInfo.signer7 = new PublicKey(multisigInfo.signer7);\n    multisigInfo.signer8 = new PublicKey(multisigInfo.signer8);\n    multisigInfo.signer9 = new PublicKey(multisigInfo.signer9);\n    multisigInfo.signer10 = new PublicKey(multisigInfo.signer10);\n    multisigInfo.signer11 = new PublicKey(multisigInfo.signer11);\n\n    return multisigInfo;\n  }\n\n  /**\n   * Transfer tokens to another account\n   *\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Number of tokens to transfer\n   */\n  async transfer(\n    source: PublicKey,\n    destination: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<TransactionSignature> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    return await sendAndConfirmTransaction(\n      'Transfer',\n      this.connection,\n      new Transaction().add(\n        Token.createTransferInstruction(\n          this.programId,\n          source,\n          destination,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Grant a third-party permission to transfer up the specified number of tokens from an account\n   *\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   */\n  async approve(\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Approve',\n      this.connection,\n      new Transaction().add(\n        Token.createApproveInstruction(\n          this.programId,\n          account,\n          delegate,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Remove approval for the transfer of any remaining tokens\n   *\n   * @param account Public key of the account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  async revoke(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Revoke',\n      this.connection,\n      new Transaction().add(\n        Token.createRevokeInstruction(\n          this.programId,\n          account,\n          ownerPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Assign a new authority to the account\n   *\n   * @param account Public key of the account\n   * @param newAuthority New authority of the account\n   * @param authorityType Type of authority to set\n   * @param currentAuthority Current authority of the account\n   * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n   */\n  async setAuthority(\n    account: PublicKey,\n    newAuthority: PublicKey | null,\n    authorityType: AuthorityType,\n    currentAuthority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let currentAuthorityPublicKey: PublicKey;\n    let signers;\n    if (isAccount(currentAuthority)) {\n      currentAuthorityPublicKey = currentAuthority.publicKey;\n      signers = [currentAuthority];\n    } else {\n      currentAuthorityPublicKey = currentAuthority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'SetAuthority',\n      this.connection,\n      new Transaction().add(\n        Token.createSetAuthorityInstruction(\n          this.programId,\n          account,\n          newAuthority,\n          authorityType,\n          currentAuthorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Mint new tokens\n   *\n   * @param dest Public key of the account to mint to\n   * @param authority Minting authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   */\n  async mintTo(\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      ownerPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      ownerPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'MintTo',\n      this.connection,\n      new Transaction().add(\n        Token.createMintToInstruction(\n          this.programId,\n          this.publicKey,\n          dest,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Burn tokens\n   *\n   * @param account Account to burn tokens from\n   * @param owner Account owner\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Amount to burn\n   */\n  async burn(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Burn',\n      this.connection,\n      new Transaction().add(\n        Token.createBurnInstruction(\n          this.programId,\n          this.publicKey,\n          account,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Close account\n   *\n   * @param account Account to close\n   * @param dest Account to receive the remaining balance of the closed account\n   * @param authority Authority which is allowed to close the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async closeAccount(\n    account: PublicKey,\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'CloseAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createCloseAccountInstruction(\n          this.programId,\n          account,\n          dest,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Freeze account\n   *\n   * @param account Account to freeze\n   * @param authority The mint freeze authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async freezeAccount(\n    account: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'FreezeAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createFreezeAccountInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Thaw account\n   *\n   * @param account Account to thaw\n   * @param authority The mint freeze authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async thawAccount(\n    account: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'ThawAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createThawAccountInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Transfer tokens to another account, asserting the token mint and decimals\n   *\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Number of tokens to transfer\n   * @param decimals Number of decimals in transfer amount\n   */\n  async transferChecked(\n    source: PublicKey,\n    destination: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<TransactionSignature> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    return await sendAndConfirmTransaction(\n      'TransferChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createTransferCheckedInstruction(\n          this.programId,\n          source,\n          this.publicKey,\n          destination,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Grant a third-party permission to transfer up the specified number of tokens from an account,\n   * asserting the token mint and decimals\n   *\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   * @param decimals Number of decimals in approve amount\n   */\n  async approveChecked(\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'ApproveChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createApproveCheckedInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          delegate,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Mint new tokens, asserting the token mint and decimals\n   *\n   * @param dest Public key of the account to mint to\n   * @param authority Minting authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   * @param decimals Number of decimals in amount to mint\n   */\n  async mintToChecked(\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      ownerPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      ownerPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'MintToChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createMintToCheckedInstruction(\n          this.programId,\n          this.publicKey,\n          dest,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Burn tokens, asserting the token mint and decimals\n   *\n   * @param account Account to burn tokens from\n   * @param owner Account owner\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Amount to burn\n   * @param decimals Number of decimals in amount to burn\n   */\n  async burnChecked(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'BurnChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createBurnCheckedInstruction(\n          this.programId,\n          this.publicKey,\n          account,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Sync amount in native SPL token account to underlying lamports\n   *\n   * @param nativeAccount Account to sync\n   */\n  async syncNative(nativeAccount: PublicKey): Promise<void> {\n    await sendAndConfirmTransaction(\n      'SyncNative',\n      this.connection,\n      new Transaction().add(\n        Token.createSyncNativeInstruction(this.programId, nativeAccount),\n      ),\n      this.payer,\n    );\n  }\n\n  /**\n   * Construct an InitializeMint instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param decimals Number of decimals in token account amounts\n   * @param mintAuthority Minting authority\n   * @param freezeAuthority Optional authority that can freeze token accounts\n   */\n  static createInitMintInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    decimals: number,\n    mintAuthority: PublicKey,\n    freezeAuthority: PublicKey | null,\n  ): TransactionInstruction {\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('decimals'),\n      Layout.publicKey('mintAuthority'),\n      BufferLayout.u8('option'),\n      Layout.publicKey('freezeAuthority'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 0, // InitializeMint instruction\n          decimals,\n          mintAuthority: pubkeyToBuffer(mintAuthority),\n          option: freezeAuthority === null ? 0 : 1,\n          freezeAuthority: pubkeyToBuffer(freezeAuthority || new PublicKey(0)),\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an InitializeAccount instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param account New account\n   * @param owner Owner of the new account\n   */\n  static createInitAccountInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n  ): TransactionInstruction {\n    const keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: owner, isSigner: false, isWritable: false},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 1, // InitializeAccount instruction\n      },\n      data,\n    );\n\n    return new TransactionInstruction({\n      keys,\n      programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Transfer instruction\n   *\n   * @param programId SPL Token program account\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Number of tokens to transfer\n   */\n  static createTransferInstruction(\n    programId: PublicKey,\n    source: PublicKey,\n    destination: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 3, // Transfer instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: source, isSigner: false, isWritable: true},\n      {pubkey: destination, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an Approve instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer of tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   */\n  static createApproveInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 4, // Approve instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: delegate, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Revoke instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createRevokeInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 5, // Approve instruction\n      },\n      data,\n    );\n\n    let keys = [{pubkey: account, isSigner: false, isWritable: true}];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a SetAuthority instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param newAuthority New authority of the account\n   * @param authorityType Type of authority to set\n   * @param currentAuthority Current authority of the specified type\n   * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n   */\n  static createSetAuthorityInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    newAuthority: PublicKey | null,\n    authorityType: AuthorityType,\n    currentAuthority: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('authorityType'),\n      BufferLayout.u8('option'),\n      Layout.publicKey('newAuthority'),\n    ]);\n\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 6, // SetAuthority instruction\n          authorityType: AuthorityTypeCodes[authorityType],\n          option: newAuthority === null ? 0 : 1,\n          newAuthority: pubkeyToBuffer(newAuthority || new PublicKey(0)),\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n\n    let keys = [{pubkey: account, isSigner: false, isWritable: true}];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: currentAuthority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: currentAuthority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a MintTo instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Public key of the mint\n   * @param dest Public key of the account to mint to\n   * @param authority The mint authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   */\n  static createMintToInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    dest: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 7, // MintTo instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Burn instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Mint for the account\n   * @param account Account to burn tokens from\n   * @param owner Owner of the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount amount to burn\n   */\n  static createBurnInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 8, // Burn instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Close instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to close\n   * @param dest Account to receive the remaining balance of the closed account\n   * @param authority Account Close authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createCloseAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    dest: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 9, // CloseAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Freeze instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to freeze\n   * @param mint Mint account\n   * @param authority Mint freeze authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createFreezeAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 10, // FreezeAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: authority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Thaw instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to thaw\n   * @param mint Mint account\n   * @param authority Mint freeze authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createThawAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 11, // ThawAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: authority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a TransferChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param source Source account\n   * @param mint Mint account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Number of tokens to transfer\n   * @param decimals Number of decimals in transfer amount\n   */\n  static createTransferCheckedInstruction(\n    programId: PublicKey,\n    source: PublicKey,\n    mint: PublicKey,\n    destination: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 12, // TransferChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: source, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: destination, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an ApproveChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param mint Mint account\n   * @param delegate Account authorized to perform a transfer of tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   * @param decimals Number of decimals in approve amount\n   */\n  static createApproveCheckedInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    delegate: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 13, // ApproveChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: delegate, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a MintToChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Public key of the mint\n   * @param dest Public key of the account to mint to\n   * @param authority The mint authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   * @param decimals Number of decimals in amount to mint\n   */\n  static createMintToCheckedInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    dest: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 14, // MintToChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a BurnChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Mint for the account\n   * @param account Account to burn tokens from\n   * @param owner Owner of the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount amount to burn\n   */\n  static createBurnCheckedInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 15, // BurnChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a SyncNative instruction\n   *\n   * @param programId SPL Token program account\n   * @param nativeAccount Account to sync lamports from\n   */\n  static createSyncNativeInstruction(\n    programId: PublicKey,\n    nativeAccount: PublicKey,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 17, // SyncNative instruction\n      },\n      data,\n    );\n\n    let keys = [{pubkey: nativeAccount, isSigner: false, isWritable: true}];\n    return new TransactionInstruction({keys, programId: programId, data});\n  }\n\n  /**\n   * Get the address for the associated token account\n   *\n   * @param associatedProgramId SPL Associated Token program account\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param owner Owner of the new account\n   * @return Public key of the associated token account\n   */\n  static async getAssociatedTokenAddress(\n    associatedProgramId: PublicKey,\n    programId: PublicKey,\n    mint: PublicKey,\n    owner: PublicKey,\n    allowOwnerOffCurve: boolean = false,\n  ): Promise<PublicKey> {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer())) {\n      throw new Error(`Owner cannot sign: ${owner.toString()}`);\n    }\n    return (\n      await PublicKey.findProgramAddress(\n        [owner.toBuffer(), programId.toBuffer(), mint.toBuffer()],\n        associatedProgramId,\n      )\n    )[0];\n  }\n\n  /**\n   * Construct the AssociatedTokenProgram instruction to create the associated\n   * token account\n   *\n   * @param associatedProgramId SPL Associated Token program account\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param associatedAccount New associated account\n   * @param owner Owner of the new account\n   * @param payer Payer of fees\n   */\n  static createAssociatedTokenAccountInstruction(\n    associatedProgramId: PublicKey,\n    programId: PublicKey,\n    mint: PublicKey,\n    associatedAccount: PublicKey,\n    owner: PublicKey,\n    payer: PublicKey,\n  ): TransactionInstruction {\n    const data = Buffer.alloc(0);\n\n    let keys = [\n      {pubkey: payer, isSigner: true, isWritable: true},\n      {pubkey: associatedAccount, isSigner: false, isWritable: true},\n      {pubkey: owner, isSigner: false, isWritable: false},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: SystemProgram.programId, isSigner: false, isWritable: false},\n      {pubkey: programId, isSigner: false, isWritable: false},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n\n    return new TransactionInstruction({\n      keys,\n      programId: associatedProgramId,\n      data,\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}