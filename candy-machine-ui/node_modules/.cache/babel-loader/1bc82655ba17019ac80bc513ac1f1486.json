{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mapEnumToFeatureName = exports.NetworkFeature = exports.UserTokenExpiry = void 0;\n\nconst solanaBorsh_1 = require(\"./solanaBorsh\");\n\nclass UserTokenExpiry extends solanaBorsh_1.Assignable {}\n\nexports.UserTokenExpiry = UserTokenExpiry;\n\nclass NetworkFeature extends solanaBorsh_1.Enum {}\n\nexports.NetworkFeature = NetworkFeature;\nsolanaBorsh_1.SCHEMA.set(NetworkFeature, {\n  kind: \"enum\",\n  field: \"enum\",\n  values: [[\"userTokenExpiry\", UserTokenExpiry]]\n});\nsolanaBorsh_1.SCHEMA.set(UserTokenExpiry, {\n  kind: \"struct\",\n  fields: []\n});\n\nconst mapEnumToFeatureName = enumValue => {\n  if (enumValue === \"userTokenExpiry\") {\n    return \"expire\";\n  }\n\n  return enumValue;\n};\n\nexports.mapEnumToFeatureName = mapEnumToFeatureName;","map":{"version":3,"sources":["../../src/lib/GatewayNetworkData.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAEA,MAAa,eAAb,SAAqC,aAAA,CAAA,UAArC,CAA+C;;AAA/C,OAAA,CAAA,eAAA,GAAA,eAAA;;AACA,MAAa,cAAb,SAAoC,aAAA,CAAA,IAApC,CAAwC;;AAAxC,OAAA,CAAA,cAAA,GAAA,cAAA;AAIA,aAAA,CAAA,MAAA,CAAO,GAAP,CAAW,cAAX,EAA2B;AACzB,EAAA,IAAI,EAAE,MADmB;AAEzB,EAAA,KAAK,EAAE,MAFkB;AAGzB,EAAA,MAAM,EAAE,CAAC,CAAC,iBAAD,EAAoB,eAApB,CAAD;AAHiB,CAA3B;AAKA,aAAA,CAAA,MAAA,CAAO,GAAP,CAAW,eAAX,EAA4B;AAAE,EAAA,IAAI,EAAE,QAAR;AAAkB,EAAA,MAAM,EAAE;AAA1B,CAA5B;;AAEO,MAAM,oBAAoB,GAAI,SAAD,IAAsB;AACxD,MAAI,SAAS,KAAK,iBAAlB,EAAqC;AACnC,WAAO,QAAP;AACD;;AAED,SAAO,SAAP;AACD,CANM;;AAAM,OAAA,CAAA,oBAAA,GAAoB,oBAApB","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mapEnumToFeatureName = exports.NetworkFeature = exports.UserTokenExpiry = void 0;\nconst solanaBorsh_1 = require(\"./solanaBorsh\");\nclass UserTokenExpiry extends solanaBorsh_1.Assignable {\n}\nexports.UserTokenExpiry = UserTokenExpiry;\nclass NetworkFeature extends solanaBorsh_1.Enum {\n}\nexports.NetworkFeature = NetworkFeature;\nsolanaBorsh_1.SCHEMA.set(NetworkFeature, {\n    kind: \"enum\",\n    field: \"enum\",\n    values: [[\"userTokenExpiry\", UserTokenExpiry]],\n});\nsolanaBorsh_1.SCHEMA.set(UserTokenExpiry, { kind: \"struct\", fields: [] });\nconst mapEnumToFeatureName = (enumValue) => {\n    if (enumValue === \"userTokenExpiry\") {\n        return \"expire\";\n    }\n    return enumValue;\n};\nexports.mapEnumToFeatureName = mapEnumToFeatureName;\n//# sourceMappingURL=GatewayNetworkData.js.map"]},"metadata":{},"sourceType":"script"}