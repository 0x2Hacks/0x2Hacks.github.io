{"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/index.ts":{"path":"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":89}},"4":{"start":{"line":4,"column":71},"end":{"line":4,"column":83}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"6":{"start":{"line":6,"column":26},"end":{"line":6,"column":33}},"7":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"8":{"start":{"line":9,"column":19},"end":{"line":11,"column":1}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":126}},"10":{"start":{"line":10,"column":21},"end":{"line":10,"column":126}},"11":{"start":{"line":10,"column":95},"end":{"line":10,"column":126}},"12":{"start":{"line":12,"column":0},"end":{"line":12,"column":62}},"13":{"start":{"line":13,"column":0},"end":{"line":13,"column":52}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":45}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":57}},"16":{"start":{"line":16,"column":0},"end":{"line":16,"column":59}},"17":{"start":{"line":17,"column":0},"end":{"line":17,"column":42}},"18":{"start":{"line":18,"column":0},"end":{"line":18,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":5,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":58},"end":{"line":4,"column":59}},"loc":{"start":{"line":4,"column":69},"end":{"line":4,"column":85}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":5,"column":6},"end":{"line":5,"column":7}},"loc":{"start":{"line":5,"column":28},"end":{"line":8,"column":1}},"line":5},"3":{"name":"(anonymous_3)","decl":{"start":{"line":9,"column":50},"end":{"line":9,"column":51}},"loc":{"start":{"line":9,"column":71},"end":{"line":11,"column":1}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":8,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":8,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":5,"column":1}},{"start":{"line":5,"column":6},"end":{"line":8,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},{"start":{"line":6,"column":4},"end":{"line":6,"column":33}}],"line":6},"4":{"loc":{"start":{"line":9,"column":19},"end":{"line":11,"column":1}},"type":"binary-expr","locations":[{"start":{"line":9,"column":20},"end":{"line":9,"column":24}},{"start":{"line":9,"column":28},"end":{"line":9,"column":45}},{"start":{"line":9,"column":50},"end":{"line":11,"column":1}}],"line":9},"5":{"loc":{"start":{"line":10,"column":21},"end":{"line":10,"column":126}},"type":"if","locations":[{"start":{"line":10,"column":21},"end":{"line":10,"column":126}},{"start":{"line":10,"column":21},"end":{"line":10,"column":126}}],"line":10},"6":{"loc":{"start":{"line":10,"column":25},"end":{"line":10,"column":93}},"type":"binary-expr","locations":[{"start":{"line":10,"column":25},"end":{"line":10,"column":40}},{"start":{"line":10,"column":44},"end":{"line":10,"column":93}}],"line":10}},"s":{"0":1,"1":39,"2":39,"3":39,"4":28,"5":0,"6":0,"7":0,"8":1,"9":6,"10":39,"11":39,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1},"f":{"0":39,"1":28,"2":0,"3":6},"b":{"0":[1,1,1],"1":[1,0],"2":[39,0],"3":[0,0],"4":[1,1,1],"5":[39,0],"6":[39,39]},"inputSourceMap":{"version":3,"file":"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/index.ts","sources":["/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,oDAAkC;AAClC,6CAA2B;AAC3B,yDAAuC;AACvC,2DAAyC;AACzC,0CAAwB;AACxB,kDAAgC","sourcesContent":["export * from \"./lib/instruction\";\nexport * from \"./lib/util\";\nexport * from \"./lib/GatewayTokenData\";\nexport * from \"./lib/GatewayNetworkData\";\nexport * from \"./types\";\nexport * from \"./lib/constants\";\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"108a9692151ac2546d2cf7c55cc4c9959e45a690","contentHash":"84ea284e20df34c10cf7c8dba8c55d5b1f6b9acb6e8e77e9cd8a9919ea71f106"},"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/instruction.ts":{"path":"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/instruction.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":251}},"14":{"start":{"line":13,"column":22},"end":{"line":13,"column":46}},"15":{"start":{"line":14,"column":20},"end":{"line":14,"column":42}},"16":{"start":{"line":15,"column":18},"end":{"line":15,"column":44}},"17":{"start":{"line":16,"column":27},"end":{"line":16,"column":56}},"18":{"start":{"line":17,"column":29},"end":{"line":17,"column":60}},"19":{"start":{"line":18,"column":15},"end":{"line":18,"column":32}},"20":{"start":{"line":40,"column":8},"end":{"line":42,"column":11}},"21":{"start":{"line":45,"column":8},"end":{"line":47,"column":11}},"22":{"start":{"line":50,"column":8},"end":{"line":54,"column":11}},"23":{"start":{"line":57,"column":8},"end":{"line":61,"column":11}},"24":{"start":{"line":64,"column":8},"end":{"line":68,"column":11}},"25":{"start":{"line":71,"column":8},"end":{"line":75,"column":11}},"26":{"start":{"line":78,"column":8},"end":{"line":80,"column":11}},"27":{"start":{"line":83,"column":8},"end":{"line":87,"column":11}},"28":{"start":{"line":90,"column":8},"end":{"line":94,"column":11}},"29":{"start":{"line":97,"column":0},"end":{"line":97,"column":48}},"30":{"start":{"line":108,"column":17},"end":{"line":115,"column":5}},"31":{"start":{"line":116,"column":17},"end":{"line":116,"column":60}},"32":{"start":{"line":117,"column":4},"end":{"line":121,"column":7}},"33":{"start":{"line":123,"column":0},"end":{"line":123,"column":38}},"34":{"start":{"line":134,"column":17},"end":{"line":139,"column":5}},"35":{"start":{"line":140,"column":17},"end":{"line":140,"column":63}},"36":{"start":{"line":141,"column":4},"end":{"line":145,"column":7}},"37":{"start":{"line":147,"column":0},"end":{"line":147,"column":44}},"38":{"start":{"line":162,"column":17},"end":{"line":171,"column":5}},"39":{"start":{"line":172,"column":17},"end":{"line":172,"column":75}},"40":{"start":{"line":173,"column":4},"end":{"line":177,"column":7}},"41":{"start":{"line":179,"column":0},"end":{"line":179,"column":36}},"42":{"start":{"line":180,"column":34},"end":{"line":184,"column":1}},"43":{"start":{"line":180,"column":99},"end":{"line":184,"column":1}},"44":{"start":{"line":193,"column":17},"end":{"line":193,"column":103}},"45":{"start":{"line":194,"column":17},"end":{"line":194,"column":53}},"46":{"start":{"line":195,"column":4},"end":{"line":199,"column":7}},"47":{"start":{"line":201,"column":0},"end":{"line":201,"column":24}},"48":{"start":{"line":210,"column":17},"end":{"line":210,"column":103}},"49":{"start":{"line":211,"column":17},"end":{"line":211,"column":53}},"50":{"start":{"line":212,"column":4},"end":{"line":216,"column":7}},"51":{"start":{"line":218,"column":0},"end":{"line":218,"column":24}},"52":{"start":{"line":227,"column":17},"end":{"line":227,"column":103}},"53":{"start":{"line":228,"column":17},"end":{"line":228,"column":55}},"54":{"start":{"line":229,"column":4},"end":{"line":233,"column":7}},"55":{"start":{"line":235,"column":0},"end":{"line":235,"column":28}},"56":{"start":{"line":245,"column":17},"end":{"line":249,"column":5}},"57":{"start":{"line":250,"column":17},"end":{"line":250,"column":69}},"58":{"start":{"line":251,"column":4},"end":{"line":255,"column":7}},"59":{"start":{"line":257,"column":0},"end":{"line":257,"column":36}},"60":{"start":{"line":266,"column":4},"end":{"line":280,"column":7}},"61":{"start":{"line":267,"column":31},"end":{"line":267,"column":91}},"62":{"start":{"line":268,"column":21},"end":{"line":273,"column":9}},"63":{"start":{"line":274,"column":21},"end":{"line":274,"column":77}},"64":{"start":{"line":275,"column":8},"end":{"line":279,"column":11}},"65":{"start":{"line":282,"column":0},"end":{"line":282,"column":50}},"66":{"start":{"line":291,"column":4},"end":{"line":305,"column":7}},"67":{"start":{"line":292,"column":31},"end":{"line":292,"column":91}},"68":{"start":{"line":293,"column":21},"end":{"line":298,"column":9}},"69":{"start":{"line":299,"column":21},"end":{"line":299,"column":82}},"70":{"start":{"line":300,"column":8},"end":{"line":304,"column":11}},"71":{"start":{"line":307,"column":0},"end":{"line":307,"column":60}},"72":{"start":{"line":308,"column":0},"end":{"line":320,"column":3}},"73":{"start":{"line":321,"column":0},"end":{"line":324,"column":3}},"74":{"start":{"line":325,"column":0},"end":{"line":331,"column":3}},"75":{"start":{"line":332,"column":0},"end":{"line":335,"column":3}},"76":{"start":{"line":336,"column":0},"end":{"line":339,"column":3}},"77":{"start":{"line":340,"column":0},"end":{"line":343,"column":3}},"78":{"start":{"line":344,"column":0},"end":{"line":347,"column":3}},"79":{"start":{"line":348,"column":0},"end":{"line":351,"column":3}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":27},"end":{"line":43,"column":5}},"line":39},"8":{"name":"(anonymous_8)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":42},"end":{"line":48,"column":5}},"line":44},"9":{"name":"(anonymous_9)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":20},"end":{"line":55,"column":5}},"line":49},"10":{"name":"(anonymous_10)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":20},"end":{"line":62,"column":5}},"line":56},"11":{"name":"(anonymous_11)","decl":{"start":{"line":63,"column":4},"end":{"line":63,"column":5}},"loc":{"start":{"line":63,"column":22},"end":{"line":69,"column":5}},"line":63},"12":{"name":"(anonymous_12)","decl":{"start":{"line":70,"column":4},"end":{"line":70,"column":5}},"loc":{"start":{"line":70,"column":36},"end":{"line":76,"column":5}},"line":70},"13":{"name":"(anonymous_13)","decl":{"start":{"line":77,"column":4},"end":{"line":77,"column":5}},"loc":{"start":{"line":77,"column":30},"end":{"line":81,"column":5}},"line":77},"14":{"name":"(anonymous_14)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":40},"end":{"line":88,"column":5}},"line":82},"15":{"name":"(anonymous_15)","decl":{"start":{"line":89,"column":4},"end":{"line":89,"column":5}},"loc":{"start":{"line":89,"column":45},"end":{"line":95,"column":5}},"line":89},"16":{"name":"addGatekeeper","decl":{"start":{"line":107,"column":9},"end":{"line":107,"column":22}},"loc":{"start":{"line":107,"column":79},"end":{"line":122,"column":1}},"line":107},"17":{"name":"revokeGatekeeper","decl":{"start":{"line":133,"column":9},"end":{"line":133,"column":25}},"loc":{"start":{"line":133,"column":85},"end":{"line":146,"column":1}},"line":133},"18":{"name":"issueVanilla","decl":{"start":{"line":161,"column":9},"end":{"line":161,"column":21}},"loc":{"start":{"line":161,"column":134},"end":{"line":178,"column":1}},"line":161},"19":{"name":"(anonymous_19)","decl":{"start":{"line":180,"column":34},"end":{"line":180,"column":35}},"loc":{"start":{"line":180,"column":99},"end":{"line":184,"column":1}},"line":180},"20":{"name":"revoke","decl":{"start":{"line":192,"column":9},"end":{"line":192,"column":15}},"loc":{"start":{"line":192,"column":77},"end":{"line":200,"column":1}},"line":192},"21":{"name":"freeze","decl":{"start":{"line":209,"column":9},"end":{"line":209,"column":15}},"loc":{"start":{"line":209,"column":77},"end":{"line":217,"column":1}},"line":209},"22":{"name":"unfreeze","decl":{"start":{"line":226,"column":9},"end":{"line":226,"column":17}},"loc":{"start":{"line":226,"column":79},"end":{"line":234,"column":1}},"line":226},"23":{"name":"updateExpiry","decl":{"start":{"line":244,"column":9},"end":{"line":244,"column":21}},"loc":{"start":{"line":244,"column":95},"end":{"line":256,"column":1}},"line":244},"24":{"name":"addFeatureToNetwork","decl":{"start":{"line":265,"column":9},"end":{"line":265,"column":28}},"loc":{"start":{"line":265,"column":54},"end":{"line":281,"column":1}},"line":265},"25":{"name":"(anonymous_25)","decl":{"start":{"line":266,"column":43},"end":{"line":266,"column":44}},"loc":{"start":{"line":266,"column":56},"end":{"line":280,"column":5}},"line":266},"26":{"name":"removeFeatureFromNetwork","decl":{"start":{"line":290,"column":9},"end":{"line":290,"column":33}},"loc":{"start":{"line":290,"column":59},"end":{"line":306,"column":1}},"line":290},"27":{"name":"(anonymous_27)","decl":{"start":{"line":291,"column":43},"end":{"line":291,"column":44}},"loc":{"start":{"line":291,"column":56},"end":{"line":305,"column":5}},"line":291}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":1,"31":1,"32":1,"33":1,"34":0,"35":0,"36":0,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/instruction.ts","sources":["/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/instruction.ts"],"names":[],"mappings":"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","sourcesContent":["import { Assignable, Enum, SCHEMA } from \"./solanaBorsh\";\nimport { PROGRAM_ID } from \"./constants\";\nimport {\n  AccountMeta,\n  PublicKey,\n  SystemProgram,\n  SYSVAR_RENT_PUBKEY,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\nimport { Active, Frozen, GatewayTokenState, Revoked } from \"./GatewayTokenData\";\nimport { NetworkFeature, UserTokenExpiry } from \"./GatewayNetworkData\";\nimport { getFeatureAccountAddress } from \"./util\";\n\n/**\n * Creates instructions to send to the gateway program.\n *\n * Must match solana/program/src/instruction.rs\n */\n\nclass AddGatekeeper extends Assignable {}\nclass IssueVanilla extends Assignable {\n  seed?: Uint8Array;\n  expireTime?: number;\n}\nclass SetState extends Assignable {\n  state!: GatewayTokenState;\n}\nclass UpdateExpiry extends Assignable {\n  expireTime!: number;\n}\nclass RevokeGatekeeper extends Assignable {}\nclass AddFeatureToNetwork extends Assignable {\n  feature!: NetworkFeature;\n}\nclass RemoveFeatureFromNetwork extends Assignable {\n  feature!: NetworkFeature;\n}\n\nexport class GatewayInstruction extends Enum {\n  addGatekeeper?: AddGatekeeper;\n  issueVanilla?: IssueVanilla;\n  setState?: SetState;\n  updateExpiry?: UpdateExpiry;\n  revokeGatekeeper?: RevokeGatekeeper;\n  addFeatureToNetwork?: AddFeatureToNetwork;\n  removeFeatureFromNetwork?: RemoveFeatureFromNetwork;\n\n  static addGatekeeper(): GatewayInstruction {\n    return new GatewayInstruction({\n      addGatekeeper: new AddGatekeeper({}),\n    });\n  }\n\n  static issueVanilla(\n    seed?: Uint8Array,\n    expireTime?: number\n  ): GatewayInstruction {\n    return new GatewayInstruction({\n      issueVanilla: new IssueVanilla({ seed, expireTime }),\n    });\n  }\n\n  static revoke(): GatewayInstruction {\n    return new GatewayInstruction({\n      setState: new SetState({\n        state: new GatewayTokenState({ revoked: new Revoked({}) }),\n      }),\n    });\n  }\n\n  static freeze(): GatewayInstruction {\n    return new GatewayInstruction({\n      setState: new SetState({\n        state: new GatewayTokenState({ frozen: new Frozen({}) }),\n      }),\n    });\n  }\n\n  static unfreeze(): GatewayInstruction {\n    return new GatewayInstruction({\n      setState: new SetState({\n        state: new GatewayTokenState({ active: new Active({}) }),\n      }),\n    });\n  }\n\n  static updateExpiry(expireTime: number): GatewayInstruction {\n    return new GatewayInstruction({\n      updateExpiry: new UpdateExpiry({\n        expireTime,\n      }),\n    });\n  }\n\n  static revokeGatekeeper(): GatewayInstruction {\n    return new GatewayInstruction({\n      revokeGatekeeper: new RevokeGatekeeper({}),\n    });\n  }\n\n  static addFeatureToNetwork(feature: NetworkFeature): GatewayInstruction {\n    return new GatewayInstruction({\n      addFeatureToNetwork: new AddFeatureToNetwork({\n        feature,\n      }),\n    });\n  }\n\n  static removeFeatureFromNetwork(feature: NetworkFeature): GatewayInstruction {\n    return new GatewayInstruction({\n      removeFeatureFromNetwork: new RemoveFeatureFromNetwork({\n        feature,\n      }),\n    });\n  }\n}\n\n/**\n * Add a gatekeeper to a gatekeeper network.\n * Returns a Solana instruction that must be signed by the gatekeeper network authority.\n *\n * @param payer The payer of the transaction (used to pay rent into the gatekeeper account)\n * @param gatekeeperAccount An uninitialised gatekeeper account PDA. The address must be derived via getGatekeeperAccountKeyFromGatekeeperAuthority()\n * @param gatekeeperAuthority The gatekeeper to add to the network\n * @param network The gatekeeper network that the account is being added to.\n */\nexport function addGatekeeper(\n  payer: PublicKey,\n  gatekeeperAccount: PublicKey,\n  gatekeeperAuthority: PublicKey,\n  network: PublicKey\n): TransactionInstruction {\n  const keys: AccountMeta[] = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: gatekeeperAccount, isSigner: false, isWritable: true },\n    { pubkey: gatekeeperAuthority, isSigner: false, isWritable: false },\n    { pubkey: network, isSigner: true, isWritable: false },\n    { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n  ];\n  const data = GatewayInstruction.addGatekeeper().encode();\n  return new TransactionInstruction({\n    keys,\n    programId: PROGRAM_ID,\n    data,\n  });\n}\n\n/**\n * Removes a gatekeeper from a gatekeeper network.\n * Returns a Solana instruction that must be signed by the gatekeeper network authority.\n *\n * @param funds_to The account the gatekeeper account's rent goes to\n * @param gatekeeperAccount The gatekeeper account PDA. The address must be derived via getGatekeeperAccountKeyFromGatekeeperAuthority()\n * @param gatekeeperAuthority The gatekeeper to remove from the network\n * @param network The gatekeeper network that the account is being removed from.\n */\nexport function revokeGatekeeper(\n  funds_to: PublicKey,\n  gatekeeperAccount: PublicKey,\n  gatekeeperAuthority: PublicKey,\n  network: PublicKey\n): TransactionInstruction {\n  const keys: AccountMeta[] = [\n    { pubkey: funds_to, isSigner: false, isWritable: true },\n    { pubkey: gatekeeperAccount, isSigner: false, isWritable: true },\n    { pubkey: gatekeeperAuthority, isSigner: false, isWritable: false },\n    { pubkey: network, isSigner: true, isWritable: false },\n  ];\n  const data = GatewayInstruction.revokeGatekeeper().encode();\n  return new TransactionInstruction({\n    keys,\n    programId: PROGRAM_ID,\n    data,\n  });\n}\n\n/**\n * Issue a gateway token to the owner publicKey. This is a 'vanilla' token, in that it does not\n * rely on any other accounts (e.g. identity accounts) to validate.\n * Returns a Solana instruction that must be signed by the gatekeeper authority.\n * @param gatewayTokenAccount An uninitialised gateway token account PDA. The address must be derived via getGatewayTokenAddressForOwnerAndGatekeeperNetwork\n * @param payer The payer of the transaction (used to pay rent into the gatekeeper account).\n * @param gatekeeperAccount The account in the gatekeeper network of the gatekeeper issuing the token\n * @param owner The recipient of the token\n * @param gatekeeperAuthority The gatekeeper issuing the token\n * @param gatekeeperNetwork The network that the gatekeeper belongs to\n * @param seed An 8-byte seed array, used to add multiple tokens to the same owner. Must be unique to each token, if present\n * @param expireTime The unix timestamp at which the token is no longer valid\n */\nexport function issueVanilla(\n  gatewayTokenAccount: PublicKey,\n  payer: PublicKey,\n  gatekeeperAccount: PublicKey,\n  owner: PublicKey,\n  gatekeeperAuthority: PublicKey,\n  gatekeeperNetwork: PublicKey,\n  seed?: Uint8Array,\n  expireTime?: number\n): TransactionInstruction {\n  const keys: AccountMeta[] = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: gatewayTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: owner, isSigner: false, isWritable: false },\n    { pubkey: gatekeeperAccount, isSigner: false, isWritable: false },\n    { pubkey: gatekeeperAuthority, isSigner: true, isWritable: false },\n    { pubkey: gatekeeperNetwork, isSigner: false, isWritable: false },\n    { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n  ];\n  const data = GatewayInstruction.issueVanilla(seed, expireTime).encode();\n  return new TransactionInstruction({\n    keys,\n    programId: PROGRAM_ID,\n    data,\n  });\n}\n\nconst getStateChangeAccountMeta = (\n  gatewayTokenAccount: PublicKey,\n  gatekeeperAuthority: PublicKey,\n  gatekeeperAccount: PublicKey\n): AccountMeta[] => [\n  { pubkey: gatewayTokenAccount, isSigner: false, isWritable: true },\n  { pubkey: gatekeeperAuthority, isSigner: true, isWritable: false },\n  { pubkey: gatekeeperAccount, isSigner: false, isWritable: false },\n];\n\n/**\n * Revoke a gateway token.\n * Returns a Solana instruction that must be signed by the gatekeeper authority.\n * @param gatewayTokenAccount The gateway token to revoke\n * @param gatekeeperAuthority The gatekeeper revoking the token (must be in the same network as the issuing gatekeeper)\n * @param gatekeeperAccount The account in the gatekeeper network of the gatekeeper revoking the token\n */\nexport function revoke(\n  gatewayTokenAccount: PublicKey,\n  gatekeeperAuthority: PublicKey,\n  gatekeeperAccount: PublicKey\n): TransactionInstruction {\n  const keys: AccountMeta[] = getStateChangeAccountMeta(\n    gatewayTokenAccount,\n    gatekeeperAuthority,\n    gatekeeperAccount\n  );\n  const data = GatewayInstruction.revoke().encode();\n  return new TransactionInstruction({\n    keys,\n    programId: PROGRAM_ID,\n    data,\n  });\n}\n\n/**\n * Freeze a gateway token.\n * Returns a Solana instruction that must be signed by the gatekeeper authority.\n * @param gatewayTokenAccount The gateway token to freeze\n * @param gatekeeperAuthority The gatekeeper freezing the token (must be equal to the issuing gatekeeper)\n * @param gatekeeperAccount The account in the gatekeeper network of the gatekeeper freezing the token\n */\nexport function freeze(\n  gatewayTokenAccount: PublicKey,\n  gatekeeperAuthority: PublicKey,\n  gatekeeperAccount: PublicKey\n): TransactionInstruction {\n  const keys: AccountMeta[] = getStateChangeAccountMeta(\n    gatewayTokenAccount,\n    gatekeeperAuthority,\n    gatekeeperAccount\n  );\n  const data = GatewayInstruction.freeze().encode();\n  return new TransactionInstruction({\n    keys,\n    programId: PROGRAM_ID,\n    data,\n  });\n}\n\n/**\n * Unfreeze a gateway token.\n * Returns a Solana instruction that must be signed by the gatekeeper authority.\n * @param gatewayTokenAccount The gateway token to unfreeze\n * @param gatekeeperAuthority The gatekeeper unfreezing the token (must be equal to the issuing gatekeeper)\n * @param gatekeeperAccount The account in the gatekeeper network of the gatekeeper unfreezing the token\n */\nexport function unfreeze(\n  gatewayTokenAccount: PublicKey,\n  gatekeeperAuthority: PublicKey,\n  gatekeeperAccount: PublicKey\n): TransactionInstruction {\n  const keys: AccountMeta[] = getStateChangeAccountMeta(\n    gatewayTokenAccount,\n    gatekeeperAuthority,\n    gatekeeperAccount\n  );\n  const data = GatewayInstruction.unfreeze().encode();\n  return new TransactionInstruction({\n    keys,\n    programId: PROGRAM_ID,\n    data,\n  });\n}\n\n/**\n * Update the expiry time of a gateway token.\n * Returns a Solana instruction that must be signed by the gatekeeper authority.\n * @param gatewayTokenAccount The gateway token to be updated (must have an expiry time)\n * @param gatekeeperAuthority The gatekeeper (must be equal to the issuing gatekeeper)\n * @param gatekeeperAccount The account in the gatekeeper network of the gatekeeper\n * @param expireTime The new expiry time\n */\nexport function updateExpiry(\n  gatewayTokenAccount: PublicKey,\n  gatekeeperAuthority: PublicKey,\n  gatekeeperAccount: PublicKey,\n  expireTime: number\n): TransactionInstruction {\n  const keys: AccountMeta[] = [\n    { pubkey: gatewayTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: gatekeeperAuthority, isSigner: true, isWritable: false },\n    { pubkey: gatekeeperAccount, isSigner: false, isWritable: false },\n  ];\n  const data = GatewayInstruction.updateExpiry(expireTime).encode();\n  return new TransactionInstruction({\n    keys,\n    programId: PROGRAM_ID,\n    data,\n  });\n}\n\n/**\n * Add a feature to an existing Gatekeeper Network.\n * Returns a Solana instruction that must be signed by the gatekeeper authority.\n * @param payer The payer of the transaction (used to pay rent into the gatekeeper account)\n * @param network The gatekeeper network that the account is being added to.\n * @param feature The NetworkFeature Enum value\n */\nexport async function addFeatureToNetwork(\n  payer: PublicKey,\n  network: PublicKey,\n  feature: NetworkFeature\n): Promise<TransactionInstruction> {\n  const featureAccount = await getFeatureAccountAddress(feature, network);\n\n  const keys: AccountMeta[] = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: network, isSigner: true, isWritable: false },\n    { pubkey: featureAccount, isSigner: false, isWritable: true },\n    { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n  ];\n  const data = GatewayInstruction.addFeatureToNetwork(feature).encode();\n  return new TransactionInstruction({\n    keys,\n    programId: PROGRAM_ID,\n    data,\n  });\n}\n\n/**\n * Remove a feature to an existing Gatekeeper Network.\n * Returns a Solana instruction that must be signed by the gatekeeper authority.\n * @param payer The payer of the transaction (used to pay rent into the gatekeeper account)\n * @param network The gatekeeper network that the account is being added to.\n * @param feature The NetworkFeature Enum value\n */\nexport async function removeFeatureFromNetwork(\n  payer: PublicKey,\n  network: PublicKey,\n  feature: NetworkFeature\n): Promise<TransactionInstruction> {\n  const featureAccount = await getFeatureAccountAddress(feature, network);\n\n  const keys: AccountMeta[] = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: network, isSigner: true, isWritable: false },\n    { pubkey: featureAccount, isSigner: false, isWritable: true },\n    { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n  ];\n  const data = GatewayInstruction.removeFeatureFromNetwork(feature).encode();\n  return new TransactionInstruction({\n    keys,\n    programId: PROGRAM_ID,\n    data,\n  });\n}\n\nSCHEMA.set(GatewayInstruction, {\n  kind: \"enum\",\n  field: \"enum\",\n  values: [\n    [\"addGatekeeper\", AddGatekeeper],\n    [\"issueVanilla\", IssueVanilla],\n    [\"setState\", SetState],\n    [\"updateExpiry\", UpdateExpiry],\n    [\"revokeGatekeeper\", RevokeGatekeeper],\n    [\"addFeatureToNetwork\", AddFeatureToNetwork],\n    [\"removeFeatureFromNetwork\", RemoveFeatureFromNetwork],\n  ],\n});\nSCHEMA.set(AddGatekeeper, {\n  kind: \"struct\",\n  fields: [],\n});\nSCHEMA.set(IssueVanilla, {\n  kind: \"struct\",\n  fields: [\n    [\"seed\", { kind: \"option\", type: [8] }],\n    [\"expireTime\", { kind: \"option\", type: \"u64\" }],\n  ],\n});\nSCHEMA.set(SetState, {\n  kind: \"struct\",\n  fields: [[\"state\", GatewayTokenState]],\n});\nSCHEMA.set(UpdateExpiry, {\n  kind: \"struct\",\n  fields: [[\"expireTime\", \"u64\"]],\n});\nSCHEMA.set(RevokeGatekeeper, {\n  kind: \"struct\",\n  fields: [],\n});\nSCHEMA.set(AddFeatureToNetwork, {\n  kind: \"struct\",\n  fields: [[\"state\", NetworkFeature]],\n});\nSCHEMA.set(RemoveFeatureFromNetwork, {\n  kind: \"struct\",\n  fields: [[\"state\", NetworkFeature]],\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d3e993254baaf295557601616dfd76daa4dd1fb1","contentHash":"8f909b82bf96860ba4040154c52088f234965210c8eb127f31b2af5925a4928d"},"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/solanaBorsh.ts":{"path":"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/solanaBorsh.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":60}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"4":{"start":{"line":9,"column":8},"end":{"line":14,"column":11}},"5":{"start":{"line":13,"column":12},"end":{"line":13,"column":40}},"6":{"start":{"line":17,"column":8},"end":{"line":17,"column":73}},"7":{"start":{"line":20,"column":8},"end":{"line":20,"column":68}},"8":{"start":{"line":23,"column":0},"end":{"line":23,"column":32}},"9":{"start":{"line":28,"column":8},"end":{"line":28,"column":26}},"10":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"11":{"start":{"line":30,"column":12},"end":{"line":30,"column":63}},"12":{"start":{"line":32,"column":8},"end":{"line":32,"column":23}},"13":{"start":{"line":33,"column":8},"end":{"line":35,"column":11}},"14":{"start":{"line":34,"column":12},"end":{"line":34,"column":28}},"15":{"start":{"line":38,"column":0},"end":{"line":38,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":28},"end":{"line":15,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":40},"end":{"line":9,"column":41}},"loc":{"start":{"line":9,"column":49},"end":{"line":14,"column":9}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":13},"end":{"line":18,"column":5}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":24},"end":{"line":21,"column":5}},"line":19},"4":{"name":"(anonymous_4)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":28},"end":{"line":36,"column":5}},"line":27},"5":{"name":"(anonymous_5)","decl":{"start":{"line":33,"column":40},"end":{"line":33,"column":41}},"loc":{"start":{"line":33,"column":49},"end":{"line":35,"column":9}},"line":33}},"branchMap":{"0":{"loc":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},{"start":{"line":29,"column":8},"end":{"line":31,"column":9}}],"line":29}},"s":{"0":1,"1":1,"2":1,"3":1,"4":104,"5":192,"6":10,"7":8,"8":1,"9":20,"10":20,"11":0,"12":20,"13":20,"14":20,"15":1},"f":{"0":104,"1":192,"2":10,"3":8,"4":20,"5":20},"b":{"0":[0,20]},"inputSourceMap":{"version":3,"file":"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/solanaBorsh.ts","sources":["/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/solanaBorsh.ts"],"names":[],"mappings":";;;AAAA,iCAAuD;AAE1C,QAAA,MAAM,GAAW,IAAI,GAAG,EAAE,CAAC;AAExC,gCAAgC;AAChC,MAAsB,UAAU;IAC9B,YAAY,UAAkC;QAC5C,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,GAAW,EAAE,EAAE;YAC9C,2CAA2C;YAC3C,yEAAyE;YACzE,aAAa;YACb,IAAI,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,OAAO,MAAM,CAAC,IAAI,CAAC,IAAA,iBAAS,EAAC,cAAM,EAAE,IAAI,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,MAAM,CAAC,MAAM,CAAuB,IAAY;QAC9C,OAAO,IAAA,mBAAW,EAAC,cAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACzC,CAAC;CACF;AAjBD,gCAiBC;AAED,6EAA6E;AAC7E,qBAAqB;AACrB,MAAsB,IAAK,SAAQ,UAAU;IAG3C,YAAY,UAAe;QACzB,KAAK,CAAC,UAAU,CAAC,CAAC;QAClB,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YACxC,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;SACpD;QACD,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YACtC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAbD,oBAaC","sourcesContent":["import { Schema, serialize, deserialize } from \"borsh\";\n\nexport const SCHEMA: Schema = new Map();\n\n// Class wrapping a plain object\nexport abstract class Assignable {\n  constructor(properties: { [key: string]: any }) {\n    Object.keys(properties).forEach((key: string) => {\n      // this is probably possible in Typescript,\n      // but requires (keyof this) which is not possible in the the constructor\n      // @ts-ignore\n      this[key] = properties[key];\n    });\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SCHEMA, this));\n  }\n\n  static decode<T extends Assignable>(data: Buffer): T {\n    return deserialize(SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport abstract class Enum extends Assignable {\n  enum: string;\n\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error(\"Enum can only take single value\");\n    }\n    this.enum = \"\";\n    Object.keys(properties).forEach((key) => {\n      this.enum = key;\n    });\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"367622384eae5c19f79a8b89112db045848e4ec0","contentHash":"af93e6dc36fdbe0e38fc35066cc702651d448287dc2b8bf3fcf90ff0d568cba4"},"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/constants.ts":{"path":"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/constants.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":270}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":44}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":92}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":52}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":47}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":40}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":35}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":40}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":40}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":41}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/constants.ts","sources":["/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/constants.ts"],"names":[],"mappings":";;;AAAA,6CAAwD;AAExD,4DAA4D;AAC/C,QAAA,UAAU,GAAc,IAAI,mBAAS,CAChD,6CAA6C,CAC9C,CAAC;AACW,QAAA,4BAA4B,GAAG,YAAY,CAAC,CAAC,qDAAqD;AAClG,QAAA,0BAA0B,GAAG,SAAS,CAAC,CAAC,qDAAqD;AAE7F,QAAA,iBAAiB,GAAe,WAAW,CAAC;AAC5C,QAAA,sBAAsB,GAAW,CAAC,CAAC;AAChD,6CAA6C;AAChC,QAAA,wBAAwB,GAAG,IAAI,CAAC;AAChC,QAAA,wBAAwB,GAAG,IAAI,CAAC;AAChC,QAAA,wBAAwB,GAAG,KAAK,CAAC","sourcesContent":["import { Commitment, PublicKey } from \"@solana/web3.js\";\n\n// Should equal the contents of solana/program/program-id.md\nexport const PROGRAM_ID: PublicKey = new PublicKey(\n  \"gatem74V238djXdzWnJf94Wo1DcnuGkfijbf3AuBhfs\"\n);\nexport const GATEKEEPER_NONCE_SEED_STRING = \"gatekeeper\"; // must match get_inbox_address_with_seed in state.rs\nexport const GATEWAY_TOKEN_ADDRESS_SEED = \"gateway\"; // must match get_inbox_address_with_seed in state.rs\n\nexport const SOLANA_COMMITMENT: Commitment = \"confirmed\";\nexport const DEFAULT_SOLANA_RETRIES: number = 3;\n// Timeouts vary depending on the commitment.\nexport const SOLANA_TIMEOUT_PROCESSED = 3000;\nexport const SOLANA_TIMEOUT_CONFIRMED = 7000;\nexport const SOLANA_TIMEOUT_FINALIZED = 10000;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3414463f74b0a2ac322dbb550d80f9479b8762c5","contentHash":"4bea1349d484d381a7dc9592f13846dd7dc4ba10497ca005e299cab4e7731801"},"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/GatewayTokenData.ts":{"path":"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/GatewayTokenData.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":114}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":22},"end":{"line":5,"column":46}},"4":{"start":{"line":6,"column":30},"end":{"line":6,"column":62}},"5":{"start":{"line":19,"column":8},"end":{"line":19,"column":52}},"6":{"start":{"line":22,"column":8},"end":{"line":22,"column":159}},"7":{"start":{"line":25,"column":8},"end":{"line":27,"column":11}},"8":{"start":{"line":30,"column":0},"end":{"line":30,"column":44}},"9":{"start":{"line":33,"column":0},"end":{"line":33,"column":24}},"10":{"start":{"line":36,"column":0},"end":{"line":36,"column":24}},"11":{"start":{"line":39,"column":0},"end":{"line":39,"column":26}},"12":{"start":{"line":42,"column":0},"end":{"line":42,"column":46}},"13":{"start":{"line":43,"column":0},"end":{"line":55,"column":3}},"14":{"start":{"line":56,"column":0},"end":{"line":64,"column":3}},"15":{"start":{"line":65,"column":0},"end":{"line":65,"column":65}},"16":{"start":{"line":66,"column":0},"end":{"line":66,"column":65}},"17":{"start":{"line":67,"column":0},"end":{"line":67,"column":66}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":36},"end":{"line":20,"column":5}},"line":18},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":28},"end":{"line":23,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":24},"end":{"line":28,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":75},"end":{"line":26,"column":122}},"type":"binary-expr","locations":[{"start":{"line":26,"column":75},"end":{"line":26,"column":80}},{"start":{"line":26,"column":84},"end":{"line":26,"column":122}}],"line":26}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":8,"6":0,"7":0,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1},"f":{"0":8,"1":0,"2":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/GatewayTokenData.ts","sources":["/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/GatewayTokenData.ts"],"names":[],"mappings":";;;AAAA,6CAAqD;AACrD,+CAAyD;AACzD,+DAA4D;AAG5D;;;;;;;;;GASG;AACH,MAAa,gBAAiB,SAAQ,wBAAU;IAO9C,MAAM,CAAC,WAAW,CAAC,WAAmB;QACpC,OAAO,gBAAgB,CAAC,MAAM,CAAmB,WAAW,CAAC,CAAC;IAChE,CAAC;IAED,YAAY,CAAC,SAAoB;QAC/B,OAAO,IAAI,gBAAgB,iCACtB,IAAI,KACP,SAAS,EAAE,yCAAmB,CAAC,aAAa,CAAC,SAAS,CAAC,IACvD,CAAC;IACL,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,KAAiB;QAC5B,OAAO,IAAI,gBAAgB,CAAC;YAC1B,KAAK,EAAE,yCAAmB,CAAC,aAAa,CACtC,KAAK,IAAI,iBAAO,CAAC,QAAQ,EAAE,CAAC,SAAS,CACtC;SACF,CAAC,CAAC;IACL,CAAC;CACF;AAzBD,4CAyBC;AAED,MAAa,MAAO,SAAQ,wBAAU;CAAG;AAAzC,wBAAyC;AACzC,MAAa,MAAO,SAAQ,wBAAU;CAAG;AAAzC,wBAAyC;AACzC,MAAa,OAAQ,SAAQ,wBAAU;CAAG;AAA1C,0BAA0C;AAC1C,MAAa,iBAAkB,SAAQ,kBAAI;CAI1C;AAJD,8CAIC;AAED,oBAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE;IAC3B,IAAI,EAAE,QAAQ;IACd,MAAM,EAAE;QACN,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC,oBAAoB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,yCAAmB,EAAE,CAAC;QACrE,CAAC,OAAO,EAAE,yCAAmB,CAAC;QAC9B,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,yCAAmB,EAAE,CAAC;QAChE,CAAC,mBAAmB,EAAE,yCAAmB,CAAC;QAC1C,CAAC,mBAAmB,EAAE,yCAAmB,CAAC;QAC1C,CAAC,OAAO,EAAE,iBAAiB,CAAC;QAC5B,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;KAC5C;CACF,CAAC,CAAC;AACH,oBAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE;IAC5B,IAAI,EAAE,MAAM;IACZ,KAAK,EAAE,MAAM;IACb,MAAM,EAAE;QACN,CAAC,QAAQ,EAAE,MAAM,CAAC;QAClB,CAAC,QAAQ,EAAE,MAAM,CAAC;QAClB,CAAC,SAAS,EAAE,OAAO,CAAC;KACrB;CACF,CAAC,CAAC;AACH,oBAAM,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;AACnD,oBAAM,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;AACnD,oBAAM,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC","sourcesContent":["import { Keypair, PublicKey } from \"@solana/web3.js\";\nimport { Assignable, Enum, SCHEMA } from \"./solanaBorsh\";\nimport { AssignablePublicKey } from \"./AssignablePublicKey\";\nimport BN from \"bn.js\";\n\n/**\n * The on-chain structure of a gateway token.\n * Matches: solana/integration-lib/src/state.rs\n *\n * The pattern for these objects is to have their properties dynamically\n * assigned by borsh.decode, as opposed to via a constructor.\n *\n * The imperative assignment operator (!) is used to avoid Typescript\n * complaining about the above.\n */\nexport class GatewayTokenData extends Assignable {\n  owner!: AssignablePublicKey;\n  issuingGatekeeper!: AssignablePublicKey;\n  gatekeeperNetwork!: AssignablePublicKey;\n  state!: GatewayTokenState;\n  expiry?: BN; // u64 mapped as a hex string by Borsh\n\n  static fromAccount(accountData: Buffer): GatewayTokenData {\n    return GatewayTokenData.decode<GatewayTokenData>(accountData);\n  }\n\n  forAuthority(authority: PublicKey) {\n    return new GatewayTokenData({\n      ...this,\n      authority: AssignablePublicKey.fromPublicKey(authority),\n    });\n  }\n\n  static empty(owner?: PublicKey): GatewayTokenData {\n    return new GatewayTokenData({\n      owner: AssignablePublicKey.fromPublicKey(\n        owner || Keypair.generate().publicKey\n      ),\n    });\n  }\n}\n\nexport class Active extends Assignable {}\nexport class Frozen extends Assignable {}\nexport class Revoked extends Assignable {}\nexport class GatewayTokenState extends Enum {\n  active?: Active;\n  frozen?: Frozen;\n  revoked?: Revoked;\n}\n\nSCHEMA.set(GatewayTokenData, {\n  kind: \"struct\",\n  fields: [\n    [\"features\", [1]],\n    [\"parentGatewayToken\", { kind: \"option\", type: AssignablePublicKey }],\n    [\"owner\", AssignablePublicKey],\n    [\"ownerIdentity\", { kind: \"option\", type: AssignablePublicKey }],\n    [\"gatekeeperNetwork\", AssignablePublicKey],\n    [\"issuingGatekeeper\", AssignablePublicKey],\n    [\"state\", GatewayTokenState],\n    [\"expiry\", { kind: \"option\", type: \"u64\" }],\n  ],\n});\nSCHEMA.set(GatewayTokenState, {\n  kind: \"enum\",\n  field: \"enum\",\n  values: [\n    [\"active\", Active],\n    [\"frozen\", Frozen],\n    [\"revoked\", Revoked],\n  ],\n});\nSCHEMA.set(Active, { kind: \"struct\", fields: [] });\nSCHEMA.set(Frozen, { kind: \"struct\", fields: [] });\nSCHEMA.set(Revoked, { kind: \"struct\", fields: [] });\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2b8947ce8653f691f86ba0af7524864cb398219f","contentHash":"797319edaa83bab614e1979de2421c27f9af9d4d74a6151ab56974ae10b69b35"},"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/AssignablePublicKey.ts":{"path":"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/AssignablePublicKey.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":46}},"3":{"start":{"line":5,"column":18},"end":{"line":5,"column":44}},"4":{"start":{"line":17,"column":8},"end":{"line":17,"column":51}},"5":{"start":{"line":20,"column":8},"end":{"line":20,"column":45}},"6":{"start":{"line":23,"column":8},"end":{"line":23,"column":82}},"7":{"start":{"line":26,"column":8},"end":{"line":28,"column":11}},"8":{"start":{"line":31,"column":22},"end":{"line":31,"column":35}},"9":{"start":{"line":32,"column":8},"end":{"line":32,"column":22}},"10":{"start":{"line":33,"column":8},"end":{"line":33,"column":50}},"11":{"start":{"line":36,"column":0},"end":{"line":36,"column":50}},"12":{"start":{"line":37,"column":0},"end":{"line":40,"column":3}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":18},"end":{"line":18,"column":5}},"line":16},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":15},"end":{"line":21,"column":5}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":25},"end":{"line":24,"column":5}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":36},"end":{"line":29,"column":5}},"line":25},"4":{"name":"(anonymous_4)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":19},"end":{"line":34,"column":5}},"line":30}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":24,"5":0,"6":0,"7":24,"8":0,"9":0,"10":0,"11":1,"12":1},"f":{"0":24,"1":0,"2":0,"3":24,"4":0},"b":{},"inputSourceMap":{"version":3,"file":"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/AssignablePublicKey.ts","sources":["/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/AssignablePublicKey.ts"],"names":[],"mappings":";;;AAAA,+CAAmD;AACnD,6CAA4C;AAE5C;;;;;;;;GAQG;AACH,MAAa,mBAAoB,SAAQ,wBAAU;IAIjD,WAAW;QACT,OAAO,IAAI,mBAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,CAAC;IACvC,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,MAAc;QACzB,OAAO,mBAAmB,CAAC,aAAa,CAAC,IAAI,mBAAS,CAAC,MAAM,CAAC,CAAC,CAAC;IAClE,CAAC;IAED,MAAM,CAAC,aAAa,CAAC,SAAoB;QACvC,OAAO,IAAI,mBAAmB,CAAC;YAC7B,KAAK,EAAE,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;SAC7C,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,KAAK;QACV,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC;QAC5B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACd,OAAO,IAAI,mBAAmB,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IAC5C,CAAC;CACF;AA3BD,kDA2BC;AAED,oBAAM,CAAC,GAAG,CAAC,mBAAmB,EAAE;IAC9B,IAAI,EAAE,QAAQ;IACd,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;CAC1B,CAAC,CAAC","sourcesContent":["import { Assignable, SCHEMA } from \"./solanaBorsh\";\nimport { PublicKey } from \"@solana/web3.js\";\n\n/**\n * A Borsh-compatible public key object\n *\n * The pattern for these objects is to have their properties dynamically\n * assigned by borsh.decode, as opposed to via a constructor.\n *\n * The imperative assignment operator (!) is used to avoid Typescript\n * complaining about the above.\n */\nexport class AssignablePublicKey extends Assignable {\n  // The public key bytes\n  bytes!: number[];\n\n  toPublicKey(): PublicKey {\n    return new PublicKey(this.bytes);\n  }\n\n  toString(): string {\n    return this.toPublicKey().toBase58();\n  }\n\n  static parse(pubkey: string): AssignablePublicKey {\n    return AssignablePublicKey.fromPublicKey(new PublicKey(pubkey));\n  }\n\n  static fromPublicKey(publicKey: PublicKey): AssignablePublicKey {\n    return new AssignablePublicKey({\n      bytes: Uint8Array.from(publicKey.toBuffer()),\n    });\n  }\n\n  static empty(): AssignablePublicKey {\n    const bytes = new Array(32);\n    bytes.fill(0);\n    return new AssignablePublicKey({ bytes });\n  }\n}\n\nSCHEMA.set(AssignablePublicKey, {\n  kind: \"struct\",\n  fields: [[\"bytes\", [32]]],\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d6a9e6e1e7f363cf8e04175450e256543f84af1b","contentHash":"73253825de4cd5e059a48ebfd7cd9706b0c2ab0cf13f328d2cd7a8e5916ae84b"},"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/GatewayNetworkData.ts":{"path":"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/GatewayNetworkData.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":89}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":46}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":40}},"5":{"start":{"line":11,"column":0},"end":{"line":15,"column":3}},"6":{"start":{"line":16,"column":0},"end":{"line":16,"column":74}},"7":{"start":{"line":17,"column":29},"end":{"line":22,"column":1}},"8":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":24}},"10":{"start":{"line":21,"column":4},"end":{"line":21,"column":21}},"11":{"start":{"line":23,"column":0},"end":{"line":23,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":17,"column":29},"end":{"line":17,"column":30}},"loc":{"start":{"line":17,"column":44},"end":{"line":22,"column":1}},"line":17}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},{"start":{"line":18,"column":4},"end":{"line":20,"column":5}}],"line":18}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":1},"f":{"0":1},"b":{"0":[1,0]},"inputSourceMap":{"version":3,"file":"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/GatewayNetworkData.ts","sources":["/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/GatewayNetworkData.ts"],"names":[],"mappings":";;;AAAA,+CAAyD;AAEzD,MAAa,eAAgB,SAAQ,wBAAU;CAAG;AAAlD,0CAAkD;AAClD,MAAa,cAAe,SAAQ,kBAAI;CAEvC;AAFD,wCAEC;AAED,oBAAM,CAAC,GAAG,CAAC,cAAc,EAAE;IACzB,IAAI,EAAE,MAAM;IACZ,KAAK,EAAE,MAAM;IACb,MAAM,EAAE,CAAC,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;CAC/C,CAAC,CAAC;AACH,oBAAM,CAAC,GAAG,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;AAErD,MAAM,oBAAoB,GAAG,CAAC,SAAiB,EAAE,EAAE;IACxD,IAAI,SAAS,KAAK,iBAAiB,EAAE;QACnC,OAAO,QAAQ,CAAC;KACjB;IAED,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC;AANW,QAAA,oBAAoB,wBAM/B","sourcesContent":["import { Assignable, Enum, SCHEMA } from \"./solanaBorsh\";\n\nexport class UserTokenExpiry extends Assignable {}\nexport class NetworkFeature extends Enum {\n  userTokenExpiry?: UserTokenExpiry;\n}\n\nSCHEMA.set(NetworkFeature, {\n  kind: \"enum\",\n  field: \"enum\",\n  values: [[\"userTokenExpiry\", UserTokenExpiry]],\n});\nSCHEMA.set(UserTokenExpiry, { kind: \"struct\", fields: [] });\n\nexport const mapEnumToFeatureName = (enumValue: string) => {\n  if (enumValue === \"userTokenExpiry\") {\n    return \"expire\";\n  }\n\n  return enumValue;\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"24876b6043dbe6d49057c9aea4b8a4c50487ede7","contentHash":"edfca72bdce873eabca1e912e4dcd4fb9a916f9e2c657b3568a6391be0ae4b56"},"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/util.ts":{"path":"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/util.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":371}},"14":{"start":{"line":13,"column":18},"end":{"line":13,"column":44}},"15":{"start":{"line":14,"column":20},"end":{"line":14,"column":42}},"16":{"start":{"line":15,"column":16},"end":{"line":15,"column":35}},"17":{"start":{"line":16,"column":27},"end":{"line":16,"column":56}},"18":{"start":{"line":17,"column":29},"end":{"line":17,"column":60}},"19":{"start":{"line":23,"column":36},"end":{"line":30,"column":2}},"20":{"start":{"line":23,"column":60},"end":{"line":30,"column":2}},"21":{"start":{"line":24,"column":27},"end":{"line":28,"column":30}},"22":{"start":{"line":29,"column":4},"end":{"line":29,"column":29}},"23":{"start":{"line":31,"column":0},"end":{"line":31,"column":66}},"24":{"start":{"line":38,"column":59},"end":{"line":55,"column":2}},"25":{"start":{"line":38,"column":95},"end":{"line":55,"column":2}},"26":{"start":{"line":39,"column":27},"end":{"line":41,"column":47}},"27":{"start":{"line":42,"column":4},"end":{"line":46,"column":5}},"28":{"start":{"line":43,"column":8},"end":{"line":45,"column":94}},"29":{"start":{"line":47,"column":18},"end":{"line":52,"column":5}},"30":{"start":{"line":53,"column":27},"end":{"line":53,"column":102}},"31":{"start":{"line":54,"column":4},"end":{"line":54,"column":29}},"32":{"start":{"line":56,"column":0},"end":{"line":56,"column":112}},"33":{"start":{"line":61,"column":49},"end":{"line":61,"column":50}},"34":{"start":{"line":63,"column":62},"end":{"line":63,"column":64}},"35":{"start":{"line":65,"column":4},"end":{"line":66,"column":36}},"36":{"start":{"line":66,"column":8},"end":{"line":66,"column":36}},"37":{"start":{"line":67,"column":4},"end":{"line":68,"column":37}},"38":{"start":{"line":68,"column":8},"end":{"line":68,"column":37}},"39":{"start":{"line":69,"column":4},"end":{"line":70,"column":36}},"40":{"start":{"line":70,"column":8},"end":{"line":70,"column":36}},"41":{"start":{"line":71,"column":4},"end":{"line":71,"column":67}},"42":{"start":{"line":73,"column":27},"end":{"line":76,"column":1}},"43":{"start":{"line":75,"column":4},"end":{"line":75,"column":279}},"44":{"start":{"line":77,"column":0},"end":{"line":77,"column":48}},"45":{"start":{"line":90,"column":26},"end":{"line":113,"column":2}},"46":{"start":{"line":90,"column":92},"end":{"line":113,"column":2}},"47":{"start":{"line":91,"column":24},"end":{"line":96,"column":5}},"48":{"start":{"line":97,"column":36},"end":{"line":102,"column":5}},"49":{"start":{"line":103,"column":20},"end":{"line":103,"column":58}},"50":{"start":{"line":104,"column":29},"end":{"line":106,"column":6}},"51":{"start":{"line":107,"column":4},"end":{"line":108,"column":18}},"52":{"start":{"line":108,"column":8},"end":{"line":108,"column":18}},"53":{"start":{"line":109,"column":27},"end":{"line":109,"column":155}},"54":{"start":{"line":109,"column":53},"end":{"line":109,"column":155}},"55":{"start":{"line":110,"column":4},"end":{"line":112,"column":98}},"56":{"start":{"line":112,"column":34},"end":{"line":112,"column":96}},"57":{"start":{"line":114,"column":0},"end":{"line":114,"column":46}},"58":{"start":{"line":122,"column":25},"end":{"line":128,"column":2}},"59":{"start":{"line":122,"column":67},"end":{"line":128,"column":2}},"60":{"start":{"line":123,"column":32},"end":{"line":123,"column":127}},"61":{"start":{"line":124,"column":20},"end":{"line":124,"column":103}},"62":{"start":{"line":125,"column":4},"end":{"line":126,"column":20}},"63":{"start":{"line":126,"column":8},"end":{"line":126,"column":20}},"64":{"start":{"line":127,"column":4},"end":{"line":127,"column":127}},"65":{"start":{"line":129,"column":0},"end":{"line":129,"column":44}},"66":{"start":{"line":138,"column":29},"end":{"line":144,"column":1}},"67":{"start":{"line":139,"column":28},"end":{"line":142,"column":5}},"68":{"start":{"line":140,"column":29},"end":{"line":140,"column":148}},"69":{"start":{"line":141,"column":8},"end":{"line":141,"column":31}},"70":{"start":{"line":143,"column":4},"end":{"line":143,"column":88}},"71":{"start":{"line":145,"column":0},"end":{"line":145,"column":52}},"72":{"start":{"line":151,"column":36},"end":{"line":151,"column":98}},"73":{"start":{"line":151,"column":56},"end":{"line":151,"column":98}},"74":{"start":{"line":152,"column":0},"end":{"line":152,"column":66}},"75":{"start":{"line":158,"column":24},"end":{"line":163,"column":2}},"76":{"start":{"line":158,"column":61},"end":{"line":163,"column":2}},"77":{"start":{"line":159,"column":20},"end":{"line":159,"column":103}},"78":{"start":{"line":160,"column":4},"end":{"line":161,"column":20}},"79":{"start":{"line":161,"column":8},"end":{"line":161,"column":20}},"80":{"start":{"line":162,"column":4},"end":{"line":162,"column":127}},"81":{"start":{"line":164,"column":0},"end":{"line":164,"column":42}},"82":{"start":{"line":171,"column":25},"end":{"line":175,"column":2}},"83":{"start":{"line":171,"column":81},"end":{"line":175,"column":2}},"84":{"start":{"line":172,"column":30},"end":{"line":172,"column":116}},"85":{"start":{"line":173,"column":20},"end":{"line":173,"column":101}},"86":{"start":{"line":174,"column":4},"end":{"line":174,"column":70}},"87":{"start":{"line":176,"column":0},"end":{"line":176,"column":44}},"88":{"start":{"line":182,"column":33},"end":{"line":186,"column":2}},"89":{"start":{"line":182,"column":55},"end":{"line":186,"column":2}},"90":{"start":{"line":183,"column":24},"end":{"line":183,"column":84}},"91":{"start":{"line":184,"column":27},"end":{"line":184,"column":150}},"92":{"start":{"line":185,"column":4},"end":{"line":185,"column":29}},"93":{"start":{"line":187,"column":0},"end":{"line":187,"column":60}},"94":{"start":{"line":193,"column":22},"end":{"line":197,"column":2}},"95":{"start":{"line":193,"column":56},"end":{"line":197,"column":2}},"96":{"start":{"line":194,"column":34},"end":{"line":194,"column":95}},"97":{"start":{"line":195,"column":20},"end":{"line":195,"column":105}},"98":{"start":{"line":196,"column":4},"end":{"line":196,"column":70}},"99":{"start":{"line":198,"column":0},"end":{"line":198,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":23,"column":36},"end":{"line":23,"column":37}},"loc":{"start":{"line":23,"column":60},"end":{"line":30,"column":2}},"line":23},"8":{"name":"(anonymous_8)","decl":{"start":{"line":23,"column":94},"end":{"line":23,"column":95}},"loc":{"start":{"line":23,"column":107},"end":{"line":30,"column":1}},"line":23},"9":{"name":"(anonymous_9)","decl":{"start":{"line":38,"column":59},"end":{"line":38,"column":60}},"loc":{"start":{"line":38,"column":95},"end":{"line":55,"column":2}},"line":38},"10":{"name":"(anonymous_10)","decl":{"start":{"line":38,"column":129},"end":{"line":38,"column":130}},"loc":{"start":{"line":38,"column":142},"end":{"line":55,"column":1}},"line":38},"11":{"name":"fromGatewayTokenState","decl":{"start":{"line":64,"column":9},"end":{"line":64,"column":30}},"loc":{"start":{"line":64,"column":38},"end":{"line":72,"column":1}},"line":64},"12":{"name":"(anonymous_12)","decl":{"start":{"line":73,"column":27},"end":{"line":73,"column":28}},"loc":{"start":{"line":73,"column":48},"end":{"line":76,"column":1}},"line":73},"13":{"name":"(anonymous_13)","decl":{"start":{"line":90,"column":26},"end":{"line":90,"column":27}},"loc":{"start":{"line":90,"column":92},"end":{"line":113,"column":2}},"line":90},"14":{"name":"(anonymous_14)","decl":{"start":{"line":90,"column":126},"end":{"line":90,"column":127}},"loc":{"start":{"line":90,"column":139},"end":{"line":113,"column":1}},"line":90},"15":{"name":"(anonymous_15)","decl":{"start":{"line":109,"column":27},"end":{"line":109,"column":28}},"loc":{"start":{"line":109,"column":53},"end":{"line":109,"column":155}},"line":109},"16":{"name":"(anonymous_16)","decl":{"start":{"line":112,"column":16},"end":{"line":112,"column":17}},"loc":{"start":{"line":112,"column":34},"end":{"line":112,"column":96}},"line":112},"17":{"name":"(anonymous_17)","decl":{"start":{"line":122,"column":25},"end":{"line":122,"column":26}},"loc":{"start":{"line":122,"column":67},"end":{"line":128,"column":2}},"line":122},"18":{"name":"(anonymous_18)","decl":{"start":{"line":122,"column":101},"end":{"line":122,"column":102}},"loc":{"start":{"line":122,"column":114},"end":{"line":128,"column":1}},"line":122},"19":{"name":"(anonymous_19)","decl":{"start":{"line":138,"column":29},"end":{"line":138,"column":30}},"loc":{"start":{"line":138,"column":120},"end":{"line":144,"column":1}},"line":138},"20":{"name":"(anonymous_20)","decl":{"start":{"line":139,"column":28},"end":{"line":139,"column":29}},"loc":{"start":{"line":139,"column":45},"end":{"line":142,"column":5}},"line":139},"21":{"name":"(anonymous_21)","decl":{"start":{"line":151,"column":36},"end":{"line":151,"column":37}},"loc":{"start":{"line":151,"column":56},"end":{"line":151,"column":98}},"line":151},"22":{"name":"(anonymous_22)","decl":{"start":{"line":158,"column":24},"end":{"line":158,"column":25}},"loc":{"start":{"line":158,"column":61},"end":{"line":163,"column":2}},"line":158},"23":{"name":"(anonymous_23)","decl":{"start":{"line":158,"column":95},"end":{"line":158,"column":96}},"loc":{"start":{"line":158,"column":108},"end":{"line":163,"column":1}},"line":158},"24":{"name":"(anonymous_24)","decl":{"start":{"line":171,"column":25},"end":{"line":171,"column":26}},"loc":{"start":{"line":171,"column":81},"end":{"line":175,"column":2}},"line":171},"25":{"name":"(anonymous_25)","decl":{"start":{"line":171,"column":115},"end":{"line":171,"column":116}},"loc":{"start":{"line":171,"column":128},"end":{"line":175,"column":1}},"line":171},"26":{"name":"(anonymous_26)","decl":{"start":{"line":182,"column":33},"end":{"line":182,"column":34}},"loc":{"start":{"line":182,"column":55},"end":{"line":186,"column":2}},"line":182},"27":{"name":"(anonymous_27)","decl":{"start":{"line":182,"column":89},"end":{"line":182,"column":90}},"loc":{"start":{"line":182,"column":102},"end":{"line":186,"column":1}},"line":182},"28":{"name":"(anonymous_28)","decl":{"start":{"line":193,"column":22},"end":{"line":193,"column":23}},"loc":{"start":{"line":193,"column":56},"end":{"line":197,"column":2}},"line":193},"29":{"name":"(anonymous_29)","decl":{"start":{"line":193,"column":90},"end":{"line":193,"column":91}},"loc":{"start":{"line":193,"column":103},"end":{"line":197,"column":1}},"line":193}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":39,"column":27},"end":{"line":41,"column":47}},"type":"cond-expr","locations":[{"start":{"line":40,"column":10},"end":{"line":40,"column":27}},{"start":{"line":41,"column":10},"end":{"line":41,"column":47}}],"line":39},"6":{"loc":{"start":{"line":42,"column":4},"end":{"line":46,"column":5}},"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":46,"column":5}},{"start":{"line":42,"column":4},"end":{"line":46,"column":5}}],"line":42},"7":{"loc":{"start":{"line":65,"column":4},"end":{"line":66,"column":36}},"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":66,"column":36}},{"start":{"line":65,"column":4},"end":{"line":66,"column":36}}],"line":65},"8":{"loc":{"start":{"line":67,"column":4},"end":{"line":68,"column":37}},"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":68,"column":37}},{"start":{"line":67,"column":4},"end":{"line":68,"column":37}}],"line":67},"9":{"loc":{"start":{"line":69,"column":4},"end":{"line":70,"column":36}},"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":36}},{"start":{"line":69,"column":4},"end":{"line":70,"column":36}}],"line":69},"10":{"loc":{"start":{"line":75,"column":208},"end":{"line":75,"column":277}},"type":"cond-expr","locations":[{"start":{"line":75,"column":255},"end":{"line":75,"column":261}},{"start":{"line":75,"column":264},"end":{"line":75,"column":277}}],"line":75},"11":{"loc":{"start":{"line":75,"column":208},"end":{"line":75,"column":252}},"type":"binary-expr","locations":[{"start":{"line":75,"column":208},"end":{"line":75,"column":235}},{"start":{"line":75,"column":239},"end":{"line":75,"column":252}}],"line":75},"12":{"loc":{"start":{"line":90,"column":65},"end":{"line":90,"column":87}},"type":"default-arg","locations":[{"start":{"line":90,"column":82},"end":{"line":90,"column":87}}],"line":90},"13":{"loc":{"start":{"line":100,"column":19},"end":{"line":100,"column":117}},"type":"cond-expr","locations":[{"start":{"line":100,"column":80},"end":{"line":100,"column":86}},{"start":{"line":100,"column":89},"end":{"line":100,"column":117}}],"line":100},"14":{"loc":{"start":{"line":100,"column":19},"end":{"line":100,"column":77}},"type":"binary-expr","locations":[{"start":{"line":100,"column":19},"end":{"line":100,"column":45}},{"start":{"line":100,"column":49},"end":{"line":100,"column":77}}],"line":100},"15":{"loc":{"start":{"line":107,"column":4},"end":{"line":108,"column":18}},"type":"if","locations":[{"start":{"line":107,"column":4},"end":{"line":108,"column":18}},{"start":{"line":107,"column":4},"end":{"line":108,"column":18}}],"line":107},"16":{"loc":{"start":{"line":112,"column":34},"end":{"line":112,"column":96}},"type":"binary-expr","locations":[{"start":{"line":112,"column":34},"end":{"line":112,"column":78}},{"start":{"line":112,"column":82},"end":{"line":112,"column":96}}],"line":112},"17":{"loc":{"start":{"line":125,"column":4},"end":{"line":126,"column":20}},"type":"if","locations":[{"start":{"line":125,"column":4},"end":{"line":126,"column":20}},{"start":{"line":125,"column":4},"end":{"line":126,"column":20}}],"line":125},"18":{"loc":{"start":{"line":138,"column":73},"end":{"line":138,"column":115}},"type":"default-arg","locations":[{"start":{"line":138,"column":86},"end":{"line":138,"column":115}}],"line":138},"19":{"loc":{"start":{"line":160,"column":4},"end":{"line":161,"column":20}},"type":"if","locations":[{"start":{"line":160,"column":4},"end":{"line":161,"column":20}},{"start":{"line":160,"column":4},"end":{"line":161,"column":20}}],"line":160},"20":{"loc":{"start":{"line":174,"column":11},"end":{"line":174,"column":69}},"type":"binary-expr","locations":[{"start":{"line":174,"column":11},"end":{"line":174,"column":26}},{"start":{"line":174,"column":30},"end":{"line":174,"column":69}}],"line":174},"21":{"loc":{"start":{"line":196,"column":11},"end":{"line":196,"column":69}},"type":"binary-expr","locations":[{"start":{"line":196,"column":11},"end":{"line":196,"column":26}},{"start":{"line":196,"column":30},"end":{"line":196,"column":69}}],"line":196}},"s":{"0":1,"1":10,"2":0,"3":11,"4":10,"5":10,"6":0,"7":0,"8":0,"9":0,"10":20,"11":11,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":2,"21":2,"22":2,"23":1,"24":1,"25":2,"26":2,"27":2,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":8,"36":4,"37":4,"38":4,"39":0,"40":0,"41":0,"42":1,"43":8,"44":1,"45":1,"46":6,"47":6,"48":6,"49":6,"50":6,"51":6,"52":0,"53":6,"54":5,"55":6,"56":5,"57":1,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":1,"67":2,"68":2,"69":2,"70":2,"71":1,"72":1,"73":1,"74":1,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":1,"83":0,"84":0,"85":0,"86":0,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":0,"96":0,"97":0,"98":0,"99":1},"f":{"0":11,"1":10,"2":0,"3":11,"4":10,"5":0,"6":20,"7":2,"8":2,"9":2,"10":2,"11":8,"12":8,"13":6,"14":6,"15":5,"16":5,"17":0,"18":0,"19":2,"20":2,"21":1,"22":0,"23":0,"24":0,"25":0,"26":1,"27":1,"28":0,"29":0},"b":{"0":[1,1,1],"1":[10,0],"2":[11,11],"3":[10,10],"4":[11,11],"5":[1,1],"6":[1,1],"7":[4,4],"8":[4,0],"9":[0,0],"10":[8,0],"11":[8,8],"12":[4],"13":[0,6],"14":[6,6],"15":[0,6],"16":[5,3],"17":[0,0],"18":[2],"19":[0,0],"20":[0,0],"21":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/util.ts","sources":["/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/lib/util.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AccountInfo,\n  Commitment,\n  Connection,\n  GetProgramAccountsConfig,\n  PublicKey,\n} from \"@solana/web3.js\";\nimport {\n  GATEKEEPER_NONCE_SEED_STRING,\n  GATEWAY_TOKEN_ADDRESS_SEED,\n  PROGRAM_ID,\n  SOLANA_COMMITMENT,\n} from \"./constants\";\nimport { GatewayToken, ProgramAccountResponse, State } from \"../types\";\nimport { GatewayTokenData, GatewayTokenState } from \"./GatewayTokenData\";\nimport { mapEnumToFeatureName, NetworkFeature } from \"./GatewayNetworkData\";\n\n/**\n * Derive the address of the gatekeeper PDA for this gatekeeper\n * @param authority The gatekeeper\n * @param network The network\n */\nexport const getGatekeeperAccountAddress = async (\n  authority: PublicKey,\n  network: PublicKey\n): Promise<PublicKey> => {\n  const publicKeyNonce = await PublicKey.findProgramAddress(\n    [\n      authority.toBuffer(),\n      network.toBuffer(),\n      Buffer.from(GATEKEEPER_NONCE_SEED_STRING, \"utf8\"),\n    ],\n    PROGRAM_ID\n  );\n  return publicKeyNonce[0];\n};\n\n/**\n * Derive the address of the gateway token PDA for this owner address and optional seed.\n * @param owner The owner of the gateway token\n * @param gatekeeperNetwork The network of the gateway token\n * @param seed An 8-byte seed array, used to add multiple tokens to the same owner. Must be unique to each token, if present\n */\nexport const getGatewayTokenAddressForOwnerAndGatekeeperNetwork = async (\n  owner: PublicKey,\n  gatekeeperNetwork: PublicKey,\n  seed?: Uint8Array\n): Promise<PublicKey> => {\n  const additionalSeed = seed\n    ? Buffer.from(seed)\n    : Buffer.from([0, 0, 0, 0, 0, 0, 0, 0]);\n  if (additionalSeed.length != 8) {\n    throw new Error(\n      \"Additional Seed has length \" +\n        additionalSeed.length +\n        \" instead of 8 when calling getGatewayTokenAddressForOwnerAndGatekeeperNetwork.\"\n    );\n  }\n  const seeds = [\n    owner.toBuffer(),\n    Buffer.from(GATEWAY_TOKEN_ADDRESS_SEED, \"utf8\"),\n    additionalSeed,\n    gatekeeperNetwork.toBuffer(),\n  ];\n\n  const publicKeyNonce = await PublicKey.findProgramAddress(seeds, PROGRAM_ID);\n  return publicKeyNonce[0];\n};\n\n// Based on solana/integration-lib/src/state.rs\n// If the optional the parent-gateway-token field is populated, this value will be\n// 34 (2 + 32) instead. TODO IDCOM-320 restructure the gateway token accounts to put\n// all optional values at the end of the struct to simplify account parsing a little\nconst GATEWAY_TOKEN_ACCOUNT_OWNER_FIELD_OFFSET = 2;\n// As above, if optional fields are present, this will differ. TODO IDCOM-320 fixes this\nconst GATEWAY_TOKEN_ACCOUNT_GATEKEEPER_NETWORK_FIELD_OFFSET = 35;\n\nfunction fromGatewayTokenState(state: GatewayTokenState): State {\n  if (!!state.active) return State.ACTIVE;\n  if (!!state.revoked) return State.REVOKED;\n  if (!!state.frozen) return State.FROZEN;\n\n  throw new Error(\"Unrecognised state \" + JSON.stringify(state));\n}\n\nexport const dataToGatewayToken = (\n  data: GatewayTokenData,\n  publicKey: PublicKey\n): GatewayToken =>\n  new GatewayToken(\n    data.issuingGatekeeper.toPublicKey(),\n    data.gatekeeperNetwork.toPublicKey(),\n    data.owner.toPublicKey(),\n    fromGatewayTokenState(data.state),\n    publicKey,\n    PROGRAM_ID,\n    data.expiry?.toNumber()\n  );\n\n/**\n * Find all gateway tokens for a user on a gatekeeper network, optionally filtering out revoked tokens.\n *\n * Warning - this uses the Solana getProgramAccounts RPC endpoint, which is inefficient and may be\n * blocked by some RPC services.\n *\n * @param connection A solana connection object\n * @param owner The token owner\n * @param gatekeeperNetwork The network to find a token for\n * @param {boolean=false} includeRevoked If false (default), filter out revoked tokens\n * @returns {Promise<GatewayToken[]>} All tokens for the owner\n */\nexport const findGatewayTokens = async (\n  connection: Connection,\n  owner: PublicKey,\n  gatekeeperNetwork: PublicKey,\n  includeRevoked = false\n): Promise<GatewayToken[]> => {\n  const ownerFilter = {\n    memcmp: {\n      offset: GATEWAY_TOKEN_ACCOUNT_OWNER_FIELD_OFFSET,\n      bytes: owner.toBase58(),\n    },\n  };\n  const gatekeeperNetworkFilter = {\n    memcmp: {\n      offset: GATEWAY_TOKEN_ACCOUNT_GATEKEEPER_NETWORK_FIELD_OFFSET,\n      bytes: gatekeeperNetwork?.toBase58(),\n    },\n  };\n  const filters = [ownerFilter, gatekeeperNetworkFilter];\n  const accountsResponse = await connection.getProgramAccounts(PROGRAM_ID, {\n    filters,\n  });\n\n  if (!accountsResponse) return [];\n\n  const toGatewayToken = ({\n    pubkey,\n    account,\n  }: ProgramAccountResponse): GatewayToken =>\n    dataToGatewayToken(GatewayTokenData.fromAccount(account.data), pubkey);\n\n  return accountsResponse\n    .map(toGatewayToken)\n    .filter(\n      (gatewayToken) => gatewayToken.state !== State.REVOKED || includeRevoked\n    );\n};\n\n/**\n * Get a gateway token for the owner and network, if it exists.\n * @param connection A solana connection object\n * @param owner The token owner\n * @param gatekeeperNetwork The network to find a token for\n * @returns Promise<GatewayToken | null> An unrevoked token, if one exists for the owner\n */\nexport const findGatewayToken = async (\n  connection: Connection,\n  owner: PublicKey,\n  gatekeeperNetwork: PublicKey\n): Promise<GatewayToken | null> => {\n  const gatewayTokenAddress: PublicKey =\n    await getGatewayTokenAddressForOwnerAndGatekeeperNetwork(\n      owner,\n      gatekeeperNetwork\n    );\n  const account = await connection.getAccountInfo(\n    gatewayTokenAddress,\n    SOLANA_COMMITMENT\n  );\n\n  if (!account) return null;\n\n  return dataToGatewayToken(\n    GatewayTokenData.fromAccount(account.data),\n    gatewayTokenAddress\n  );\n};\n\n/**\n * Register a callback to be called whenever a gateway token changes state\n * @param connection A solana connection object\n * @param gatewayTokenAddress The address of the gateway token\n * @param callback The callback to register\n * @param commitment The solana commitment level at which to register gateway token changes. Defaults to 'confirmed'\n * @return The subscription id\n */\nexport const onGatewayTokenChange = (\n  connection: Connection,\n  gatewayTokenAddress: PublicKey,\n  callback: (gatewayToken: GatewayToken) => void,\n  commitment: Commitment = SOLANA_COMMITMENT\n): number => {\n  const accountCallback = (accountInfo: AccountInfo<Buffer>) => {\n    const gatewayToken = dataToGatewayToken(\n      GatewayTokenData.fromAccount(accountInfo.data),\n      gatewayTokenAddress\n    );\n    callback(gatewayToken);\n  };\n  return connection.onAccountChange(\n    gatewayTokenAddress,\n    accountCallback,\n    commitment\n  );\n};\n\n/**\n * Stops listening to gateway state changes\n * @param connection A solana connection object\n * @param id The subscription id to deregister\n */\nexport const removeAccountChangeListener = (\n  connection: Connection,\n  id: number\n): Promise<void> => connection.removeAccountChangeListener(id);\n\n/**\n * Lookup the gateway token at a given address\n * @param connection A solana connection object\n * @param gatewayTokenAddress The address of the gateway token\n */\nexport const getGatewayToken = async (\n  connection: Connection,\n  gatewayTokenAddress: PublicKey\n): Promise<GatewayToken | null> => {\n  const account = await connection.getAccountInfo(\n    gatewayTokenAddress,\n    SOLANA_COMMITMENT\n  );\n\n  if (!account) return null;\n\n  return dataToGatewayToken(\n    GatewayTokenData.fromAccount(account.data),\n    gatewayTokenAddress\n  );\n};\n\n/**\n * Returns whether or not a gatekeeper exists from a network and authority\n * @param connection A solana connection\n * @param gatekeeperAuthority The authority of the gatekeeper\n * @param gatekeeperNetwork The network of the gatekeeper\n */\nexport const gatekeeperExists = async (\n  connection: Connection,\n  gatekeeperAuthority: PublicKey,\n  gatekeeperNetwork: PublicKey\n): Promise<boolean> => {\n  const gatekeeperAccount = await getGatekeeperAccountAddress(\n    gatekeeperAuthority,\n    gatekeeperNetwork\n  );\n  const account = await connection.getAccountInfo(\n    gatekeeperAccount,\n    SOLANA_COMMITMENT\n  );\n\n  return account != null && account.owner == PROGRAM_ID;\n};\n\n/**\n * Derive the address of the feature PDA\n * @param featureName The name of the feature to set.\n * @param network The network\n */\nexport const getFeatureAccountAddress = async (\n  feature: NetworkFeature,\n  network: PublicKey\n): Promise<PublicKey> => {\n  const featureName = mapEnumToFeatureName(feature.enum);\n\n  const publicKeyNonce = await PublicKey.findProgramAddress(\n    [network.toBytes(), Buffer.from(featureName, \"utf8\")],\n    PROGRAM_ID\n  );\n  return publicKeyNonce[0];\n};\n\n/**\n * Return true if an address feature exists.\n * @param featureName The name of the feature to set.\n * @param network The network\n */\nexport const featureExists = async (\n  connection: Connection,\n  feature: NetworkFeature,\n  network: PublicKey\n): Promise<boolean> => {\n  const featureAccountAddress = await getFeatureAccountAddress(\n    feature,\n    network\n  );\n\n  const account = await connection.getAccountInfo(\n    featureAccountAddress,\n    SOLANA_COMMITMENT\n  );\n\n  return account != null && account.owner == PROGRAM_ID;\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"67b72d361840df0722fa4f6dcd08ebb31630fe14","contentHash":"20d2a6a24ccb633562ee9e4ecf31fbf04e40ac500b2e538cc7cc44b86fecf885"},"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/types/index.ts":{"path":"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/types/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"2":{"start":{"line":4,"column":27},"end":{"line":4,"column":61}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":37}},"4":{"start":{"line":7,"column":0},"end":{"line":11,"column":50}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":31}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":33}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":31}},"8":{"start":{"line":16,"column":8},"end":{"line":16,"column":51}},"9":{"start":{"line":17,"column":8},"end":{"line":17,"column":51}},"10":{"start":{"line":18,"column":8},"end":{"line":18,"column":27}},"11":{"start":{"line":19,"column":8},"end":{"line":19,"column":27}},"12":{"start":{"line":20,"column":8},"end":{"line":20,"column":35}},"13":{"start":{"line":21,"column":8},"end":{"line":21,"column":35}},"14":{"start":{"line":22,"column":8},"end":{"line":22,"column":37}},"15":{"start":{"line":25,"column":8},"end":{"line":25,"column":65}},"16":{"start":{"line":28,"column":20},"end":{"line":28,"column":49}},"17":{"start":{"line":29,"column":8},"end":{"line":29,"column":58}},"18":{"start":{"line":32,"column":27},"end":{"line":32,"column":92}},"19":{"start":{"line":33,"column":8},"end":{"line":33,"column":63}},"20":{"start":{"line":36,"column":8},"end":{"line":36,"column":162}},"21":{"start":{"line":39,"column":0},"end":{"line":39,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":1},"end":{"line":7,"column":2}},"loc":{"start":{"line":7,"column":18},"end":{"line":11,"column":1}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":15,"column":90},"end":{"line":23,"column":5}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":14},"end":{"line":26,"column":5}},"line":24},"3":{"name":"(anonymous_3)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":17},"end":{"line":30,"column":5}},"line":27},"4":{"name":"(anonymous_4)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":41},"end":{"line":34,"column":5}},"line":31},"5":{"name":"(anonymous_5)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":35},"end":{"line":37,"column":5}},"line":35}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":11},"end":{"line":11,"column":48}},"type":"binary-expr","locations":[{"start":{"line":11,"column":11},"end":{"line":11,"column":24}},{"start":{"line":11,"column":29},"end":{"line":11,"column":47}}],"line":11},"1":{"loc":{"start":{"line":25,"column":15},"end":{"line":25,"column":64}},"type":"binary-expr","locations":[{"start":{"line":25,"column":15},"end":{"line":25,"column":42}},{"start":{"line":25,"column":46},"end":{"line":25,"column":64}}],"line":25},"2":{"loc":{"start":{"line":29,"column":15},"end":{"line":29,"column":57}},"type":"binary-expr","locations":[{"start":{"line":29,"column":15},"end":{"line":29,"column":32}},{"start":{"line":29,"column":36},"end":{"line":29,"column":57}}],"line":29},"3":{"loc":{"start":{"line":36,"column":131},"end":{"line":36,"column":160}},"type":"binary-expr","locations":[{"start":{"line":36,"column":131},"end":{"line":36,"column":141}},{"start":{"line":36,"column":145},"end":{"line":36,"column":160}}],"line":36}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":8,"9":8,"10":8,"11":8,"12":8,"13":8,"14":8,"15":0,"16":0,"17":0,"18":1,"19":1,"20":0,"21":1},"f":{"0":1,"1":8,"2":0,"3":0,"4":1,"5":0},"b":{"0":[1,1],"1":[0,0],"2":[0,0],"3":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/types/index.ts","sources":["/Users/mriedel/Development/identity-com/on-chain-identity-gateway/solana/gateway-ts/src/types/index.ts"],"names":[],"mappings":";;;AACA,8DAA2D;AAC3D,sCAAiD;AAMjD,IAAY,KAIX;AAJD,WAAY,KAAK;IACf,0BAAiB,CAAA;IACjB,4BAAmB,CAAA;IACnB,0BAAiB,CAAA;AACnB,CAAC,EAJW,KAAK,GAAL,aAAK,KAAL,aAAK,QAIhB;AACD,MAAa,YAAY;IACvB;IACE,oDAAoD;IAC3C,iBAA4B,EAC5B,iBAA4B,EAC5B,KAAgB,EAChB,KAAY,EACZ,SAAoB,EACpB,SAAoB,EACpB,UAAmB;QANnB,sBAAiB,GAAjB,iBAAiB,CAAW;QAC5B,sBAAiB,GAAjB,iBAAiB,CAAW;QAC5B,UAAK,GAAL,KAAK,CAAW;QAChB,UAAK,GAAL,KAAK,CAAO;QACZ,cAAS,GAAT,SAAS,CAAW;QACpB,cAAS,GAAT,SAAS,CAAW;QACpB,eAAU,GAAV,UAAU,CAAS;IAC3B,CAAC;IAEJ,OAAO;QACL,OAAO,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;IAC3D,CAAC;IAEO,UAAU;QAChB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;QAC1C,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC;IACpD,CAAC;IAED,MAAM,CAAC,WAAW,CAChB,WAAgC,EAChC,GAAc;QAEd,MAAM,UAAU,GAAG,mCAAgB,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAClE,OAAO,IAAA,yBAAkB,EAAC,UAAU,EAAE,GAAG,CAAC,CAAC;IAC7C,CAAC;IAEM,MAAM,CAAC,EACZ,KAAK,EACL,UAAU,GAIX;QACC,OAAO,IAAI,YAAY,CACrB,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,KAAK,EACV,KAAK,EACL,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,SAAS,EACd,UAAU,IAAI,IAAI,CAAC,UAAU,CAC9B,CAAC;IACJ,CAAC;CACF;AA9CD,oCA8CC","sourcesContent":["import { AccountInfo, PublicKey } from \"@solana/web3.js\";\nimport { GatewayTokenData } from \"../lib/GatewayTokenData\";\nimport { dataToGatewayToken } from \"../lib/util\";\n\nexport declare type DeepPartial<T> = {\n  [P in keyof T]?: DeepPartial<T[P]>;\n};\n\nexport enum State {\n  ACTIVE = \"ACTIVE\",\n  REVOKED = \"REVOKED\",\n  FROZEN = \"FROZEN\",\n}\nexport class GatewayToken {\n  constructor(\n    //  the key used to reference the issuing gatekeeper\n    readonly issuingGatekeeper: PublicKey,\n    readonly gatekeeperNetwork: PublicKey,\n    readonly owner: PublicKey,\n    readonly state: State,\n    readonly publicKey: PublicKey,\n    readonly programId: PublicKey,\n    readonly expiryTime?: number\n  ) {}\n\n  isValid(): boolean {\n    return this.state === State.ACTIVE && !this.hasExpired();\n  }\n\n  private hasExpired(): boolean {\n    const now = Math.floor(Date.now() / 1000);\n    return !!this.expiryTime && now > this.expiryTime;\n  }\n\n  static fromAccount(\n    accountInfo: AccountInfo<Buffer>,\n    key: PublicKey\n  ): GatewayToken {\n    const parsedData = GatewayTokenData.fromAccount(accountInfo.data);\n    return dataToGatewayToken(parsedData, key);\n  }\n\n  public update({\n    state,\n    expiryTime,\n  }: {\n    state: State;\n    expiryTime?: number;\n  }): GatewayToken {\n    return new GatewayToken(\n      this.issuingGatekeeper,\n      this.gatekeeperNetwork,\n      this.owner,\n      state,\n      this.publicKey,\n      this.programId,\n      expiryTime || this.expiryTime\n    );\n  }\n}\n\nexport type ProgramAccountResponse = {\n  pubkey: PublicKey;\n  account: AccountInfo<Buffer>;\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ad59435500686109595cd4358fa068a6f20e26c7","contentHash":"ccf431ef29587d5c110b0e6578c6c1c119a5436b92be1f7925ebdcf90ba4885d"}}