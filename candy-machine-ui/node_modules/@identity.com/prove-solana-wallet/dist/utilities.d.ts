import { Commitment, Connection, Keypair, PublicKey, Transaction } from '@solana/web3.js';
export declare type SignCallback = (transaction: Transaction) => Promise<Transaction>;
export declare const defaultSigner: (keypair: Keypair) => SignCallback;
declare type KeyMaterial = Keypair | PublicKey;
export declare const isKeypair: (k: KeyMaterial) => k is Keypair;
export declare const pubkeyOf: (k: KeyMaterial) => PublicKey;
export declare type ClusterUrlMap = Record<string, string>;
export declare type Config = {
    cluster: string;
    commitment: Commitment;
    supportedClusterUrls?: ClusterUrlMap;
    recentBlockCheck: boolean;
    connection?: Connection;
};
export declare const DEFAULT_CONFIG: Config;
export declare const getClusterUrl: (config: Config) => string;
export declare const makeTransaction: (connection: Connection, fromPubkey: PublicKey, toPubkey: PublicKey, amount: number) => Promise<Transaction>;
export declare const checkRecentBlock: (connection: Connection, transaction: Transaction) => Promise<void>;
export declare const checkTransactionNotBroadcast: (connection: Connection, transaction: Transaction) => Promise<void>;
export declare const checkTransactionParameters: (transaction: Transaction) => void;
export declare const checkSignatures: (transaction: Transaction, publicKey: PublicKey) => void;
export {};
